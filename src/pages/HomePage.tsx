/**
 * @file: HomePage.tsx
 * @description: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ PizzaNat Web —Å –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
 * @dependencies: Mantine, ProductsContext, AppStoreLinks
 * @created: 2025-01-07
 */

import { useEffect } from 'react'
import { useNavigate } from 'react-router-dom'
import {
  Container,
  Stack,
  Title,
  Card,
  Badge,
  Grid,
  Center,
  Loader,
  Image,
  Text,
  Group,
  Button
} from '@mantine/core'
import { IconPizza } from '@tabler/icons-react'
import { useAuth } from '../contexts/AuthContext'
import { useProducts } from '../contexts/ProductsContext'
import { AppStoreLinks } from '../components/AppStoreLinks'

export function HomePage() {
  const navigate = useNavigate()
  const { user } = useAuth()
  const { 
    state: { 
      products, 
      productsLoading, 
      productsError 
    },
    addToCart,
    loadProducts
  } = useProducts()

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  useEffect(() => {
    loadProducts({ limit: 8, is_popular: true })
  }, [])

  return (
    <Container size="lg">
      <Stack gap="lg">
        {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        <Card shadow="sm" padding="lg" radius="md" withBorder>
          <Stack gap="md">
            <Group justify="space-between">
              <Title order={2} c="orange.7">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.fullName || '–≤ PizzaNat'}! üçï
              </Title>
              <Badge color="green" variant="light">–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω</Badge>
            </Group>
            <Text c="dimmed">
              –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! 
              –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user?.username || user?.phoneNumber || user?.telegramId}
            </Text>
            <Button 
              color="orange" 
              size="md"
              onClick={() => navigate('/menu')}
            >
              –ü–µ—Ä–µ–π—Ç–∏ –∫ –º–µ–Ω—é
            </Button>
          </Stack>
        </Card>

        {/* –ü—Ä–æ–¥—É–∫—Ç—ã –∏–∑ API */}
        <Title order={3} c="dark">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–∏—Ü—Ü—ã</Title>
        
        {productsLoading && (
          <Center>
            <Loader size="md" />
            <Text ml="md">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...</Text>
          </Center>
        )}
        
        {productsError && (
          <Card shadow="sm" padding="lg" radius="md" withBorder bg="red.0">
            <Text c="red.7">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {productsError}</Text>
          </Card>
        )}
        
        {!productsLoading && !productsError && products && products.length > 0 && (
          <Grid>
            {products.slice(0, 8).map((product) => (
              <Grid.Col key={product.id} span={{ base: 12, sm: 6, md: 4 }}>
                <Card shadow="sm" padding="lg" radius="md" withBorder>
                  <Card.Section>
                    {product.images && product.images.length > 0 ? (
                      <Image
                        src={product.images.find(img => img.is_primary)?.url || product.images[0]?.url}
                        height={160}
                        alt={product.name}
                        fallbackSrc="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='160' height='160' viewBox='0 0 24 24'%3E%3Cpath fill='%23ff8000' d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z'/%3E%3C/svg%3E"
                      />
                    ) : (
                      <div style={{ 
                        height: 160, 
                        backgroundColor: '#f8f9fa',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center'
                      }}>
                        <IconPizza size={48} color="#ff8000" />
                      </div>
                    )}
                  </Card.Section>

                  <Group justify="space-between" mt="md" mb="xs">
                    <Text fw={500} lineClamp={2}>{product.name}</Text>
                    <Badge 
                      color={product.is_available ? "orange" : "gray"} 
                      variant="light"
                    >
                      {product.base_price} ‚ÇΩ
                    </Badge>
                  </Group>

                  <Text size="sm" c="dimmed" lineClamp={3}>
                    {product.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
                  </Text>

                  <Group mt="md" grow>
                    <Button 
                      variant="outline"
                      color="orange" 
                      radius="md"
                      onClick={() => navigate(`/product/${product.id}`)}
                    >
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </Button>
                    <Button 
                      color="orange" 
                      radius="md"
                      disabled={!product.is_available}
                      onClick={() => addToCart({ 
                        product_id: product.id, 
                        quantity: 1 
                      })}
                    >
                      {product.is_available ? '–í –∫–æ—Ä–∑–∏–Ω—É' : '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ'}
                    </Button>
                  </Group>
                </Card>
              </Grid.Col>
            ))}
          </Grid>
        )}
        
        {!productsLoading && !productsError && (!products || products.length === 0) && (
          <Card shadow="sm" padding="lg" radius="md" withBorder bg="yellow.0">
            <Text c="yellow.7">–ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</Text>
          </Card>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ "–°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ" */}
        {!productsLoading && !productsError && products && products.length > 0 && (
          <Center>
            <Button 
              variant="outline" 
              color="orange" 
              size="md"
              onClick={() => navigate('/menu')}
            >
              –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –±–ª—é–¥–∞
            </Button>
          </Center>
        )}

        {/* –°—Å—ã–ª–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */}
        <AppStoreLinks 
          googlePlayUrl="#google-play-placeholder"
          ruStoreUrl="#rustore-placeholder"
        />

        {/* –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –æ–±–Ω–æ–≤–ª–µ–Ω */}
        <Card shadow="sm" padding="lg" radius="md" withBorder bg="green.0">
          <Stack gap="xs">
            <Title order={4} c="green.7">–°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –§–∞–∑–∞ 3 –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ!</Title>
            <Text size="sm" c="dimmed">
              ‚úÖ –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞<br/>
              ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Mantine<br/>
              ‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å<br/>
              ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (Email, SMS, Telegram)<br/>
              ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è<br/>
              ‚úÖ –ü–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤<br/>
              ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –ø—Ä–æ–¥—É–∫—Ç–æ–≤<br/>
              ‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏<br/>
              ‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤<br/>
              üîÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏<br/>
              ‚è≥ –ö–æ—Ä–∑–∏–Ω–∞ –∏ –∑–∞–∫–∞–∑—ã<br/>
              ‚è≥ –°–∏—Å—Ç–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π
            </Text>
          </Stack>
        </Card>
      </Stack>
    </Container>
  )
} 