/**
 * @file: KidsMenu.tsx
 * @description: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–µ—Ç—Å–∫–æ–≥–æ –º–µ–Ω—é –¥–ª—è SEO-—Å—Ç—Ä–∞–Ω–∏—Ü
 * @dependencies: Mantine, ProductCard
 * @created: 2025-01-27
 */

import React, { useEffect, useState } from 'react'
import {
  Container,
  Stack,
  Title,
  Text,
  Card,
  Button,
  Group,
  SimpleGrid,
  Badge,
  Alert,
  Box
} from '@mantine/core'
import {
  IconPizza,
  IconShoppingCart,
  IconHeart,
  IconStars,
  IconCake
} from '@tabler/icons-react'
import { useNavigate } from 'react-router-dom'
import { useProducts } from '../../contexts/ProductsContext'
import { ProductCardImage } from '../common/OptimizedImage'

interface KidsMenuProps {
  showTitle?: boolean
  maxProducts?: number
}

// –°–ø–∏—Å–æ–∫ ID –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –¥–ª—è –¥–µ—Ç–µ–π
const KIDS_FRIENDLY_PRODUCTS = [
  1, // –ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞
  2, // –ì—Ä–∏–±–Ω–∞—è –ø–∏—Ü—Ü–∞
  4, // –ì–∞–≤–∞–π—Å–∫–∞—è –ø–∏—Ü—Ü–∞  
  6, // –î–æ–º–∞—à–Ω—è—è –ø–∏—Ü—Ü–∞
  10, // –°—ã—Ä–Ω–∞—è –ø–∏—Ü—Ü–∞
  11, // –ë—É—Ä–≥–µ—Ä –î–∏–º–±—É—Ä–≥–µ—Ä
  12, // –ë—É—Ä–≥–µ—Ä –ß–∏–∫–µ–Ω–±—É—Ä–≥–µ—Ä
  15, // –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ 100–≥—Ä
  16, // –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ 150–≥—Ä
  17, // –ù–∞–≥–µ—Ç—Å—ã 6 —à—Ç—É–∫
  18, // –ù–∞–≥–µ—Ç—Å—ã 9 —à—Ç—É–∫
  19, // –ù–∞–≥–µ—Ç—Å—ã 12 —à—Ç—É–∫
]

export const KidsMenu: React.FC<KidsMenuProps> = ({ 
  showTitle = true, 
  maxProducts = 8 
}) => {
  const navigate = useNavigate()
  const { products, loadProducts, productsLoading } = useProducts()
  const [kidsProducts, setKidsProducts] = useState<any[]>([])

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
    if (!products || products.length === 0) {
      loadProducts({ size: 50, page: 0 })
    }
  }, [products, loadProducts])

  useEffect(() => {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –¥–µ—Ç–µ–π
    if (products && products.length > 0) {
      const filtered = products
        .filter(product => KIDS_FRIENDLY_PRODUCTS.includes(product.id))
        .slice(0, maxProducts)
      setKidsProducts(filtered)
    }
  }, [products, maxProducts])

  const handleProductClick = (productId: number) => {
    navigate(`/product/${productId}`)
  }

  const handleOrderClick = () => {
    navigate('/menu')
  }

  if (productsLoading) {
    return (
      <Card shadow="sm" radius="md" withBorder p="xl">
        <Text ta="center">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ—Ç—Å–∫–æ–≥–æ –º–µ–Ω—é...</Text>
      </Card>
    )
  }

  return (
    <Card shadow="lg" radius="md" withBorder p="xl" bg="orange.0">
      <Stack gap="lg">
        {showTitle && (
          <Group justify="center">
            <IconPizza size={32} color="orange" />
            <Title order={2} ta="center" c="orange.7">
              üçï –î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
            </Title>
            <IconCake size={32} color="orange" />
          </Group>
        )}

        <Text size="lg" ta="center" c="dark.6">
          –ù–µ –Ω—É–∂–Ω–æ –≥–æ—Ç–æ–≤–∏—Ç—å –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! –ó–∞–∫–∞–∂–∏—Ç–µ –≤–∫—É—Å–Ω—É—é –ø–∏—Ü—Ü—É, –Ω–∞–≥–µ—Ç—Å—ã –∏ –∫–∞—Ä—Ç–æ—à–∫—É —Ñ—Ä–∏. 
          –î–µ—Ç–∏ –±—É–¥—É—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ, –∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º!
        </Text>

        <Alert color="green" variant="light" icon={<IconHeart size={20} />}>
          <Text fw={600}>–ü–æ—á–µ–º—É –¥–µ—Ç–∏ –ª—é–±—è—Ç –Ω–∞—à—É –µ–¥—É?</Text>
          <Text size="sm">
            ‚ú® –°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã ‚Ä¢ üßÄ –ú–Ω–æ–≥–æ —Å—ã—Ä–∞ ‚Ä¢ üçñ –°–æ—á–Ω–æ–µ –º—è—Å–æ ‚Ä¢ ü•î –•—Ä—É—Å—Ç—è—â–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞
          </Text>
        </Alert>

        {kidsProducts.length > 0 ? (
          <SimpleGrid cols={{ base: 2, sm: 3, md: 4 }} spacing="md">
            {kidsProducts.map((product) => (
              <Card 
                key={product.id} 
                shadow="sm" 
                radius="md" 
                withBorder 
                p="sm"
                style={{ cursor: 'pointer' }}
                onClick={() => handleProductClick(product.id)}
              >
                <Stack gap="xs">
                  <Box pos="relative">
                    <ProductCardImage
                      src={product.imageUrl}
                      alt={product.name}
                      h={120}
                      style={{ objectFit: 'cover' }}
                    />
                    {(product.name.toLowerCase().includes('–ø–∏—Ü—Ü–∞') || 
                      product.name.toLowerCase().includes('–Ω–∞–≥–µ—Ç—Å—ã')) && (
                      <Badge 
                        size="sm" 
                        color="pink" 
                        pos="absolute" 
                        top={5} 
                        right={5}
                      >
                        –•–ò–¢
                      </Badge>
                    )}
                  </Box>
                  
                  <Stack gap={4}>
                    <Text fw={600} size="sm" lineClamp={2}>
                      {product.name}
                    </Text>
                    <Group justify="space-between" align="center">
                      <Text fw={700} c="orange.7" size="lg">
                        {product.price}‚ÇΩ
                      </Text>
                      <IconStars size={16} color="orange" />
                    </Group>
                  </Stack>
                </Stack>
              </Card>
            ))}
          </SimpleGrid>
        ) : (
          <Text ta="center" c="dimmed">
            –î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...
          </Text>
        )}

        <Group justify="center" gap="md">
          <Button
            size="lg"
            color="orange"
            leftSection={<IconShoppingCart size={20} />}
            onClick={handleOrderClick}
          >
            –ó–∞–∫–∞–∑–∞—Ç—å –¥–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é
          </Button>
          <Button
            size="lg"
            variant="outline"
            color="green"
            component="a"
            href="tel:+79021053434"
          >
            –ü–æ–∑–≤–æ–Ω–∏—Ç—å: +7(902)105-34-34
          </Button>
        </Group>

        <Box bg="yellow.0" p="md" radius="md">
          <Group justify="center" gap="md">
            <IconCake size={24} color="orange" />
            <Stack gap={4} style={{ flex: 1 }}>
              <Text fw={600} c="orange.7" ta="center">
                üí° –°–æ–≤–µ—Ç: –ö–æ–º–±–æ –¥–ª—è –¥–µ—Ç—Å–∫–æ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
              </Text>
              <Text size="sm" ta="center" c="dark.6">
                –ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ + –ù–∞–≥–µ—Ç—Å—ã 9—à—Ç + –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å —Ñ—Ä–∏ 150–≥—Ä = –°—á–∞—Å—Ç–ª–∏–≤—ã–µ –¥–µ—Ç–∏! üéâ
              </Text>
            </Stack>
          </Group>
        </Box>

        <Text size="sm" ta="center" c="dimmed" fs="italic">
          –í—Å–µ –±–ª—é–¥–∞ –≥–æ—Ç–æ–≤—è—Ç—Å—è –∏–∑ —Å–≤–µ–∂–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –¥–µ—Ç–µ–π –æ—Ç 3 –ª–µ—Ç
        </Text>
      </Stack>
    </Card>
  )
}
