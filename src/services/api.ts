/**
 * @file: api.ts
 * @description: –ë–∞–∑–æ–≤—ã–π API —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å backend PizzaNat
 * @dependencies: axios, —Ç–∏–ø—ã API
 * @created: 2025-01-07
 */

import axios from 'axios'
import type { AxiosInstance, AxiosResponse } from 'axios'
import type { ApiError } from '../types/api'
import { getApiBaseUrl, API_CONFIG, logApiRequest, logApiResponse } from '../config/api'

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios
const apiClient: AxiosInstance = axios.create({
  baseURL: getApiBaseUrl(),
  timeout: API_CONFIG.TIMEOUT,
  headers: API_CONFIG.DEFAULT_HEADERS,
  withCredentials: false, // PizzaNat API –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç cookies
})

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∏–∑ localStorage
export const getAuthToken = (): string | null => {
  try {
    const tokens = localStorage.getItem('pizzanat_tokens')
    if (tokens) {
      const parsedTokens = JSON.parse(tokens)
      return parsedTokens.access_token || null
    }
    return null
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:', error)
    return null
  }
}

// –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
apiClient.interceptors.request.use(
  (config) => {
    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –≤ development
    logApiRequest(config.method?.toUpperCase() || 'GET', config.url || '', config.data)

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization
    const token = getAuthToken()
    if (token) {
      config.headers.Authorization = `Bearer ${token}`
    }

    return config
  },
  (error) => {
    return Promise.reject(error)
  }
)

// –ò–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤
apiClient.interceptors.response.use(
  (response: AxiosResponse) => {
    // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ development
    logApiResponse(
      response.config.method?.toUpperCase() || 'GET',
      response.config.url || '',
      response.data
    )
    return response
  },
  (error) => {
    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ development
    logApiResponse(
      error.config?.method?.toUpperCase() || 'GET',
      error.config?.url || '',
      null,
      error
    )

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏
    const status = error.response?.status
    const url = error.config?.url || ''

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401 - –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, 403 - –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞)
    if (status === 401 || status === 403) {
      console.warn(`üîí –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ${status} –¥–ª—è ${url}`)
      
      // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω—ã –ø—Ä–∏ 401/403
      localStorage.removeItem('pizzanat_tokens')
      localStorage.removeItem('pizzanat_user')
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω–µ –Ω–∞ –Ω–µ–π
      if (!window.location.pathname.includes('/auth')) {
        console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏')
        window.location.href = '/auth'
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ endpoints –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const protectedEndpoints = ['/cart', '/orders', '/admin', '/payments']
    const isProtectedEndpoint = protectedEndpoints.some(endpoint => url.includes(endpoint))
    
    if (isProtectedEndpoint && status === 200) {
      console.warn(`‚ö†Ô∏è –ó–∞—â–∏—â–µ–Ω–Ω—ã–π endpoint ${url} –≤–µ—Ä–Ω—É–ª 200 –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - —ç—Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!`)
    }

    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è –æ—à–∏–±–æ–∫ –¥–ª—è –î–ò–ú–ë–û –ü–∏—Ü—Ü–∞ API
    const apiError: ApiError = {
      code: error.response?.data?.error || error.code || 'UNKNOWN_ERROR',
      message: error.response?.data?.message || error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞',
      details: {
        ...error.response?.data,
        status,
        url,
        isProtectedEndpoint
      }
    }

    return Promise.reject(apiError)
  }
)

// –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è API —Å–µ—Ä–≤–∏—Å–æ–≤
export class BaseApiService {
  protected client = apiClient

  protected async get<T>(url: string, params?: Record<string, unknown>): Promise<T> {
    const response = await this.client.get<T>(url, { params })
    return response.data
  }

  protected async post<T>(url: string, data?: unknown): Promise<T> {
    const response = await this.client.post<T>(url, data)
    return response.data
  }

  protected async put<T>(url: string, data?: unknown): Promise<T> {
    const response = await this.client.put<T>(url, data)
    return response.data
  }

  protected async delete<T>(url: string): Promise<T> {
    const response = await this.client.delete<T>(url)
    return response.data
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export { apiClient }
export default apiClient