#!/bin/bash

# Health check —Å–∫—Ä–∏–ø—Ç –¥–ª—è –î–ò–ú–ë–û –ü–∏—Ü—Ü–∞
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BASE_URL="http://localhost:3478"
TIMEOUT=10
FAILED_CHECKS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –ø—Ä–æ–≤–µ—Ä–∫–∏
check_http() {
    local url=$1
    local description=$2
    local expected_code=${3:-200}
    
    if curl -f -s --max-time $TIMEOUT "$url" > /dev/null; then
        success "$description –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        error "$description –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
check_container() {
    local container_name=$1
    local description=$2
    
    if docker ps --format "table {{.Names}}\t{{.Status}}" | grep -q "$container_name.*Up"; then
        success "$description –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        error "$description –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
echo -e "${BLUE}üîç Health Check –¥–ª—è –î–ò–ú–ë–û –ü–∏—Ü—Ü–∞${NC}"
echo "================================="

info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
check_container "dimbopizza-web" "–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" || ((FAILED_CHECKS++))

if docker ps | grep -q "dimbopizza-nginx"; then
    check_container "dimbopizza-nginx" "Nginx" || ((FAILED_CHECKS++))
else
    info "Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è development)"
fi

echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP endpoints..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
check_http "$BASE_URL/health" "Health endpoint" || ((FAILED_CHECKS++))

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
check_http "$BASE_URL/" "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞" || ((FAILED_CHECKS++))

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
check_http "$BASE_URL/robots.txt" "robots.txt" || ((FAILED_CHECKS++))
check_http "$BASE_URL/sitemap.xml" "sitemap.xml" || ((FAILED_CHECKS++))

echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."

# –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
response_time=$(curl -o /dev/null -s -w "%{time_total}" "$BASE_URL/health")
if (( $(echo "$response_time < 2.0" | bc -l) )); then
    success "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${response_time}s (–æ—Ç–ª–∏—á–Ω–æ)"
else
    warning "–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${response_time}s (–º–µ–¥–ª–µ–Ω–Ω–æ)"
fi

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
if command -v docker &> /dev/null; then
    info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
    docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}" | grep dimbopizza
fi

echo ""
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
if docker-compose logs --tail=50 dimbopizza-web 2>/dev/null | grep -i "error\|fatal\|exception" > /dev/null; then
    warning "–ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:"
    docker-compose logs --tail=10 dimbopizza-web | grep -i "error\|fatal\|exception" | tail -3
else
    success "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi

echo ""
echo "================================="

# –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if [ $FAILED_CHECKS -eq 0 ]; then
    success "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! üéâ"
    echo -e "${GREEN}–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ${NC}"
    exit 0
else
    error "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $FAILED_CHECKS –ø—Ä–æ–±–ª–µ–º"
    echo -e "${RED}–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–∏–º–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞${NC}"
    exit 1
fi