/**
 * @file: generateProductSEOPages.js
 * @description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö SEO —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
 * @created: 2025-01-27
 */

const fs = require('fs')
const path = require('path')

// –ö–∞—Ä—Ç–∞ —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏
const transliterationMap = {
  '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'yo',
  '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
  '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
  '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
  '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
  '–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'Yo',
  '–ñ': 'Zh', '–ó': 'Z', '–ò': 'I', '–ô': 'Y', '–ö': 'K', '–õ': 'L', '–ú': 'M',
  '–ù': 'N', '–û': 'O', '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U',
  '–§': 'F', '–•': 'Kh', '–¶': 'Ts', '–ß': 'Ch', '–®': 'Sh', '–©': 'Sch',
  '–™': '', '–´': 'Y', '–¨': '', '–≠': 'E', '–Æ': 'Yu', '–Ø': 'Ya'
}

// –§—É–Ω–∫—Ü–∏—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏
function transliterate(text) {
  return text
    .split('')
    .map(char => transliterationMap[char] || char)
    .join('')
}

// –°–æ–∑–¥–∞–Ω–∏–µ URL-friendly slug
function createProductSlug(productName) {
  return transliterate(productName)
    .toLowerCase()
    .replace(/[^a-z0-9\s-]/g, '')
    .replace(/\s+/g, '-')
    .replace(/-+/g, '-')
    .replace(/^-|-$/g, '')
}

// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const products = [
  { id: 1, name: "–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", price: 380.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_margarita.png" },
  { id: 2, name: "–ì—Ä–∏–±–Ω–∞—è –ø–∏—Ü—Ü–∞", price: 469.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_gribnaya.png" },
  { id: 7, name: "–ì–∞–≤–∞–π—Å–∫–∞—è –ø–∏—Ü—Ü–∞", price: 480.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_gavaiyaskay.png" },
  { id: 8, name: "–ú—è—Å–Ω–∞—è –ø–∏—Ü—Ü–∞", price: 500.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_mzysnay.png" },
  { id: 10, name: "–ü–∏—Ü—Ü–∞ –ú–æ—Ä—Å–∫–∞—è", price: 510.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_karbonara.png" },
  { id: 4, name: "–ü–∏—Ü—Ü–∞ –°–∞–ª—è–º–∏", price: 490.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_peperoni.png" },
  { id: 5, name: "–ü–∏—Ü—Ü–∞ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏", price: 470.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_peperoni.png" },
  { id: 6, name: "–ü–∏—Ü—Ü–∞ –¶–µ–∑–∞—Ä—å", price: 480.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_mario.png" },
  { id: 9, name: "–î–æ–º–∞—à–Ω—è—è –ø–∏—Ü—Ü–∞", price: 480.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_5_chees.png" },
  { id: 3, name: "–°—ã—Ä–Ω–∞—è –ø–∏—Ü—Ü–∞", price: 470.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/pizza_cheese.png" },
  { id: 13, name: "–ë—É—Ä–≥–µ—Ä \"–î–∏–º–±—É—Ä–≥–µ—Ä\"", price: 220.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/burger_classic.png" },
  { id: 15, name: "–ë—É—Ä–≥–µ—Ä \"–ß–∏–∫–µ–Ω–±—É—Ä–≥–µ—Ä\"", price: 180.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/burger_hawaiian.png" },
  { id: 14, name: "–ë—É—Ä–≥–µ—Ä \"–ß–∏–∑–±—É—Ä–≥–µ—Ä\"", price: 200.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/burger_cheeseburger.png" },
  { id: 16, name: "–ë—É—Ä–≥–µ—Ä \"–î–∂—É–Ω–∏–æ—Ä\"", price: 160.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/burger_tom_yam.png" },
  { id: 28, name: "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –§—Ä–∏ 100 –≥—Ä.", price: 499.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/free.png" },
  { id: 29, name: "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –§—Ä–∏ 150 –≥—Ä.", price: 499.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/free.png" },
  { id: 30, name: "–ù–∞–≥–µ—Ü—ã 6 —à—Ç—É–∫", price: 599.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/nagets.png" },
  { id: 31, name: "–ù–∞–≥–µ—Ü—ã 9 —à—Ç—É–∫", price: 599.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/nagets.png" },
  { id: 32, name: "–ù–∞–≥–µ—Ü—ã 12 —à—Ç—É–∫", price: 599.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/nagets.png" },
  { id: 35, name: "–ö—Ä—ã–ª—å—è 6 —à—Ç—É–∫", price: 679.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/chiken.png" },
  { id: 36, name: "–ö—Ä—ã–ª—å—è 9 —à—Ç—É–∫", price: 679.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/chiken.png" },
  { id: 41, name: "–ó–∞–∫—Ä—ã—Ç–∞—è –ø–∏—Ü—Ü–∞ \"–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è\"", price: 170.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/closed_pizza.png" },
  { id: 43, name: "–ó–∞–∫—Ä—ã—Ç–∞—è –ø–∏—Ü—Ü–∞ \"–û—Ö–æ—Ç–Ω–∏—á—å—è\"", price: 170.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/closed_pizza.png" },
  { id: 42, name: "–ó–∞–∫—Ä—ã—Ç–∞—è –ø–∏—Ü—Ü–∞ \"–ö—É—Ä–∏–Ω–∞—è\"", price: 170.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/closed_pizza.png" },
  { id: 44, name: "–ó–∞–∫—Ä—ã—Ç–∞—è –ø–∏—Ü—Ü–∞ \"–°—ã—Ä–Ω–∞—è\"", price: 170.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/closed_pizza.png" },
  { id: 45, name: "–ó–∞–∫—Ä—ã—Ç–∞—è –ø–∏—Ü—Ü–∞ \"–ì–∞–≤–∞–π—Å–∫–∞—è\"", price: 180.00, imageUrl: "https://s3.twcstorage.ru/f9c8e17a-pizzanat-products/products/closed_pizza.png" }
]

// –®–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
function generateProductPageComponent(product, slug) {
  const componentName = slug.split('-').map(word => 
    word.charAt(0).toUpperCase() + word.slice(1)
  ).join('') + 'SEOPage'

  return `/**
 * @file: ${componentName}.tsx
 * @description: SEO —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ "${product.name}"
 * @dependencies: ProductSEOTemplate
 * @created: 2025-01-27
 * @generated: true
 */

import React from 'react'
import { ProductSEOTemplate } from './ProductSEOTemplate'
import type { Product } from '../../utils/transliteration'

const product: Product = {
  id: ${product.id},
  name: "${product.name}",
  price: ${product.price},
  imageUrl: "${product.imageUrl}"
}

export function ${componentName}() {
  return <ProductSEOTemplate product={product} page="${slug}" />
}

export default ${componentName}
`
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü —Ç–æ–≤–∞—Ä–æ–≤
const pagesDir = path.join(__dirname, '../src/pages/product-seo/products')
if (!fs.existsSync(pagesDir)) {
  fs.mkdirSync(pagesDir, { recursive: true })
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
const generatedPages = []
const routes = []

products.forEach(product => {
  const slug = createProductSlug(product.name)
  const componentName = slug.split('-').map(word => 
    word.charAt(0).toUpperCase() + word.slice(1)
  ).join('') + 'SEOPage'
  
  const fileName = `${componentName}.tsx`
  const filePath = path.join(pagesDir, fileName)
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  const componentCode = generateProductPageComponent(product, slug)
  fs.writeFileSync(filePath, componentCode)
  
  generatedPages.push({
    product: product.name,
    slug,
    componentName,
    fileName,
    url: `/${slug}`
  })
  
  routes.push({
    path: `/${slug}`,
    component: componentName,
    import: `import { ${componentName} } from './pages/product-seo/products/${componentName}'`
  })
  
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${product.name} -> /${slug}`)
})

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const indexContent = generatedPages.map(page => 
  `export { ${page.componentName} } from './${page.componentName}'`
).join('\n')

fs.writeFileSync(path.join(pagesDir, 'index.ts'), indexContent)

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ –¥–ª—è App.tsx
const routesContent = `// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
// –î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${new Date().toISOString()}

// –ò–º–ø–æ—Ä—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
${routes.map(route => route.import).join('\n')}

// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ App.tsx
export const PRODUCT_ROUTES = [
${routes.map(route => `  {
    path: "${route.path}",
    component: ${route.component}
  }`).join(',\n')}
]

// JSX —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è App.tsx
export const PRODUCT_ROUTE_ELEMENTS = [
${routes.map(route => `  <Route
    path="${route.path}"
    element={
      <ProtectedRoute requireAuth={false}>
        <AppShell padding="md">
          <AppShell.Main style={{ paddingBottom: '120px' }}>
            <${route.component} />
          </AppShell.Main>
          <TelegramBottomNav />
        </AppShell>
      </ProtectedRoute>
    }
  />`).join(',\n')}
]`

fs.writeFileSync(path.join(__dirname, '../src/pages/product-seo/productRoutes.tsx'), routesContent)

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º URL –¥–ª—è sitemap.xml
const sitemapUrls = generatedPages.map(page => `  <url>
    <loc>https://dimbopizza.ru${page.url}</loc>
    <lastmod>2025-01-27</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
  </url>`).join('\n')

fs.writeFileSync(path.join(__dirname, '../sitemap-products.xml'), `<!-- –¢–æ–≤–∞—Ä–Ω—ã–µ SEO —Å—Ç—Ä–∞–Ω–∏—Ü—ã -->
${sitemapUrls}`)

console.log(`\nüéâ –ì–ï–ù–ï–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!`)
console.log(`üìä –°–æ–∑–¥–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${generatedPages.length}`)
console.log(`üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${pagesDir}`)
console.log(`üóÇÔ∏è –ò–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª: ${path.join(pagesDir, 'index.ts')}`)
console.log(`üõ£Ô∏è –ú–∞—Ä—à—Ä—É—Ç—ã: ${path.join(__dirname, '../src/pages/product-seo/productRoutes.tsx')}`)
console.log(`üó∫Ô∏è Sitemap: ${path.join(__dirname, '../sitemap-products.xml')}`)

console.log(`\nüìã –°–û–ó–î–ê–ù–ù–´–ï –°–¢–†–ê–ù–ò–¶–´:`)
generatedPages.forEach(page => {
  console.log(`   ${page.product} -> ${page.url}`)
})

console.log(`\nüîó –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:`)
console.log(`1. –î–æ–±–∞–≤–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã –≤ App.tsx`)
console.log(`2. –û–±–Ω–æ–≤–∏—Ç—å sitemap.xml`)
console.log(`3. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç`)
console.log(`4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã`)
