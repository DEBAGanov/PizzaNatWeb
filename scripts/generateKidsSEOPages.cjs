/**
 * @file: generateKidsSEOPages.cjs
 * @description: –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ç—Å–∫–∏—Ö SEO-—Å—Ç—Ä–∞–Ω–∏—Ü
 * @dependencies: Node.js fs module
 * @created: 2025-01-27
 */

const fs = require('fs')
const path = require('path')

// –î–µ—Ç—Å–∫–∏–µ –∫–ª—é—á–µ–≤–∏–∫–∏
const KIDS_KEYWORDS = [
  '–¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≥–¥–µ',
  '–≥–¥–µ –æ—Ç–º–µ—Ç–∏—Ç—å –¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–¥–µ—Ç—Å–∫–∏–µ –∞–Ω–∏–º–∞—Ç–æ—Ä—ã –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–º–µ–Ω—é –Ω–∞ –¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–¥–µ—Ç—Å–∫–∏–π –ø–æ–¥–∞—Ä–æ–∫ –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–æ—Ç–ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å –¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–≥–¥–µ –æ—Ç–ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å –¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–≥–¥–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–¥–µ—Ç—Å–∫–∏–π –∫–≤–µ—Å—Ç –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ª–µ—Ç',
  '–ø—Ä–∞–∑–¥–Ω–æ–≤–∞–Ω–∏–µ –¥–µ—Ç—Å–∫–æ–≥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–æ—Ç–º–µ—Ç–∏—Ç—å –¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–µ–¥–∞ –Ω–∞ –¥–µ—Ç—Å–∫–æ–º –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–¥–µ—Ç—Å–∫–∏–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≥–æ–¥',
  '–ø—Ä–∞–∑–¥–Ω–∏–∫ –¥–ª—è –¥–µ—Ç–µ–π',
  '–≥–¥–µ –æ—Ç–º–µ—Ç–∏—Ç—å –¥—Ä —Ä–µ–±–µ–Ω–∫–∞',
  '–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å —Ä–æ–∂–¥–µ–Ω–∏–µ–º —Ä–µ–±–µ–Ω–∫–∞',
  '–¥–µ—Ç—Å–∫–∏–µ –ø–æ–¥–∞—Ä–∫–∏',
  '—á—Ç–æ –ø–æ–¥–∞—Ä–∏—Ç—å —Ä–µ–±–µ–Ω–∫—É',
  '–ø–æ–¥–∞—Ä–æ–∫ –º–∞–ª—å—á–∏–∫—É',
  '–ø–æ–¥–∞—Ä–æ–∫ –¥–µ–≤–æ—á–∫–µ',
  '–ø–æ–¥–∞—Ä–æ–∫ –¥–æ—á–∫–µ',
  '–ø–æ–¥–∞—Ä–æ–∫ –ø–æ–¥—Ä–æ—Å—Ç–∫—É',
  '–∞–Ω–∏–º–∞—Ç–æ—Ä—ã –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–¥–µ—Ç—Å–∫–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫',
  '–ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –≤ –¥–µ—Ç—Å–∫–æ–º —Å–∞–¥—É',
  '—Å—Ü–µ–Ω–∞—Ä–∏–π –¥–µ—Ç—Å–∫–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞',
  '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–µ—Ç—Å–∫–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤',
  '–ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –¥–µ—Ç—Å–∫–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤',
  '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–µ—Ç—Å–∫–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –≤ –≤–æ–ª–∂—Å–∫–µ',
  '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –≤–æ–ª–∂—Å–∫–µ',
  '–¥–µ—Ç—Å–∫–∏–µ –∞–Ω–∏–º–∞—Ç–æ—Ä—ã –≤ –≤–æ–ª–∂—Å–∫–µ',
  '–¥–µ—Ç—Å–∫–∏–µ –∞–Ω–∏–º–∞—Ç–æ—Ä—ã –Ω–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫ –≤–æ–ª–∂—Å–∫'
]

// –§—É–Ω–∫—Ü–∏—è —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
function transliterate(text) {
  const map = {
    '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'e',
    '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
    '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
    '—Ñ': 'f', '—Ö': 'h', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
    '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
    ' ': '-', '_': '-'
  }
  
  return text.toLowerCase().split('').map(char => map[char] || char).join('')
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function createKidsPageComponent(keyword) {
  const cleanKeyword = transliterate(keyword)
    .replace(/[^a-zA-Z0-9]/g, '-')
    .split('-')
    .filter(word => word.length > 0)
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join('')
  
  const componentName = cleanKeyword + 'KidsPage'
    
  const fileName = transliterate(keyword.replace(/\s+/g, '-')) + '-kids-page'
  const url = transliterate(keyword.replace(/\s+/g, '-'))
  
  const pageContent = `/**
 * @file: ${componentName}.tsx
 * @description: SEO-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –∫–ª—é—á–µ–≤–∏–∫–∞ "${keyword}"
 * @dependencies: KidsPageTemplate
 * @created: 2025-01-27
 */

import React from 'react'
import { KidsPageTemplate } from '../../components/seo/KidsPageTemplate'

export const ${componentName}: React.FC = () => {
  return (
    <KidsPageTemplate 
      keyword="${keyword.replace(/"/g, '\\"')}"
      page="${url}"
    />
  )
}
`

  return {
    componentName,
    fileName,
    url,
    content: pageContent
  }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –¥–µ—Ç—Å–∫–∏—Ö SEO-—Å—Ç—Ä–∞–Ω–∏—Ü
const kidsDir = path.join(__dirname, '..', 'src', 'pages', 'kids-seo')
if (!fs.existsSync(kidsDir)) {
  fs.mkdirSync(kidsDir, { recursive: true })
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–∏–∫–∞
const createdPages = []

KIDS_KEYWORDS.forEach(keyword => {
  const { componentName, fileName, url, content } = createKidsPageComponent(keyword)
  
  const filePath = path.join(kidsDir, `${componentName}.tsx`)
  fs.writeFileSync(filePath, content)
  
  createdPages.push({
    componentName,
    fileName,
    url,
    keyword
  })
  
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${componentName} -> /${url}`)
})

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–æ–≤
const indexContent = `/**
 * @file: index.ts
 * @description: –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–µ—Ç—Å–∫–∏—Ö SEO-—Å—Ç—Ä–∞–Ω–∏—Ü
 * @dependencies: –í—Å–µ –¥–µ—Ç—Å–∫–∏–µ SEO –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 * @created: 2025-01-27
 */

${createdPages.map(page => `export { ${page.componentName} } from './${page.componentName}'`).join('\n')}
`

fs.writeFileSync(path.join(kidsDir, 'index.ts'), indexContent)

// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ –¥–ª—è App.tsx
const routesContent = `// –î–µ—Ç—Å–∫–∏–µ SEO –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ App.tsx
// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –∏–º–ø–æ—Ä—Ç—ã –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞:
${createdPages.map(page => `import { ${page.componentName} } from './pages/kids-seo/${page.componentName}'`).join('\n')}

// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –º–∞—Ä—à—Ä—É—Ç—ã –≤ —Ä–∞–∑–¥–µ–ª Routes:
${createdPages.map(page => `<Route path="/${page.url}" element={<ProtectedRoute requireAuth={false}><${page.componentName} /></ProtectedRoute>} />`).join('\n')}
`

fs.writeFileSync(path.join(__dirname, 'kids-routes.txt'), routesContent)

// –°–æ–∑–¥–∞–Ω–∏–µ entries –¥–ª—è sitemap.xml
const sitemapEntries = createdPages.map(page => `  <url>
    <loc>https://dimbopizza.ru/${page.url}</loc>
    <lastmod>2025-01-27</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
  </url>`).join('\n')

fs.writeFileSync(path.join(__dirname, 'kids-sitemap-entries.txt'), sitemapEntries)

// –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –¥–ª—è robots.txt
const robotsEntries = createdPages.map(page => `Allow: /${page.url}`).join('\n')

fs.writeFileSync(path.join(__dirname, 'kids-robots-entries.txt'), robotsEntries)

console.log(`\nüéâ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù–û ${createdPages.length} –î–ï–¢–°–ö–ò–• SEO-–°–¢–†–ê–ù–ò–¶!\n`)
console.log('üìÅ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –≤: src/pages/kids-seo/')
console.log('üìÑ –ú–∞—Ä—à—Ä—É—Ç—ã: scripts/kids-routes.txt')
console.log('üó∫Ô∏è  Sitemap: scripts/kids-sitemap-entries.txt')
console.log('ü§ñ Robots: scripts/kids-robots-entries.txt')
console.log('\nüìã –°–ü–ò–°–û–ö –°–û–ó–î–ê–ù–ù–´–• –°–¢–†–ê–ù–ò–¶:')
createdPages.forEach((page, index) => {
  console.log(`${index + 1}. /${page.url} - "${page.keyword}"`)
})
console.log(`\n‚ú® –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${createdPages.length}`)
