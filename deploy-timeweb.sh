#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è PizzaNat Web –Ω–∞ Timeweb Cloud
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: 2024-12-19

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π PizzaNat Web –Ω–∞ Timeweb Cloud..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    fi
    
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
check_project_files() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    if [ ! -f "Dockerfile" ]; then
        error "Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ ! -f "docker-compose.yml" ]; then
        error "docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    if [ ! -f "package.json" ]; then
        error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    success "–í—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –º–µ—Å—Ç–µ"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π (–¥–ª—è Timeweb Cloud Apps –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
create_directories() {
    log "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Timeweb Cloud Apps..."
    
    # –ù–∞ Timeweb Cloud Apps volumes –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
    # SSL –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    
    success "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
stop_existing_containers() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    if docker ps -q --filter "name=pizzanat" | grep -q .; then
        docker-compose down
        success "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log "–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
cleanup_images() {
    log "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã
    docker image prune -f
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ –Ω–∞—à–µ–≥–æ –æ–±—Ä–∞–∑–∞ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3)
    if docker images pizzanatWeb_pizzanat-web -q | tail -n +4 | head -n -0; then
        docker images pizzanatWeb_pizzanat-web -q | tail -n +4 | xargs -r docker rmi
        success "–°—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã —É–¥–∞–ª–µ–Ω—ã"
    else
        log "–°—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
build_and_deploy() {
    log "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –ù–∞ Timeweb Cloud Apps –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ docker-compose.yml
    log "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ docker-compose.yml –¥–ª—è Timeweb Cloud Apps"
    
    # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
    docker-compose build --no-cache pizzanat-web
    docker-compose up -d pizzanat-web
    
    success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ –∏ –∑–∞–ø—É—â–µ–Ω–æ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
health_check() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    local max_attempts=30
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if curl -f http://localhost/health &> /dev/null; then
            success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
            return 0
        fi
        
        log "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts - –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        sleep 10
        ((attempt++))
    done
    
    error "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 5 –º–∏–Ω—É—Ç"
}

# –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    log "–°—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è:"
    echo ""
    docker-compose ps
    echo ""
    
    log "–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
    docker-compose logs --tail=20 pizzanat-web
    echo ""
    
    success "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üåê –í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
    echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: docker-compose logs -f pizzanat-web"
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ./deploy-timeweb.sh"
    echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
}

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
deploy_with_ssl() {
    log "–ó–∞–ø—É—Å–∫ —Å SSL (Traefik)..."
    docker-compose --profile traefik up -d
    success "SSL-–ø—Ä–æ–∫—Å–∏ –∑–∞–ø—É—â–µ–Ω"
}

deploy_with_monitoring() {
    log "–ó–∞–ø—É—Å–∫ —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º..."
    docker-compose --profile monitoring up -d
    success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω"
}

deploy_with_autoupdate() {
    log "–ó–∞–ø—É—Å–∫ —Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º..."
    docker-compose --profile autoupdate up -d
    success "–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üçï PizzaNat Web Deployment Script –¥–ª—è Timeweb Cloud"
    echo "=================================================="
    echo ""
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    case "${1:-basic}" in
        "ssl")
            DEPLOY_MODE="ssl"
            ;;
        "monitoring")
            DEPLOY_MODE="monitoring"
            ;;
        "autoupdate")
            DEPLOY_MODE="autoupdate"
            ;;
        "full")
            DEPLOY_MODE="full"
            ;;
        "basic"|*)
            DEPLOY_MODE="basic"
            ;;
    esac
    
    log "–†–µ–∂–∏–º –¥–µ–ø–ª–æ—è: $DEPLOY_MODE"
    echo ""
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —à–∞–≥–æ–≤
    check_dependencies
    check_project_files
    create_directories
    stop_existing_containers
    cleanup_images
    build_and_deploy
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
    case "$DEPLOY_MODE" in
        "ssl")
            deploy_with_ssl
            ;;
        "monitoring")
            deploy_with_monitoring
            ;;
        "autoupdate")
            deploy_with_autoupdate
            ;;
        "full")
            deploy_with_ssl
            deploy_with_monitoring
            deploy_with_autoupdate
            ;;
    esac
    
    health_check
    show_status
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "–î–µ–ø–ª–æ–π –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@" 