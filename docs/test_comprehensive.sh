#!/bin/bash

echo "üöÄ Comprehensive —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PizzaNat API"

#BASE_URL="https://debaganov-pizzanat-d8fb.twc1.net"
#BASE_URL="https://debaganov-pizzanat-0177.twc1.net"
#BASE_URL="https://pizzanat.ru"
#BASE_URL="http://localhost:8080"
BASE_URL="https://api.dimbopizza.ru"

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

test_endpoint() {
    local url=$1
    local description=$2
    local method=${3:-GET}
    local token=${4:-""}
    local data=${5:-""}

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É curl
    local curl_cmd="curl -s -L -o /dev/null -w '%{http_code}' -X $method '$BASE_URL$url'"

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    curl_cmd="$curl_cmd -H 'Accept: application/json'"

    if [ -n "$token" ]; then
        curl_cmd="$curl_cmd -H 'Authorization: Bearer $token'"
    fi

    if [ -n "$data" ]; then
        curl_cmd="$curl_cmd -H 'Content-Type: application/json' -d '$data'"
    fi

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º HTTP –∫–æ–¥
    http_code=$(eval $curl_cmd)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    if [[ $http_code -eq 200 ]] || [[ $http_code -eq 201 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–∫–∏
        local response_cmd="curl -s -L -X $method '$BASE_URL$url'"
        response_cmd="$response_cmd -H 'Accept: application/json'"

        if [ -n "$token" ]; then
            response_cmd="$response_cmd -H 'Authorization: Bearer $token'"
        fi

        if [ -n "$data" ]; then
            response_cmd="$response_cmd -H 'Content-Type: application/json' -d '$data'"
        fi

        local body=$(eval $response_cmd)
        if [ -n "$body" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$body" | head -c 150)..."
        fi

        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"
}

# –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Æ–ö–∞—Å—Å–∞ (–±–µ–∑ eval –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π)
test_yookassa_endpoint() {
    local url=$1
    local description=$2
    local method=${3:-GET}
    local token=${4:-""}
    local data=${5:-""}

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    local temp_data_file=""
    local temp_response_file=$(mktemp)

    if [ -n "$data" ]; then
        temp_data_file=$(mktemp)
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
        printf '%s' "$data" > "$temp_data_file"
    fi

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –±–µ–∑ eval –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    local http_code
    if [ -n "$token" ] && [ -n "$data" ]; then
        http_code=$(curl -s -L -w '%{http_code}' -o "$temp_response_file" \
            -X "$method" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Accept: application/json; charset=utf-8" \
            -H "Authorization: Bearer $token" \
            --data-binary "@$temp_data_file" \
            --connect-timeout 10 \
            --max-time 30 \
            "$BASE_URL$url")
    elif [ -n "$token" ]; then
        http_code=$(curl -s -L -w '%{http_code}' -o "$temp_response_file" \
            -X "$method" \
            -H "Accept: application/json; charset=utf-8" \
            -H "Authorization: Bearer $token" \
            --connect-timeout 10 \
            --max-time 30 \
            "$BASE_URL$url")
    elif [ -n "$data" ]; then
        http_code=$(curl -s -L -w '%{http_code}' -o "$temp_response_file" \
            -X "$method" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Accept: application/json; charset=utf-8" \
            --data-binary "@$temp_data_file" \
            --connect-timeout 10 \
            --max-time 30 \
            "$BASE_URL$url")
    else
        http_code=$(curl -s -L -w '%{http_code}' -o "$temp_response_file" \
            -X "$method" \
            -H "Accept: application/json; charset=utf-8" \
            --connect-timeout 10 \
            --max-time 30 \
            "$BASE_URL$url")
    fi

    # –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç
    local body=$(cat "$temp_response_file" 2>/dev/null || echo "")

    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    if [ -n "$temp_data_file" ]; then
        rm -f "$temp_data_file"
    fi
    rm -f "$temp_response_file"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
    if [[ $http_code -eq 200 ]] || [[ $http_code -eq 201 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        if [ -n "$body" ] && [ ${#body} -gt 10 ]; then
            echo "   –û—Ç–≤–µ—Ç: $(echo "$body" | head -c 80)..."
        fi
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ—à–∏–±–æ–∫
        if [ -n "$body" ]; then
            echo "   –û—Ç–≤–µ—Ç: $(echo "$body" | head -c 200)..."
        fi

        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∫–æ—Ä–∑–∏–Ω—ã
test_order_creation() {
    local order_data=$1
    local description=$2
    local token=$3

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    local cart_check_response=""
    if [ -n "$token" ]; then
        cart_check_response=$(curl -s -X GET "$BASE_URL/api/v1/cart" -H "Authorization: Bearer $token")
    else
        cart_check_response=$(curl -s -X GET "$BASE_URL/api/v1/cart")
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ
    local cart_total=$(echo "$cart_check_response" | grep -o '"totalAmount":[0-9.]*' | cut -d':' -f2)

    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä
    if [ "$cart_total" = "0" ] || [ -z "$cart_total" ]; then
        echo -e "${YELLOW}–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä...${NC}"
        cart_add_simple='{"productId": 1, "quantity": 1}'
        local cart_code

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        if [ -n "$token" ]; then
            cart_code=$(curl -s -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/cart/items" \
              -H "Content-Type: application/json" \
              -H "Accept: application/json" \
              -H "Authorization: Bearer $token" \
              -d "$cart_add_simple")
        else
            cart_code=$(curl -s -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/cart/items" \
              -H "Content-Type: application/json" \
              -H "Accept: application/json" \
              -d "$cart_add_simple")
        fi
        if [[ $cart_code -ne 200 ]] && [[ $cart_code -ne 201 ]]; then
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($cart_code) - –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            echo "---"
            return
        fi
        echo -e "${GREEN}‚úì –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É${NC}"
    else
        echo -e "${GREEN}‚úì –í –∫–æ—Ä–∑–∏–Ω–µ —É–∂–µ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã (—Å—É–º–º–∞: $cart_total)${NC}"
    fi

    # –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–µ–¥–∏–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –∫–æ–¥–∞, –∏ –æ—Ç–≤–µ—Ç–∞)
    local temp_file=$(mktemp)
    local http_code
    local order_response

    if [ -n "$token" ]; then
        http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $token" \
          -d "$order_data")
    else
        http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -d "$order_data")
    fi

    order_response=$(cat "$temp_file")
    rm -f "$temp_file"

    if [[ $http_code -eq 200 ]] || [[ $http_code -eq 201 ]]; then
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∑–∞–∫–∞–∑–∞ –∏–∑ –æ—Ç–≤–µ—Ç–∞
        local order_id=$(echo "$order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2 | head -n1 | tr -d '\n\r')
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code) - –ó–∞–∫–∞–∑ #$order_id —Å–æ–∑–¥–∞–Ω${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        LAST_CREATED_ORDER_ID="$order_id"
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code)${NC}"

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–∫–∏
        if [ -n "$order_response" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$order_response" | head -c 150)..."
        fi

        FAILED_TESTS=$((FAILED_TESTS + 1))
        LAST_CREATED_ORDER_ID=""
    fi
    echo "---"
}

echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...${NC}"
if ! curl -s "$BASE_URL/api/v1/health" > /dev/null; then
    echo -e "${RED}‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!${NC}"
    exit 1
fi
echo -e "${GREEN}‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
echo "=================================="

# 1. Health Check
echo -e "${BLUE}1. HEALTH CHECK${NC}"
test_endpoint "/api/v1/health" "Health Check"

# 2. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
echo -e "${BLUE}2. –ö–ê–¢–ï–ì–û–†–ò–ò${NC}"
test_endpoint "/api/v1/categories" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "/api/v1/categories/1" "–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID"

# 3. –ü—Ä–æ–¥—É–∫—Ç—ã
echo -e "${BLUE}3. –ü–†–û–î–£–ö–¢–´${NC}"
test_endpoint "/api/v1/products" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã"
test_endpoint "/api/v1/products/1" "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç –ø–æ ID"
test_endpoint "/api/v1/products/category/1" "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
test_endpoint "/api/v1/products/special-offers" "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
test_endpoint "/api/v1/products/search?query=%D0%9C%D0%B0%D1%80%D0%B3%D0%B0%D1%80%D0%B8%D1%82%D0%B0" "–ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)"

# 4. –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ (–Ω–æ–≤—ã–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã)
echo -e "${BLUE}4. –ü–£–ù–ö–¢–´ –î–û–°–¢–ê–í–ö–ò${NC}"
test_endpoint "/api/v1/delivery-locations" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏"
test_endpoint "/api/v1/delivery-locations/1" "–ü–æ–ª—É—á–∏—Ç—å –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ ID"

# 4B. API –î–û–°–¢–ê–í–ö–ò (–Ω–æ–≤—ã–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã)
echo -e "${BLUE}üöö 4B. API –î–û–°–¢–ê–í–ö–ò${NC}"

# Health checks
test_endpoint "/api/v1/health" "–û—Å–Ω–æ–≤–Ω–æ–π health check (–Ω–æ–≤—ã–π)"
test_endpoint "/api/v1/health/detailed" "–î–µ—Ç–∞–ª—å–Ω—ã–π health check"
test_endpoint "/api/v1/ready" "Readiness probe"
test_endpoint "/api/v1/live" "Liveness probe"

# –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/address-suggestions?query=%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&limit=5" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –í–æ–ª–∂—Å–∫"
test_endpoint "/api/v1/delivery/address-suggestions?query=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0&limit=3" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –ú–æ—Å–∫–≤–∞"

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/validate-address?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA%2C%20%D1%83%D0%BB.%20%D0%9B%D0%B5%D0%BD%D0%B8%D0%BD%D0%B0%2C%20%D0%B4.%201" "–í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞ –í–æ–ª–∂—Å–∫"
test_endpoint "/api/v1/delivery/validate-address?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0%2C%20%D0%A0%D0%B5%D0%B4%20%D0%A1%D0%BA%D0%B2%D0%B5%D1%80" "–í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞ –≤–Ω–µ –∑–æ–Ω—ã"

# –†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏
test_endpoint "/api/v1/delivery/estimate?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&orderAmount=800" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ 800 —Ä—É–±"
test_endpoint "/api/v1/delivery/estimate?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&orderAmount=1200" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ 1200 —Ä—É–± (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/address-suggestions?query=%D0%A1%D0%9F%D0%B1" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –°–ü–± (–±–µ–∑ –ª–∏–º–∏—Ç–∞)"
test_endpoint "/api/v1/delivery/address-suggestions?query=123&limit=10" "–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: –ø–æ–∏—Å–∫ –ø–æ —Ü–∏—Ñ—Ä–∞–º"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∞–¥—Ä–µ—Å–æ–≤
test_endpoint "/api/v1/delivery/validate-address?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0%2C%20%D0%A0%D0%B5%D0%B4%20%D0%A1%D0%BA%D0%B2%D0%B5%D1%80" "–í–∞–ª–∏–¥–∞—Ü–∏—è –ú–æ—Å–∫–≤–∞ (–≤–Ω–µ –∑–æ–Ω—ã)"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
test_endpoint "/api/v1/delivery/estimate?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0&orderAmount=500" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –ú–æ—Å–∫–≤–∞ (–≤–Ω–µ –∑–æ–Ω—ã)"

# –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã API –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü–æ–¥—Å–∫–∞–∑–∫–∏ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_params_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/address-suggestions")
if [[ $no_params_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $no_params_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_params_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –í–∞–ª–∏–¥–∞—Ü–∏—è –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_address_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/validate-address")
if [[ $no_address_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $no_address_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_address_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –†–∞—Å—á–µ—Ç –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_order_amount_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/estimate")
if [[ $no_order_amount_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $no_order_amount_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_order_amount_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü—É—Å—Ç–æ–π query –≤ –ø–æ–¥—Å–∫–∞–∑–∫–∞—Ö${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
empty_query_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/address-suggestions?query=")
if [[ $empty_query_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–ø—É—Å—Ç–æ–π query –æ—Ç–∫–ª–æ–Ω–µ–Ω - HTTP $empty_query_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $empty_query_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –†–∞—Å—á–µ—Ç –±–µ–∑ orderAmount${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))
no_amount_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/delivery/estimate?address=test")
if [[ $no_amount_code -eq 400 ]]; then
    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ orderAmount –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ - HTTP $no_amount_code)${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $no_amount_code)${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

# 4B2. –î–ï–¢–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–û–î–°–ö–ê–ó–û–ö –ê–î–†–ï–°–û–í
echo -e "${BLUE}üè† 4B2. –î–ï–¢–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–û–î–°–ö–ê–ó–û–ö –ê–î–†–ï–°–û–í${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤
test_address_suggestions_detailed() {
    local test_name="$1"
    local query="$2"
    local expected_count="$3"
    local should_contain="$4"
    local should_not_contain="$5"

    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    echo -e "${YELLOW}üß™ –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ–¥—Å–∫–∞–∑–æ–∫: $test_name${NC}"
    echo "   –ó–∞–ø—Ä–æ—Å: '$query'"

    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –ø–æ–¥—Å–∫–∞–∑–æ–∫ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    local temp_file=$(mktemp)
    local http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X GET \
        "$BASE_URL/api/v1/delivery/address-suggestions" \
        -G --data-urlencode "query=${query}" \
        -H "Content-Type: application/json" \
        --connect-timeout 10 \
        --max-time 30)

    local json_response=$(cat "$temp_file")
    rm -f "$temp_file"

    if [ "$http_code" -eq 200 ]; then
        # –ü–∞—Ä—Å–∏–º JSON –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        local suggestions_count=$(echo "$json_response" | jq '. | length' 2>/dev/null || echo "0")

        echo "   –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Å–∫–∞–∑–æ–∫: $suggestions_count"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if [ "$suggestions_count" -ge "$expected_count" ]; then
            echo -e "   ‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: OK ($suggestions_count >= $expected_count)"
        else
            echo -e "   ‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: FAIL ($suggestions_count < $expected_count)"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            echo "---"
            return 1
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ shortAddress (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
        if [ -n "$should_contain" ]; then
            if echo "$json_response" | jq -r '.[].shortAddress' | grep -q "$should_contain"; then
                echo -e "   ‚úÖ shortAddress —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_contain': OK"
            else
                echo -e "   ‚ùå shortAddress –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_contain': FAIL"
                FAILED_TESTS=$((FAILED_TESTS + 1))
                echo "---"
                return 1
            fi
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ù–ï —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ shortAddress (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ)
        if [ -n "$should_not_contain" ]; then
            if echo "$json_response" | jq -r '.[].shortAddress' | grep -q "$should_not_contain"; then
                echo -e "   ‚ùå shortAddress —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_not_contain' (–Ω–µ –¥–æ–ª–∂–Ω–æ): FAIL"
                FAILED_TESTS=$((FAILED_TESTS + 1))
                echo "---"
                return 1
            else
                echo -e "   ‚úÖ shortAddress –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç '$should_not_contain': OK"
        fi
        fi

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫
        echo "   –ü—Ä–∏–º–µ—Ä—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫:"
        echo "$json_response" | jq -r '.[0:3][] | "     - " + .shortAddress' 2>/dev/null || echo "     (–Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å)"

        PASSED_TESTS=$((PASSED_TESTS + 1))
        echo -e "   ${GREEN}‚úÖ –ü–†–û–ô–î–ï–ù${NC}"

    else
        echo -e "   ‚ùå HTTP –æ—à–∏–±–∫–∞: $http_code"
        if [ -n "$json_response" ]; then
            echo "   –û—Ç–≤–µ—Ç: $(echo "$json_response" | head -c 100)..."
        fi
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi

    echo "---"
}

echo -e "${WHITE}üìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ —É–ª–∏—Ü –í–æ–ª–∂—Å–∫–∞ (–¥–µ—Ç–∞–ª—å–Ω–æ–µ)${NC}"

# –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞)
test_address_suggestions_detailed \
    "–ü–æ–∏—Å–∫ —É–ª–∏—Ü –Ω–∞ '–õ–µ'" \
    "–õ–µ" \
    1 \
    "–õ–µ–Ω–∏–Ω–∞" \
    "–í–æ–ª–∂—Å–∫"

# –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è
test_address_suggestions_detailed \
    "–ü–æ–∏—Å–∫ —É–ª–∏—Ü '–õ–µ–Ω'" \
    "–õ–µ–Ω" \
    1 \
    "–õ–µ–Ω–∏–Ω–∞" \
    "—É–ª–∏—Ü–∞"

# –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —É–ª–∏—Ü '–°–∞–¥–æ–≤–∞—è'
test_address_suggestions_detailed \
    "–ü–æ–∏—Å–∫ —É–ª–∏—Ü '–°–∞–¥–æ–≤–∞—è'" \
    "–°–∞–¥–æ–≤–∞—è" \
    1 \
    "–°–∞–¥–æ–≤–∞—è" \
    "–ø–µ—Ä–µ—É–ª–æ–∫"

# –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É–ª–∏—Ü—ã
test_address_suggestions_detailed \
    "–ü–æ–∏—Å–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É–ª–∏—Ü—ã" \
    "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è–£–ª–∏—Ü–∞" \
    0 \
    "" \
    ""

# –¢–µ—Å—Ç 5: –ü–æ–∏—Å–∫ —É–ª–∏—Ü –Ω–∞ '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è'
test_address_suggestions_detailed \
    "–ü–æ–∏—Å–∫ '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è'" \
    "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è" \
    1 \
    "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è" \
    "–†–µ—Å–ø—É–±–ª–∏–∫–∞"

# –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–ª–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤
test_address_suggestions_detailed \
    "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–ª–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤" \
    "–ú–∏—Ä–∞" \
    1 \
    "–ú–∏—Ä–∞" \
    "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–∞—Ä–∏–π –≠–ª"

# –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π
test_address_suggestions_detailed \
    "–¢–µ—Å—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü—ã '–°–æ–≤–µ—Ç—Å–∫–∞—è'" \
    "–°–æ–≤–µ—Ç—Å–∫–∞—è" \
    1 \
    "–°–æ–≤–µ—Ç—Å–∫–∞—è" \
    "–≥–æ—Ä–æ–¥"

# –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
echo -e "${YELLOW}üß™ –¢–µ—Å—Ç –ª–∏–º–∏—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è'${NC}"
TOTAL_TESTS=$((TOTAL_TESTS + 1))

limit_response=$(curl -s -X GET "$BASE_URL/api/v1/delivery/address-suggestions" \
    -G --data-urlencode "query=–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è" \
    --data-urlencode "limit=3" \
    -H "Content-Type: application/json")

limit_count=$(echo "$limit_response" | jq '. | length' 2>/dev/null || echo "0")

if [ "$limit_count" -le 3 ]; then
    echo -e "   ‚úÖ –õ–∏–º–∏—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω–æ $limit_count —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (‚â§ 3)"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "   ‚ùå –õ–∏–º–∏—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω–æ $limit_count —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (> 3)"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
echo "---"

# 4C. –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –î–û–°–¢–ê–í–ö–ò –ì–û–†–û–î–ê –í–û–õ–ñ–°–ö
echo -e "${BLUE}üó∫Ô∏è 4C. –ó–û–ù–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –î–û–°–¢–ê–í–ö–ò –ì–û–†–û–î–ê –í–û–õ–ñ–°–ö${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è URL –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
urlencode() {
    local string="${1}"
    local strlen=${#string}
    local encoded=""
    local pos c o

    for (( pos=0 ; pos<strlen ; pos++ )); do
        c=${string:$pos:1}
        case "$c" in
            [-_.~a-zA-Z0-9] ) o="${c}" ;;
            * )               printf -v o '%%%02x' "'$c"
        esac
        encoded+="${o}"
    done
    echo "${encoded}"
}

test_delivery_estimate() {
    local address="$1"
    local amount="$2"
    local expected_cost="$3"
    local expected_district="$4"
    local test_name="$5"

    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    echo -e "\n${BLUE}üß™ –¢–ï–°–¢ ${TOTAL_TESTS}: ${test_name}${NC}"
    echo "   üìç –ê–¥—Ä–µ—Å: $address"
    echo "   üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${amount} —Ä—É–±"
    echo "   üéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–∞–π–æ–Ω: $expected_district"
    echo "   üí∏ –û–∂–∏–¥–∞–µ–º–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${expected_cost} —Ä—É–±"

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º URL –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    local response=$(curl -s -X GET "${BASE_URL}/api/v1/delivery/estimate" -G \
        --data-urlencode "address=${address}" \
        --data-urlencode "orderAmount=${amount}" \
        -H "Accept: application/json" \
        -H "Content-Type: application/json" \
        --connect-timeout 10 \
        --max-time 30 2>/dev/null)

    local curl_exit_code=$?

    if [ $curl_exit_code -eq 0 ] && [ -n "$response" ]; then
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –≤ JSON
        if echo "$response" | jq empty 2>/dev/null; then
            # –ü–∞—Ä—Å–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ–ª—è –ø–æ–¥ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π API)
            local delivery_cost=$(echo "$response" | jq -r '.deliveryCost // "null"')
            local district=$(echo "$response" | jq -r '.zoneName // "unknown"')
            local is_free=$(echo "$response" | jq -r '.isDeliveryFree // false')
            local delivery_available=$(echo "$response" | jq -r '.deliveryAvailable // false')
            local city=$(echo "$response" | jq -r '.city // "unknown"')
            local estimated_time=$(echo "$response" | jq -r '.estimatedTime // "unknown"')

            echo "   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:"
            echo "   üìç –û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ä–∞–π–æ–Ω: $district"
            echo "   üèôÔ∏è –ì–æ—Ä–æ–¥: $city"
            echo "   üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ${delivery_cost} —Ä—É–±"
            echo "   üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞: $is_free"
            echo "   ‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞: $delivery_available"
            echo "   ‚è∞ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: $estimated_time"

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if [ "$delivery_cost" = "$expected_cost" ]; then
                echo -e "   ${GREEN}‚úÖ –£–°–ü–ï–•: –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))
            else
                echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª–æ—Å—å ${expected_cost} —Ä—É–±, –ø–æ–ª—É—á–µ–Ω–æ ${delivery_cost} —Ä—É–±${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
        else
            echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –æ—Ç–≤–µ—Ç${NC}"
            echo "   üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: $response"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "   ${RED}‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–∫–æ–¥: $curl_exit_code)${NC}"
        if [ -n "$response" ]; then
            echo "   üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: $response"
        fi
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
}

echo -e "${WHITE}üìç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –î–û–°–¢–ê–í–ö–ò –í–û–õ–ñ–°–ö${NC}"
echo "================================================================="
echo -e "${GREEN}‚úÖ –°–¢–ê–¢–£–°: –ó–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!${NC}"
echo -e "${BLUE}üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –í—Å–µ 11 —Ä–∞–π–æ–Ω–æ–≤ –í–æ–ª–∂—Å–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ${NC}"
echo -e "${CYAN}üèÜ –î–û–°–¢–ò–ñ–ï–ù–ò–ï: –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ 100‚ÇΩ-300‚ÇΩ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç${NC}"

# –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û–ô –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´
echo -e "\n${GREEN}üèõÔ∏è –¢–ï–°–¢ –¶–ï–ù–¢–†–ê–õ–¨–ù–´–• –£–õ–ò–¶ (–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π: 200‚ÇΩ)${NC}"
test_delivery_estimate "—É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–∞, 15" "500" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —É–ª–∏—Ü–∞ –≥–æ—Ä–æ–¥–∞"
test_delivery_estimate "–°–æ–≤–µ—Ç—Å–∫–∞—è —É–ª–∏—Ü–∞, 22" "1200" "0" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ"
test_delivery_estimate "–ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è, 8" "999" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–ì—Ä–∞–Ω–∏—á–Ω–∞—è —Å—É–º–º–∞ (999‚ÇΩ)"
test_delivery_estimate "–ü—É—à–∫–∏–Ω–∞, 12" "800" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–£–ª–∏—Ü–∞ –ø–æ—ç—Ç–∞"

echo -e "\n${CYAN}ü§ù –¢–ï–°–¢ –£–õ–ò–¶ –†–ê–ô–û–ù–ê –î–†–£–ñ–ë–ê (–î—Ä—É–∂–±–∞: 100‚ÇΩ - –°–ê–ú–´–ô –î–ï–®–ï–í–´–ô)${NC}"
test_delivery_estimate "—É–ª–∏—Ü–∞ –î—Ä—É–∂–±—ã, 5" "400" "100.00" "–î—Ä—É–∂–±–∞" "–û—Å–Ω–æ–≤–Ω–∞—è —É–ª–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞ –î—Ä—É–∂–±–∞"
test_delivery_estimate "–ú–æ–ª–æ–¥–µ–∂–Ω–∞—è, 18" "1100" "0" "–î—Ä—É–∂–±–∞" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
test_delivery_estimate "–ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è, 7" "799" "100.00" "–î—Ä—É–∂–±–∞" "–ì—Ä–∞–Ω–∏—á–Ω–∞—è —Å—É–º–º–∞ (799‚ÇΩ)"
test_delivery_estimate "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è, 11" "600" "100.00" "–î—Ä—É–∂–±–∞" "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —É–ª–∏—Ü–∞"

echo -e "\n${BLUE}üè≠ –¢–ï–°–¢ –£–õ–ò–¶ –ú–ê–®–ò–ù–û–°–¢–†–û–ò–¢–ï–õ–ï–ô (–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å: 200‚ÇΩ)${NC}"
test_delivery_estimate "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 45" "750" "200.00" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–ì–ª–∞–≤–Ω–∞—è —É–ª–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞"
test_delivery_estimate "2-—è –ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª–µ–π, 12" "1100" "0" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
test_delivery_estimate "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–æ–≤, 8" "950" "200.00" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏"
test_delivery_estimate "–≠–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, 23" "1000" "0" "–ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å" "–¢–æ—á–Ω–æ –Ω–∞ –ø–æ—Ä–æ–≥–µ (1000‚ÇΩ)"

echo -e "\n${PURPLE}‚úàÔ∏è –¢–ï–°–¢ –ê–í–ò–ê–¶–ò–û–ù–ù–´–• –£–õ–ò–¶ (–í–î–ö: 200‚ÇΩ)${NC}"
test_delivery_estimate "–ì–∞–≥–∞—Ä–∏–Ω–∞, 33" "650" "200.00" "–í–î–ö" "–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–ß–∫–∞–ª–æ–≤–∞, 17" "1300" "0" "–í–î–ö" "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–ê–≤–∏–∞—Ü–∏–∏, 9" "800" "200.00" "–í–î–ö" "–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–∞–π–æ–Ω"
test_delivery_estimate "–ü–∞–ø–∞–Ω–∏–Ω–∞, 14" "999" "200.00" "–í–î–ö" "–ü–æ–ª—è—Ä–Ω–∏–∫"

echo -e "\n${WHITE}üå≤ –¢–ï–°–¢ –°–ï–í–ï–†–ù–´–• –£–õ–ò–¶ (–°–µ–≤–µ—Ä–Ω—ã–π: 200‚ÇΩ)${NC}"
test_delivery_estimate "–°–µ–≤–µ—Ä–Ω–∞—è, 28" "700" "200.00" "–°–µ–≤–µ—Ä–Ω—ã–π" "–ì–ª–∞–≤–Ω–∞—è —Å–µ–≤–µ—Ä–Ω–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–õ–µ—Å–Ω–∞—è, 16" "1150" "0" "–°–µ–≤–µ—Ä–Ω—ã–π" "–õ–µ—Å–Ω–∞—è –∑–æ–Ω–∞"
test_delivery_estimate "–°–æ—Å–Ω–æ–≤–∞—è, 5" "880" "200.00" "–°–µ–≤–µ—Ä–Ω—ã–π" "–•–≤–æ–π–Ω—ã–µ —É–ª–∏—Ü—ã"
test_delivery_estimate "–ì–æ—Ä–Ω–∞—è, 21" "1000" "0" "–°–µ–≤–µ—Ä–Ω—ã–π" "–ì–æ—Ä–Ω–∞—è –º–µ—Å—Ç–Ω–æ—Å—Ç—å"

echo -e "\n${YELLOW}‚ö° –¢–ï–°–¢ –£–õ–ò–¶ –ì–û–†–ì–ê–ó–ê (–ì–æ—Ä–≥–∞–∑: 200‚ÇΩ)${NC}"
test_delivery_estimate "–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è, 42" "550" "200.00" "–ì–æ—Ä–≥–∞–∑" "–ö–æ–æ–ø–µ—Ä–∞—Ç–∏–≤"
test_delivery_estimate "–£—á–∏—Ç–µ–ª—å—Å–∫–∞—è, 19" "1250" "0" "–ì–æ—Ä–≥–∞–∑" "–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∞—è —É–ª–∏—Ü–∞"
test_delivery_estimate "–¢–∏–º–∏—Ä—è–∑–µ–≤–∞, 8" "920" "200.00" "–ì–æ—Ä–≥–∞–∑" "–£—á–µ–Ω—ã–π-–∞–≥—Ä–∞—Ä–∏–π"
test_delivery_estimate "–ü—Ä–æ–º–±–∞–∑–∞, 15" "999" "200.00" "–ì–æ—Ä–≥–∞–∑" "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –±–∞–∑–∞"

echo -e "\n${YELLOW}üåÖ –¢–ï–°–¢ –£–õ–ò–¶ –ó–ê–†–ò (–ó–∞—Ä—è: 250‚ÇΩ - –î–û–†–û–ñ–ï –¶–ï–ù–¢–†–ê)${NC}"
test_delivery_estimate "–ó–∞—Ä—è, 67" "600" "250.00" "–ó–∞—Ä—è" "–ì–ª–∞–≤–Ω–∞—è —É–ª–∏—Ü–∞ —Ä–∞–π–æ–Ω–∞ –ó–∞—Ä—è"
test_delivery_estimate "1-—è –ó–∞—Ä–∏–Ω—Å–∫–∞—è, 34" "1300" "0" "–ó–∞—Ä—è" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞"
test_delivery_estimate "–ó–∞—Ä–µ—á–Ω–∞—è, 11" "1100" "250.00" "–ó–∞—Ä—è" "–ó–∞ —Ä–µ–∫–æ–π (–Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ø–æ—Ä–æ–≥ 1200‚ÇΩ)"
test_delivery_estimate "–ó–µ–ª–µ–Ω–∞—è, 25" "1199" "250.00" "–ó–∞—Ä—è" "–ì—Ä–∞–Ω–∏—á–Ω–∞—è —Å—É–º–º–∞ (–Ω–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞)"

# –¢–ï–°–¢–´ –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í
echo -e "\n${WHITE}üéØ –¢–ï–°–¢–´ –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í (–ó–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ä–æ–≥–∏: 800‚ÇΩ/1000‚ÇΩ/1200‚ÇΩ/1500‚ÇΩ)${NC}"
echo "========================================="

test_delivery_estimate "–î—Ä—É–∂–±—ã, 99" "800" "0" "–î—Ä—É–∂–±–∞" "–¢–æ—á–Ω–æ –ø–æ—Ä–æ–≥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –î—Ä—É–∂–±–∞ (800‚ÇΩ)"
test_delivery_estimate "–î—Ä—É–∂–±—ã, 99" "799" "100.00" "–î—Ä—É–∂–±–∞" "–ù–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞ –î—Ä—É–∂–±–∞"
test_delivery_estimate "–õ–µ–Ω–∏–Ω–∞, 1" "1000" "0" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–¢–æ—á–Ω–æ –ø–æ—Ä–æ–≥ –≤ —Ü–µ–Ω—Ç—Ä–µ (1000‚ÇΩ)"
test_delivery_estimate "–õ–µ–Ω–∏–Ω–∞, 1" "999" "200.00" "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π" "–ù–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ"

# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–†–û–ú–´–®–õ–ï–ù–ù–´–• –ó–û–ù
echo -e "\n${RED}üèóÔ∏è –¢–ï–°–¢ –ü–†–û–ú–´–®–õ–ï–ù–ù–´–• –ó–û–ù (–ü—Ä–æ–º—É–∑–µ–ª/–ü—Ä–∏–±—Ä–µ–∂–Ω—ã–π: 300‚ÇΩ - –°–ê–ú–´–ï –î–û–†–û–ì–ò–ï)${NC}"
test_delivery_estimate "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 10" "500" "300.00" "–ü—Ä–æ–º—É–∑–µ–ª" "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è –∑–æ–Ω–∞"
test_delivery_estimate "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 10" "1500" "0" "–ü—Ä–æ–º—É–∑–µ–ª" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –≤ –ø—Ä–æ–º–∑–æ–Ω–µ (1500‚ÇΩ)"
test_delivery_estimate "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–∞—è, 10" "1499" "300.00" "–ü—Ä–æ–º—É–∑–µ–ª" "–ù–∞ 1‚ÇΩ –º–µ–Ω—å—à–µ –ø–æ—Ä–æ–≥–∞ –ø—Ä–æ–º–∑–æ–Ω—ã"

# –¢–ï–°–¢–´ –ù–ï–ò–ó–í–ï–°–¢–ù–´–• –ê–î–†–ï–°–û–í
echo -e "\n${YELLOW}‚ùì –¢–ï–°–¢–´ –ù–ï–ò–ó–í–ï–°–¢–ù–´–• –ê–î–†–ï–°–û–í${NC}"
echo "======================================"

test_delivery_estimate "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —É–ª–∏—Ü–∞, 999" "500" "200.00" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "Fallback –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —Ç–∞—Ä–∏—Ñ—É"
test_delivery_estimate "–í—ã–¥—É–º–∞–Ω–Ω–∞—è, 123" "1100" "0" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —Å –±–æ–ª—å—à–æ–π —Å—É–º–º–æ–π"

# 4D. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –î–ï–¢–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ API –î–û–°–¢–ê–í–ö–ò (–∏–∑ test_delivery_api.sh)
echo -e "${BLUE}üîß 4D. –î–ï–¢–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ API –î–û–°–¢–ê–í–ö–ò${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è endpoint'–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
test_delivery_endpoint() {
    local url=$1
    local description=$2
    local expected_code=${3:-200}

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ü–æ–ª—É—á–∞–µ–º HTTP –∫–æ–¥ –∏ –æ—Ç–≤–µ—Ç
    local temp_file=$(mktemp)
    local http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X GET "$BASE_URL$url" -H "Accept: application/json")
    local response=$(cat "$temp_file")
    rm -f "$temp_file"

    if [[ $http_code -eq $expected_code ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
        if [ -n "$response" ]; then
            echo "   –û—Ç–≤–µ—Ç: $(echo "$response" | head -c 80)..."
        fi
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($http_code, –æ–∂–∏–¥–∞–ª—Å—è $expected_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        if [ -n "$response" ]; then
            echo "   –û—Ç–≤–µ—Ç: $(echo "$response" | head -c 100)..."
        fi
    fi
    echo "---"
}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–¥—Ä–µ—Å–æ–≤
echo -e "\n${CYAN}üìç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–û–î–°–ö–ê–ó–û–ö –ê–î–†–ï–°–û–í${NC}"
test_delivery_endpoint "/api/v1/delivery/address-suggestions?query=%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&limit=5" "–ü–æ–∏—Å–∫ –í–æ–ª–∂—Å–∫ (–ª–∏–º–∏—Ç 5)"
test_delivery_endpoint "/api/v1/delivery/address-suggestions?query=123&limit=10" "–ü–æ–∏—Å–∫ –ø–æ —Ü–∏—Ñ—Ä–∞–º"
test_delivery_endpoint "/api/v1/delivery/address-suggestions?query=%D0%A1%D0%9F%D0%B1" "–ü–æ–∏—Å–∫ –°–ü–± (–±–µ–∑ –ª–∏–º–∏—Ç–∞)"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∞–¥—Ä–µ—Å–æ–≤
echo -e "\n${CYAN}‚úÖ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –í–ê–õ–ò–î–ê–¶–ò–ò –ê–î–†–ï–°–û–í${NC}"
test_delivery_endpoint "/api/v1/delivery/validate-address?address=%D0%A0%D0%BE%D1%81%D1%81%D0%B8%D1%8F%2C%20%D0%A0%D0%B5%D1%81%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D0%BA%D0%B0%20%D0%9C%D0%B0%D1%80%D0%B8%D0%B9%20%D0%AD%D0%BB%2C%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA" "–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –í–æ–ª–∂—Å–∫–∞"
test_delivery_endpoint "/api/v1/delivery/validate-address?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA%2C%20%D1%83%D0%BB.%20%D0%9B%D0%B5%D0%BD%D0%B8%D0%BD%D0%B0%2C%20%D0%B4.%201" "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞–¥—Ä–µ—Å —É–ª. –õ–µ–Ω–∏–Ω–∞"

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "\n${CYAN}üí∞ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –†–ê–°–ß–ï–¢–ê –î–û–°–¢–ê–í–ö–ò${NC}"
test_delivery_endpoint "/api/v1/delivery/estimate?address=%D0%B3.%20%D0%92%D0%BE%D0%BB%D0%B6%D1%81%D0%BA&orderAmount=800" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ 800‚ÇΩ"
test_delivery_endpoint "/api/v1/delivery/estimate?address=%D0%9C%D0%BE%D1%81%D0%BA%D0%B2%D0%B0&orderAmount=500" "–†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –ú–æ—Å–∫–≤–∞ (–≤–Ω–µ –∑–æ–Ω—ã)"

# –¢–µ—Å—Ç—ã –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏ (locations vs delivery-locations)
echo -e "\n${CYAN}üì¶ –¢–ï–°–¢–´ –ü–£–ù–ö–¢–û–í –î–û–°–¢–ê–í–ö–ò (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ endpoint'—ã)${NC}"
test_delivery_endpoint "/api/v1/delivery/locations" "–í—Å–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ (alternative endpoint)"
test_delivery_endpoint "/api/v1/delivery/locations/1" "–ü—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ #1 (alternative endpoint)"
test_delivery_endpoint "/api/v1/delivery/locations/999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏" 404

# 4E. –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´ (–∏–∑ test_delivery_zones.sh)
echo -e "${BLUE}üéØ 4E. –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ó–û–ù–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–´${NC}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
test_zone_detailed() {
    local url=$1
    local description=$2
    local expected_zone=$3
    local expected_cost=$4

    echo -e "${YELLOW}–ó–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç: $description${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ü–æ–ª—É—á–∞–µ–º HTTP –∫–æ–¥ –∏ –æ—Ç–≤–µ—Ç
    local temp_file=$(mktemp)
    local http_code=$(curl -s -w '%{http_code}' -o "$temp_file" -X GET "$BASE_URL$url" -H "Accept: application/json")
    local response=$(cat "$temp_file")
    rm -f "$temp_file"

    if [[ $http_code -eq 200 ]]; then
        # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
        local zone_name=$(echo "$response" | jq -r '.zoneName // "N/A"')
        local delivery_cost=$(echo "$response" | jq -r '.deliveryCost // "N/A"')
        local delivery_available=$(echo "$response" | jq -r '.deliveryAvailable // false')
        local city=$(echo "$response" | jq -r '.city // "unknown"')

        echo "   HTTP: $http_code | –ó–æ–Ω–∞: $zone_name | –°—Ç–æ–∏–º–æ—Å—Ç—å: $delivery_cost ‚ÇΩ | –ì–æ—Ä–æ–¥: $city | –î–æ—Å—Ç—É–ø–Ω–∞: $delivery_available"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        if [[ "$zone_name" == "$expected_zone" ]] && [[ "$delivery_cost" == "$expected_cost" ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• - –ó–æ–Ω–∞ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        elif [[ "$zone_name" == "$expected_zone" ]]; then
            echo -e "${YELLOW}‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–û - –ó–æ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è, –Ω–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è (–æ–∂–∏–¥–∞–ª–æ—Å—å $expected_cost)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê - –û–∂–∏–¥–∞–ª–∞—Å—å –∑–æ–Ω–∞ '$expected_zone' —Å–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é $expected_cost${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê HTTP ($http_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo
}

# –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –±–∞–∑–æ–≤–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "\n${GREEN}üè™ –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ë–ê–ó–û–í–û–ô –î–û–°–¢–ê–í–ö–ò${NC}"
test_zone_detailed "/api/v1/delivery/estimate?address=test1&orderAmount=500" "–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç 1 (500‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"
test_zone_detailed "/api/v1/delivery/estimate?address=test2&orderAmount=1200" "–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç 2 (1200‚ÇΩ - –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=test3&orderAmount=800" "–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç 3 (800‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"

# –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏
echo -e "\n${CYAN}üéÅ –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –¢–ï–°–¢–´ –ë–ï–°–ü–õ–ê–¢–ù–û–ô –î–û–°–¢–ê–í–ö–ò${NC}"
test_zone_detailed "/api/v1/delivery/estimate?address=free1&orderAmount=1100" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 1 (1100‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=free2&orderAmount=1600" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 2 (1600‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=free3&orderAmount=1000" "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è 3 (—Ç–æ—á–Ω–æ 1000‚ÇΩ)" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"

# –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Ç–µ—Å—Ç—ã
echo -e "\n${PURPLE}‚öñÔ∏è –°–ò–°–¢–ï–ú–ê–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ì–†–ê–ù–ò–ß–ù–´–ï –¢–ï–°–¢–´${NC}"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary1&orderAmount=1000" "–ì—Ä–∞–Ω–∏—Ü–∞: —Ä–æ–≤–Ω–æ 1000‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary2&orderAmount=999" "–ì—Ä–∞–Ω–∏—Ü–∞: 999‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary3&orderAmount=1001" "–ì—Ä–∞–Ω–∏—Ü–∞: 1001‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "0"
test_zone_detailed "/api/v1/delivery/estimate?address=boundary4&orderAmount=0" "–ì—Ä–∞–Ω–∏—Ü–∞: 0‚ÇΩ" "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∑–æ–Ω–∞" "200.00"

# 5. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
echo -e "${BLUE}5. –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø${NC}"
echo -e "${YELLOW}–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...${NC}"

TIMESTAMP=$(date +%s)
USERNAME="testuser_$TIMESTAMP"
EMAIL="test$TIMESTAMP@pizzanat.com"
PHONE="+7900123456$(echo $TIMESTAMP | tail -c 3)"

register_data='{
  "username": "'$USERNAME'",
  "password": "test123456",
  "email": "'$EMAIL'",
  "firstName": "Test",
  "lastName": "User",
  "phone": "'$PHONE'"
}'

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
register_response=$(curl -s -L -X POST "$BASE_URL/api/v1/auth/register" \
  -H "Content-Type: application/json" \
  -H "Accept: application/json" \
  -d "$register_data")

JWT_TOKEN=$(echo "$register_response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

if [ -n "$JWT_TOKEN" ]; then
    echo -e "${GREEN}‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω${NC}"
    PASSED_TESTS=$((PASSED_TESTS + 1))
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    login_data='{"username": "'$USERNAME'", "password": "test123456"}'
    test_endpoint "/api/v1/auth/login" "–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É" "POST" "" "$login_data"

    # 5B. SMS –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø
    echo -e "${BLUE}üì± 5B. SMS –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø${NC}"

    # –¢–µ—Å—Ç–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è SMS
    SMS_TEST_PHONE="+79600948872"

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS –∫–æ–¥–∞...${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –û—Ç–ø—Ä–∞–≤–∫–∞ SMS –∫–æ–¥–∞ (–¢–û–õ–¨–ö–û –û–î–ò–ù –ó–ê–ü–†–û–°!)
    sms_send_data='{"phoneNumber": "'$SMS_TEST_PHONE'"}'

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞, –∏ HTTP –∫–æ–¥–∞ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
    temp_sms_file=$(mktemp)
    sms_send_code=$(curl -s -L -w '%{http_code}' -o "$temp_sms_file" -X POST "$BASE_URL/api/v1/auth/sms/send-code" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -d "$sms_send_data")

    sms_send_response=$(cat "$temp_sms_file")
    rm -f "$temp_sms_file"

    if [[ $sms_send_code -eq 200 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($sms_send_code) - SMS –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ—Ç–≤–µ—Ç–∞
        SMS_EXPIRES_AT=$(echo "$sms_send_response" | grep -o '"expiresAt":"[^"]*' | cut -d'"' -f4)
        SMS_CODE_LENGTH=$(echo "$sms_send_response" | grep -o '"codeLength":[0-9]*' | cut -d':' -f2)
        SMS_MASKED_PHONE=$(echo "$sms_send_response" | grep -o '"maskedPhoneNumber":"[^"]*' | cut -d'"' -f4)

        echo -e "${BLUE}   üì± –ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: $SMS_MASKED_PHONE${NC}"
        echo -e "${BLUE}   üî¢ –î–ª–∏–Ω–∞ –∫–æ–¥–∞: $SMS_CODE_LENGTH${NC}"
        echo -e "${BLUE}   ‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: $SMS_EXPIRES_AT${NC}"

        # –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –∫–æ–¥–æ–º
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –∫–æ–¥–æ–º...${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        wrong_verify_data='{"phoneNumber": "'$SMS_TEST_PHONE'", "code": "0000"}'
        wrong_verify_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/auth/sms/verify-code" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -d "$wrong_verify_data")

        if [[ $wrong_verify_code -eq 400 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($wrong_verify_code) - –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –æ—Ç–∫–ª–æ–Ω–µ–Ω${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($wrong_verify_code) - –û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

        # –¢–µ—Å—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º...${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        invalid_phone_data='{"phoneNumber": "+79999999999", "code": "1234"}'
        invalid_phone_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/auth/sms/verify-code" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -d "$invalid_phone_data")

        if [[ $invalid_phone_code -eq 400 ]] || [[ $invalid_phone_code -eq 404 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($invalid_phone_code) - –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä –æ—Ç–∫–ª–æ–Ω–µ–Ω${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($invalid_phone_code) - –û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400/404${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä—É—á–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
        echo -e "${BLUE}üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ SMS –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:${NC}"
        echo -e "${YELLOW}   üì± –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SMS –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:${NC}"
        echo -e "${YELLOW}   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SMS –Ω–∞ –Ω–æ–º–µ—Ä–µ $SMS_TEST_PHONE${NC}"
        echo -e "${YELLOW}   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:${NC}"
        echo -e "${YELLOW}      curl -X POST \"$BASE_URL/api/v1/auth/sms/verify-code\" \\${NC}"
        echo -e "${YELLOW}        -H \"Content-Type: application/json\" \\${NC}"
        echo -e "${YELLOW}        -d '{\"phoneNumber\": \"$SMS_TEST_PHONE\", \"code\": \"XXXX\"}'${NC}"
        echo -e "${YELLOW}   3. –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –ø–æ–ª—É—á–∏—Ç–µ JWT —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏${NC}"
        echo ""

    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($sms_send_code) - –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å SMS –∫–æ–¥${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        if [ -n "$sms_send_response" ]; then
            echo "–û—Ç–≤–µ—Ç: $(echo "$sms_send_response" | head -c 200)..."
        fi

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ SMS —Ç–µ—Å—Ç—ã
        FAILED_TESTS=$((FAILED_TESTS + 2))  # 2 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞ (—É–±—Ä–∞–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É)
        TOTAL_TESTS=$((TOTAL_TESTS + 2))
    fi

    # 6. –ö–æ—Ä–∑–∏–Ω–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è Android –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
    echo -e "${BLUE}6. –ö–û–†–ó–ò–ù–ê${NC}"
    test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É" "GET" "$JWT_TOKEN"

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å –æ–ø—Ü–∏—è–º–∏ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞ Android selectedOptions)
    cart_add_data='{"productId": 1, "quantity": 2, "selectedOptions": {"size": "large", "extraCheese": true}}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É —Å –æ–ø—Ü–∏—è–º–∏" "POST" "$JWT_TOKEN" "$cart_add_data"

    test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏" "GET" "$JWT_TOKEN"

    cart_update_data='{"quantity": 3}'
    test_endpoint "/api/v1/cart/items/1" "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞" "PUT" "$JWT_TOKEN" "$cart_update_data"

    test_endpoint "/api/v1/cart/items/1" "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã" "DELETE" "$JWT_TOKEN"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –æ–±—Ä–∞—Ç–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤
    cart_add_simple='{"productId": 1, "quantity": 1}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –∑–∞–∫–∞–∑–∞" "POST" "$JWT_TOKEN" "$cart_add_simple"

    # 7. –ó–∞–∫–∞–∑—ã (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è Android –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
    echo -e "${BLUE}7. –ó–ê–ö–ê–ó–´${NC}"

    # –¢–µ—Å—Ç 1: –ó–∞–∫–∞–∑ —Å deliveryLocationId (–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–ø–æ—Å–æ–±)
    order_data_location='{
        "deliveryLocationId": 1,
        "contactName": "–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "contactPhone": "+79001234567",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏"
    }'
    test_order_creation "$order_data_location" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏" "$JWT_TOKEN"

    # –¢–µ—Å—Ç 2: –ó–∞–∫–∞–∑ —Å deliveryAddress (Android —Å–ø–æ—Å–æ–±)
    order_data_address='{
        "deliveryAddress": "—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 123, –∫–≤. 45",
        "contactName": "Android –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "contactPhone": "+79009876543",
        "notes": "–ó–∞–∫–∞–∑ —á–µ—Ä–µ–∑ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
    }'
    test_order_creation "$order_data_address" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –∞–¥—Ä–µ—Å–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ (Android)" "$JWT_TOKEN"

    # –¢–µ—Å—Ç 3: –ó–∞–∫–∞–∑ —Å –æ–±–æ–∏–º–∏ –ø–æ–ª—è–º–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç deliveryLocationId)
    order_data_both='{
        "deliveryLocationId": 1,
        "deliveryAddress": "—É–ª. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º–∞—è, –¥. 999",
        "contactName": "–°–º–µ—à–∞–Ω–Ω—ã–π –¢–µ—Å—Ç",
        "contactPhone": "+79005555555",
        "comment": "–û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
        "notes": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏"
    }'
    test_order_creation "$order_data_both" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –¥–≤—É–º—è —Ç–∏–ø–∞–º–∏ –∞–¥—Ä–µ—Å–∞" "$JWT_TOKEN"

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
    test_endpoint "/api/v1/orders" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" "GET" "$JWT_TOKEN"

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑ –ø–æ ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    if [ -n "$LAST_CREATED_ORDER_ID" ]; then
        test_endpoint "/api/v1/orders/$LAST_CREATED_ORDER_ID" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ #$LAST_CREATED_ORDER_ID –ø–æ ID" "GET" "$JWT_TOKEN"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ ID${NC}"
    fi

    # 8. –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ô API
    echo -e "${BLUE}8. –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ô API${NC}"

    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 403)
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø —Å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    admin_forbidden_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/admin/orders" \
      -H "Authorization: Bearer $JWT_TOKEN")

    if [[ $admin_forbidden_code -eq 403 ]] || [[ $admin_forbidden_code -eq 401 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - HTTP $admin_forbidden_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 403/401, –ø–æ–ª—É—á–µ–Ω $admin_forbidden_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞)
    echo -e "${YELLOW}–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...${NC}"

    admin_login_data='{"username": "admin", "password": "admin123"}'
    admin_login_response=$(curl -s -L -X POST "$BASE_URL/api/v1/auth/login" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -d "$admin_login_data")

    ADMIN_TOKEN=$(echo "$admin_login_response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

    if [ -n "$ADMIN_TOKEN" ]; then
        echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω${NC}"

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–π–Ω—Ç—ã
        test_endpoint "/api/v1/admin/orders" "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
        status_update_data='{"statusName": "CONFIRMED"}'
        test_endpoint "/api/v1/admin/orders/1/status" "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞" "PUT" "$ADMIN_TOKEN" "$status_update_data"

        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
        new_product_data='{
            "name": "–¢–µ—Å—Ç–æ–≤–∞—è –ø–∏—Ü—Ü–∞ API",
            "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –ø–∏—Ü—Ü—ã —Å–æ–∑–¥–∞–Ω–Ω–æ–π —á–µ—Ä–µ–∑ API",
            "price": 599.00,
            "categoryId": 1,
            "weight": 500,
            "isAvailable": true,
            "isSpecialOffer": false
        }'
        test_endpoint "/api/v1/admin/products" "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "POST" "$ADMIN_TOKEN" "$new_product_data"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞
        update_product_data='{
            "name": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –ø–∏—Ü—Ü–∞",
            "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
            "price": 649.00,
            "categoryId": 1,
            "weight": 550,
            "isAvailable": true,
            "isSpecialOffer": true
        }'
        test_endpoint "/api/v1/admin/products/1" "–û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "PUT" "$ADMIN_TOKEN" "$update_product_data"

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª—å—à–∏–π ID —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ç–µ—Å—Ç—ã)
        test_endpoint "/api/v1/admin/products/999" "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç (–∞–¥–º–∏–Ω)" "DELETE" "$ADMIN_TOKEN"

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
        test_endpoint "/api/v1/admin/orders?page=0&size=10" "–ü–∞–≥–∏–Ω–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"

        # TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –¢–ï–°–¢–´
        echo -e "${BLUE}üì± TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –¢–ï–°–¢–´${NC}"

        echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...${NC}"
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è Telegram —Ç–µ—Å—Ç–∞
        cart_add_simple='{"productId": 1, "quantity": 1}'
        test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è Telegram —Ç–µ—Å—Ç–∞" "POST" "$JWT_TOKEN" "$cart_add_simple"

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ)
        telegram_order_data='{
            "deliveryAddress": "—É–ª. Telegram Test, –¥. 123, –∫–≤. 45",
            "contactName": "Telegram –¢–µ—Å—Ç–µ—Ä",
            "contactPhone": "+79001234567",
            "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
        }'

        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        telegram_order_response=$(curl -s -L -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $JWT_TOKEN" \
          -d "$telegram_order_data")

        telegram_order_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/orders" \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $JWT_TOKEN" \
          -d "$telegram_order_data")

        if [[ $telegram_order_code -eq 200 ]] || [[ $telegram_order_code -eq 201 ]]; then
            TELEGRAM_ORDER_ID=$(echo "$telegram_order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)

            if [ -n "$TELEGRAM_ORDER_ID" ]; then
                echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($telegram_order_code) - –ó–∞–∫–∞–∑ #$TELEGRAM_ORDER_ID —Å–æ–∑–¥–∞–Ω –¥–ª—è Telegram —Ç–µ—Å—Ç–∞${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))

                # –¢–µ—Å—Ç 1: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ CONFIRMED (–¥–æ–ª–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
                echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ CONFIRMED (Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)${NC}"
                TOTAL_TESTS=$((TOTAL_TESTS + 1))

                status_confirmed_data='{"statusName": "CONFIRMED"}'
                confirmed_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X PUT "$BASE_URL/api/v1/admin/orders/$TELEGRAM_ORDER_ID/status" \
                  -H "Content-Type: application/json" \
                  -H "Authorization: Bearer $ADMIN_TOKEN" \
                  -d "$status_confirmed_data")

                if [[ $confirmed_code -eq 200 ]]; then
                    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($confirmed_code) - –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ CONFIRMED${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                else
                    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($confirmed_code) - –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ CONFIRMED${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                fi
                echo "---"

                # –¢–µ—Å—Ç 2: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ DELIVERING (–µ—â–µ –æ–¥–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)
                echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ DELIVERING (Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ)${NC}"
                TOTAL_TESTS=$((TOTAL_TESTS + 1))

                status_delivering_data='{"statusName": "DELIVERING"}'
                delivering_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X PUT "$BASE_URL/api/v1/admin/orders/$TELEGRAM_ORDER_ID/status" \
                  -H "Content-Type: application/json" \
                  -H "Authorization: Bearer $ADMIN_TOKEN" \
                  -d "$status_delivering_data")

                if [[ $delivering_code -eq 200 ]]; then
                    echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($delivering_code) - –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ DELIVERING${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                else
                    echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($delivering_code) - –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ DELIVERING${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                fi
                echo "---"

                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö
                echo -e "${BLUE}üì± Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:${NC}"
                echo -e "${YELLOW}   –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_ENABLED, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID,${NC}"
                echo -e "${YELLOW}   —Ç–æ –≤ –≤–∞—à–µ–º Telegram —á–∞—Ç–µ –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è 3 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:${NC}"
                echo -e "${YELLOW}   1. üçï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #$TELEGRAM_ORDER_ID${NC}"
                echo -e "${YELLOW}   2. üîÑ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: CREATED ‚Üí CONFIRMED${NC}"
                echo -e "${YELLOW}   3. üîÑ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: CONFIRMED ‚Üí DELIVERING${NC}"
                echo "---"

            else
                echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê - –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 3))  # 3 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞
                TOTAL_TESTS=$((TOTAL_TESTS + 2))     # 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–∞
            fi
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($telegram_order_code) - –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è Telegram —Ç–µ—Å—Ç–∞${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 3))  # 3 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞
            TOTAL_TESTS=$((TOTAL_TESTS + 2))     # 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–∞
        fi

    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞${NC}"
        echo "–û—Ç–≤–µ—Ç: $admin_login_response"
        FAILED_TESTS=$((FAILED_TESTS + 6))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        TOTAL_TESTS=$((TOTAL_TESTS + 6))
    fi

    # 9. EDGE CASES –ò –ù–ï–ì–ê–¢–ò–í–ù–´–ï –¢–ï–°–¢–´
    echo -e "${BLUE}9. EDGE CASES –ò –ù–ï–ì–ê–¢–ò–í–ù–´–ï –¢–ï–°–¢–´${NC}"

    # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã
    test_endpoint "/api/v1/products/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–¥—É–∫—Ç" "GET"
    test_endpoint "/api/v1/categories/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è" "GET"
    test_endpoint "/api/v1/delivery-locations/99999" "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—É–Ω–∫—Ç –¥–æ—Å—Ç–∞–≤–∫–∏" "GET"

    # –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
    invalid_cart_data='{"productId": "invalid", "quantity": -1}'
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    invalid_cart_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/cart/items" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $JWT_TOKEN" \
      -d "$invalid_cart_data")

    if [[ $invalid_cart_code -eq 400 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $invalid_cart_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $invalid_cart_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    test_endpoint "/api/v1/products/search?query=" "–ü–æ–∏—Å–∫ —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"

    # –ü–æ–∏—Å–∫ —Å –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    long_query=$(printf 'a%.0s' {1..1000})
    test_endpoint "/api/v1/products/search?query=$long_query" "–ü–æ–∏—Å–∫ —Å –¥–ª–∏–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º"

    # –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º —ç–Ω–¥–ø–æ–π–Ω—Ç–∞–º
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    unauthorized_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/cart")

    if [[ $unauthorized_code -eq 401 ]] || [[ $unauthorized_code -eq 403 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - HTTP $unauthorized_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 401/403, –ø–æ–ª—É—á–µ–Ω $unauthorized_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –ù–µ–≤–µ—Ä–Ω—ã–π JWT —Ç–æ–∫–µ–Ω
    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ù–µ–≤–µ—Ä–Ω—ã–π JWT —Ç–æ–∫–µ–Ω${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    invalid_token_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/cart" \
      -H "Authorization: Bearer invalid.jwt.token")

    if [[ $invalid_token_code -eq 401 ]] || [[ $invalid_token_code -eq 403 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –æ—Ç–∫–ª–æ–Ω–µ–Ω - HTTP $invalid_token_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 401/403, –ø–æ–ª—É—á–µ–Ω $invalid_token_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # 10. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´
    echo -e "${BLUE}10. –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´${NC}"

    # –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
    test_endpoint "/api/v1/delivery-locations" "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏" "GET"

    # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤
    invalid_order_data='{
        "contactName": "",
        "contactPhone": "–Ω–µ–≤–µ—Ä–Ω—ã–π_—Ç–µ–ª–µ—Ñ–æ–Ω"
    }'

    echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Ç–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    cart_add_simple='{"productId": 1, "quantity": 1}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è —Ç–µ—Å—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏" "POST" "$JWT_TOKEN" "$cart_add_simple"

    validation_http_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X POST "$BASE_URL/api/v1/orders" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -H "Authorization: Bearer $JWT_TOKEN" \
      -d "$invalid_order_data")

    if [[ $validation_http_code -eq 400 ]]; then
        echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–≤–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - HTTP $validation_http_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω $validation_http_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    echo "---"

    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
    test_endpoint "/api/v1/products/search?query=%D0%9F%D0%B8%D1%86%D1%86%D0%B0" "–ü–æ–∏—Å–∫ '–ü–∏—Ü—Ü–∞'"
    test_endpoint "/api/v1/products/search?query=%D0%BD%D0%B0%D0%BF%D0%B8%D1%82%D0%BE%D0%BA" "–ü–æ–∏—Å–∫ '–Ω–∞–ø–∏—Ç–æ–∫'"

    # –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
    test_endpoint "/api/v1/products?page=0&size=5" "–ü–∞–≥–∏–Ω–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤"

    # –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π
    test_endpoint "/api/v1/products/category/99999" "–ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"

    # --- TELEGRAM AUTH TEST ---
    echo -e "${BLUE}üì± 5B. –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ß–ï–†–ï–ó TELEGRAM (–ø–æ–ª—É–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π)${NC}"

    TELEGRAM_DEVICE_ID="test_telegram_$(date +%s)"
    TELEGRAM_INIT_RESPONSE=$(curl -s -X POST "$BASE_URL/api/v1/auth/telegram/init" \
        -H "Content-Type: application/json" \
        -d '{"deviceId":"'$TELEGRAM_DEVICE_ID'"}')

    TELEGRAM_AUTH_TOKEN=$(echo "$TELEGRAM_INIT_RESPONSE" | grep -o '"authToken":"[^"]*' | cut -d'"' -f4)
    TELEGRAM_BOT_URL=$(echo "$TELEGRAM_INIT_RESPONSE" | grep -o '"telegramBotUrl":"[^"]*' | cut -d'"' -f4)

    if [ -z "$TELEGRAM_AUTH_TOKEN" ] || [ -z "$TELEGRAM_BOT_URL" ]; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Telegram auth token –∏–ª–∏ —Å—Å—ã–ª–∫—É${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        TOTAL_TESTS=$((TOTAL_TESTS + 1))
    else
        echo -e "${YELLOW}–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram:${NC}"
        echo -e "   ${BLUE}$TELEGRAM_BOT_URL${NC}"
        echo -e "${YELLOW}–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ Telegram, —Ç–µ—Å—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É...${NC}"
        echo ""
        # –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (60 —Å–µ–∫)
        for i in {60..1}; do
            printf "\r   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: %2d —Å–µ–∫" $i
            sleep 1
        done
        echo ""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–∫–µ–Ω–∞
        TELEGRAM_STATUS_RESPONSE=$(curl -s "$BASE_URL/api/v1/auth/telegram/status/$TELEGRAM_AUTH_TOKEN")
        TELEGRAM_STATUS=$(echo "$TELEGRAM_STATUS_RESPONSE" | grep -o '"status":"[^"]*' | cut -d'"' -f4)
        TELEGRAM_JWT_TOKEN=$(echo "$TELEGRAM_STATUS_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
        if [ "$TELEGRAM_STATUS" = "CONFIRMED" ] && [ -n "$TELEGRAM_JWT_TOKEN" ]; then
            echo -e "${GREEN}‚úÖ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
            TOTAL_TESTS=$((TOTAL_TESTS + 1))
            # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≥–æ–Ω—è–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            echo -e "${BLUE}‚ñ∂Ô∏è  –ü–†–û–í–ï–†–ö–ê Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ)${NC}"
            test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"
            cart_add_data='{"productId": 1, "quantity": 2, "selectedOptions": {"size": "large", "extraCheese": true}}'
            test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É —Å –æ–ø—Ü–∏—è–º–∏ (Telegram)" "POST" "$TELEGRAM_JWT_TOKEN" "$cart_add_data"
            test_endpoint "/api/v1/cart" "–ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"
            cart_update_data='{"quantity": 3}'
            test_endpoint "/api/v1/cart/items/1" "–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ (Telegram)" "PUT" "$TELEGRAM_JWT_TOKEN" "$cart_update_data"
            test_endpoint "/api/v1/cart/items/1" "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã (Telegram)" "DELETE" "$TELEGRAM_JWT_TOKEN"
            cart_add_simple='{"productId": 1, "quantity": 1}'
            test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –∑–∞–∫–∞–∑–∞ (Telegram)" "POST" "$TELEGRAM_JWT_TOKEN" "$cart_add_simple"

            # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö ID
            TELEGRAM_ORDER_IDS=()

            # –ó–∞–∫–∞–∑ —Å deliveryLocationId
            order_data_location='{"deliveryLocationId": 1, "contactName": "Telegram User", "contactPhone": "+79001234567", "comment": "Telegram –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏"}'
            test_order_creation "$order_data_location" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –ø—É–Ω–∫—Ç–æ–º –≤—ã–¥–∞—á–∏ (Telegram)" "$TELEGRAM_JWT_TOKEN"
            if [ -n "$LAST_CREATED_ORDER_ID" ]; then
                TELEGRAM_ORDER_IDS+=("$LAST_CREATED_ORDER_ID")
            fi

            # –ó–∞–∫–∞–∑ —Å deliveryAddress
            order_data_address='{"deliveryAddress": "—É–ª. Telegram, –¥. 1", "contactName": "Telegram User", "contactPhone": "+79001234567", "notes": "Telegram –∑–∞–∫–∞–∑ —Å –∞–¥—Ä–µ—Å–æ–º"}'
            test_order_creation "$order_data_address" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –∞–¥—Ä–µ—Å–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ (Telegram)" "$TELEGRAM_JWT_TOKEN"
            if [ -n "$LAST_CREATED_ORDER_ID" ]; then
                TELEGRAM_ORDER_IDS+=("$LAST_CREATED_ORDER_ID")
            fi

            # –ó–∞–∫–∞–∑ —Å –æ–±–æ–∏–º–∏ –ø–æ–ª—è–º–∏
            order_data_both='{"deliveryLocationId": 1, "deliveryAddress": "—É–ª. –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º–∞—è, –¥. 999", "contactName": "Telegram User", "contactPhone": "+79005555555", "comment": "Telegram –∑–∞–∫–∞–∑", "notes": "Telegram notes"}'
            test_order_creation "$order_data_both" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ —Å –¥–≤—É–º—è —Ç–∏–ø–∞–º–∏ –∞–¥—Ä–µ—Å–∞ (Telegram)" "$TELEGRAM_JWT_TOKEN"
            if [ -n "$LAST_CREATED_ORDER_ID" ]; then
                TELEGRAM_ORDER_IDS+=("$LAST_CREATED_ORDER_ID")
            fi

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
            test_endpoint "/api/v1/orders" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π)
            if [ ${#TELEGRAM_ORDER_IDS[@]} -gt 0 ]; then
                FIRST_TELEGRAM_ORDER_ID="${TELEGRAM_ORDER_IDS[0]}"
                test_endpoint "/api/v1/orders/$FIRST_TELEGRAM_ORDER_ID" "–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑ #$FIRST_TELEGRAM_ORDER_ID –ø–æ ID (Telegram)" "GET" "$TELEGRAM_JWT_TOKEN"
            else
                echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑—ã –¥–ª—è Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ ID${NC}"
            fi

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ä—É—á–Ω–∞—è)
            echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –ë–î, —á—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ Telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7...${NC}"
        else
            echo -e "${RED}‚ùå Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            TOTAL_TESTS=$((TOTAL_TESTS + 1))
            echo "–û—Ç–≤–µ—Ç: $TELEGRAM_STATUS_RESPONSE"
        fi
    fi
    # --- END TELEGRAM AUTH TEST ---

    # 10.5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù–°–ö–û–ì–û –ë–û–¢–ê –° –ü–õ–ê–¢–ï–ñ–ê–ú–ò
    echo -e "${BLUE}ü§ñ 10.5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–î–ú–ò–ù–°–ö–û–ì–û –ë–û–¢–ê –° –ü–õ–ê–¢–ï–ñ–ê–ú–ò${NC}"

    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
    echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞...${NC}"

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è —Ç–µ—Å—Ç–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
    cart_add_admin_test='{"productId": 1, "quantity": 2}'
    test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞ —Ç–µ—Å—Ç–∞" "POST" "$JWT_TOKEN" "$cart_add_admin_test"

    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
    admin_bot_order_data='{
        "deliveryLocationId": 1,
        "contactName": "Admin Bot Test User",
        "contactPhone": "+79991234567",
        "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏"
    }'
    test_order_creation "$admin_bot_order_data" "–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞" "$JWT_TOKEN"

    ADMIN_BOT_ORDER_ID="$LAST_CREATED_ORDER_ID"

    if [ -n "$ADMIN_BOT_ORDER_ID" ] && [ "$ADMIN_BOT_ORDER_ID" != "" ]; then
        echo -e "${GREEN}‚úÖ –ó–∞–∫–∞–∑ #$ADMIN_BOT_ORDER_ID —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞${NC}"

        # –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–∫–∞–∑–∞
        sbp_payment_data='{
            "orderId": '$ADMIN_BOT_ORDER_ID',
            "method": "SBP",
            "bankId": "sberbank",
            "description": "–¢–µ—Å—Ç –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞"
        }'

        echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #$ADMIN_BOT_ORDER_ID...${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        temp_sbp_admin_file=$(mktemp)
        printf '%s' "$sbp_payment_data" > "$temp_sbp_admin_file"

        temp_sbp_admin_response=$(mktemp)
        sbp_admin_code=$(curl -s -L -w '%{http_code}' -o "$temp_sbp_admin_response" \
            -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            --data-binary "@$temp_sbp_admin_file")

        sbp_admin_response=$(cat "$temp_sbp_admin_response")
        rm -f "$temp_sbp_admin_file" "$temp_sbp_admin_response"

        if [[ $sbp_admin_code -eq 200 ]] || [[ $sbp_admin_code -eq 201 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($sbp_admin_code) - –°–ë–ü –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))

            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–ª–∞—Ç–µ–∂–∞ –∏ –Æ–ö–∞—Å—Å–∞ ID
            sbp_payment_id=$(echo "$sbp_admin_response" | grep -o '"id":[0-9]*' | cut -d':' -f2 | head -n1)
            yookassa_payment_id=$(echo "$sbp_admin_response" | grep -o '"yookassaPaymentId":"[^"]*' | cut -d'"' -f4)

            echo -e "${BLUE}üí≥ –°–ë–ü –ø–ª–∞—Ç–µ–∂: #$sbp_payment_id (–Æ–ö–∞—Å—Å–∞: $yookassa_payment_id)${NC}"
            echo -e "${CYAN}üîó –°—Å—ã–ª–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: https://yoomoney.ru/checkout/payments/v2/contract?orderId=$yookassa_payment_id${NC}"
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($sbp_admin_code) - –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –°–ë–ü –ø–ª–∞—Ç–µ–∂${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            if [ -n "$sbp_admin_response" ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$sbp_admin_response" | head -c 150)..."
            fi
        fi

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–∫–∞–∑–∞
        card_payment_data='{
            "orderId": '$ADMIN_BOT_ORDER_ID',
            "method": "BANK_CARD",
            "description": "–¢–µ—Å—Ç –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞"
        }'

        echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #$ADMIN_BOT_ORDER_ID...${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        temp_card_admin_file=$(mktemp)
        printf '%s' "$card_payment_data" > "$temp_card_admin_file"

        temp_card_admin_response=$(mktemp)
        card_admin_code=$(curl -s -L -w '%{http_code}' -o "$temp_card_admin_response" \
            -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            --data-binary "@$temp_card_admin_file")

        card_admin_response=$(cat "$temp_card_admin_response")
        rm -f "$temp_card_admin_file" "$temp_card_admin_response"

        if [[ $card_admin_code -eq 200 ]] || [[ $card_admin_code -eq 201 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($card_admin_code) - –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))

            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–ª–∞—Ç–µ–∂–∞ –∏ –Æ–ö–∞—Å—Å–∞ ID
            card_payment_id=$(echo "$card_admin_response" | grep -o '"id":[0-9]*' | cut -d':' -f2 | head -n1)
            card_yookassa_payment_id=$(echo "$card_admin_response" | grep -o '"yookassaPaymentId":"[^"]*' | cut -d'"' -f4)

            echo -e "${BLUE}üí≥ –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂: #$card_payment_id (–Æ–ö–∞—Å—Å–∞: $card_yookassa_payment_id)${NC}"
            echo -e "${CYAN}üîó –°—Å—ã–ª–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: https://yoomoney.ru/checkout/payments/v2/contract?orderId=$card_yookassa_payment_id${NC}"
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($card_admin_code) - –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            if [ -n "$card_admin_response" ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$card_admin_response" | head -c 150)..."
            fi
        fi

        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏
        if [ -n "$ADMIN_TOKEN" ]; then
            test_endpoint "/api/v1/admin/orders/active" "–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã (–∞–¥–º–∏–Ω –±–æ—Ç)" "GET" "$ADMIN_TOKEN"
            test_endpoint "/api/v1/admin/orders/$ADMIN_BOT_ORDER_ID" "–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ #$ADMIN_BOT_ORDER_ID (–∞–¥–º–∏–Ω –±–æ—Ç)" "GET" "$ADMIN_TOKEN"
            test_endpoint "/api/v1/payments/yookassa/order/$ADMIN_BOT_ORDER_ID" "–ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞—Ç–µ–∂–∏ –∑–∞–∫–∞–∑–∞ #$ADMIN_BOT_ORDER_ID (–∞–¥–º–∏–Ω –±–æ—Ç)" "GET" "$ADMIN_TOKEN"
        fi

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        echo -e "${YELLOW}–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...${NC}"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
        cart_add_cash='{"productId": 1, "quantity": 1}'
        test_endpoint "/api/v1/cart/items" "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞" "POST" "$JWT_TOKEN" "$cart_add_cash"

        # –°–æ–∑–¥–∞–µ–º –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑
        cash_order_data='{
            "deliveryLocationId": 1,
            "contactName": "Cash Test User",
            "contactPhone": "+79991234567",
            "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏"
        }'
        test_order_creation "$cash_order_data" "–°–æ–∑–¥–∞—Ç—å –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è" "$JWT_TOKEN"

        CASH_ORDER_ID="$LAST_CREATED_ORDER_ID"

        if [ -n "$CASH_ORDER_ID" ] && [ "$CASH_ORDER_ID" != "" ]; then
            echo -e "${GREEN}‚úÖ –ù–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ #$CASH_ORDER_ID —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è${NC}"

            if [ -n "$ADMIN_TOKEN" ]; then
                test_endpoint "/api/v1/admin/orders/$CASH_ORDER_ID" "–ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ #$CASH_ORDER_ID (–∞–¥–º–∏–Ω –±–æ—Ç)" "GET" "$ADMIN_TOKEN"
            fi
        fi

        echo -e "${BLUE}üìä –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ê–î–ú–ò–ù–°–ö–û–ì–û –ë–û–¢–ê:${NC}"
        echo -e "${YELLOW}1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞${NC}"
        echo -e "${YELLOW}2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /orders –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤${NC}"
        echo -e "${YELLOW}3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–∫–∞–∑ #$ADMIN_BOT_ORDER_ID - –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂–∏${NC}"
        if [ -n "$CASH_ORDER_ID" ]; then
            echo -e "${YELLOW}4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–∫–∞–∑ #$CASH_ORDER_ID - –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å '–ù–∞–ª–∏—á–Ω—ã–º–∏'${NC}"
        fi
        echo -e "${YELLOW}5. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /details $ADMIN_BOT_ORDER_ID –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π${NC}"
        echo -e "${YELLOW}6. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –≤ YooMoney${NC}"

    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 4))  # 4 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞
        TOTAL_TESTS=$((TOTAL_TESTS + 4))
    fi

    # 11. –ÆKASSA –ü–õ–ê–¢–ï–ñ–ò (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è)
    echo -e "${BLUE}üí≥ 11. –ÆKASSA –ü–õ–ê–¢–ï–ñ–ò${NC}"

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
    create_payment_test_order() {
        local token=$1
        local order_data=$(cat <<EOF
{
    "deliveryAddress": "Volzhsk, Testovaya street, 1",
    "contactName": "Test User YooKassa",
    "contactPhone": "+79001234567",
    "comment": "Test order for YooKassa payment testing"
}
EOF
)

        echo -e "${CYAN}üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞...${NC}" >&2

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        local cart_data=$(cat <<EOF
{
    "productId": 1,
    "quantity": 1
}
EOF
)

        local temp_cart_file=$(mktemp)
        printf '%s' "$cart_data" > "$temp_cart_file"

        local cart_response=$(curl -s -X POST "$BASE_URL/api/v1/cart/items" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Authorization: Bearer $token" \
            --data-binary "@$temp_cart_file")

        rm -f "$temp_cart_file"

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        local temp_order_file=$(mktemp)
        printf '%s' "$order_data" > "$temp_order_file"

        local order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Authorization: Bearer $token" \
            --data-binary "@$temp_order_file")

        rm -f "$temp_order_file"

        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –∑–∞–∫–∞–∑–∞
        local order_id=$(echo "$order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2 | head -n1 | tr -d '\n\r')

        if [ -n "$order_id" ] && [ "$order_id" != "" ]; then
            echo -e "${GREEN}‚úÖ –ó–∞–∫–∞–∑ #$order_id —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞${NC}" >&2
            echo "$order_id"
        else
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π${NC}" >&2
            echo "   –û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: $(echo "$order_response" | head -c 100)..." >&2
            return 1
        fi
    }

    # Health checks –Æ–ö–∞—Å—Å–∞
    test_endpoint "/api/v1/payments/yookassa/health" "–Æ–ö–∞—Å—Å–∞ Health Check"
    test_endpoint "/api/v1/payments/metrics/health" "–ú–µ—Ç—Ä–∏–∫–∏ Health Check"

    # –°–ë–ü –±–∞–Ω–∫–∏ API (–ø—É–±–ª–∏—á–Ω—ã–π)
    test_endpoint "/api/v1/payments/yookassa/sbp/banks" "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤ –°–ë–ü"

    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    PAYMENT_ORDER_ID=$(create_payment_test_order "$JWT_TOKEN" 2>/dev/null)

    echo -e "${BLUE}üîç –û—Ç–ª–∞–¥–∫–∞: PAYMENT_ORDER_ID = '$PAYMENT_ORDER_ID'${NC}"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PAYMENT_ORDER_ID —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    if [[ "$PAYMENT_ORDER_ID" =~ ^[0-9]+$ ]] && [ "$PAYMENT_ORDER_ID" -gt 0 ]; then

        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ JSON)
        card_payment_data=$(cat <<EOF
{
    "orderId": $PAYMENT_ORDER_ID,
    "method": "BANK_CARD",
    "description": "Test card payment"
}
EOF
)

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ —Å –≤—ã–≤–æ–¥–æ–º —Å—Å—ã–ª–∫–∏
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        temp_card_payment_file=$(mktemp)
        printf '%s' "$card_payment_data" > "$temp_card_payment_file"

        temp_card_response_file=$(mktemp)
        card_payment_code=$(curl -s -L -w '%{http_code}' -o "$temp_card_response_file" \
            -X POST \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Accept: application/json; charset=utf-8" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            --data-binary "@$temp_card_payment_file" \
            --connect-timeout 10 \
            --max-time 30 \
            "$BASE_URL/api/v1/payments/yookassa/create")

        card_payment_response=$(cat "$temp_card_response_file")
        rm -f "$temp_card_payment_file" "$temp_card_response_file"

        if [[ $card_payment_code -eq 200 ]] || [[ $card_payment_code -eq 201 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($card_payment_code)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))

            # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫–∞—Ä—Ç–æ–π
            card_confirmation_url=$(echo "$card_payment_response" | grep -o '"confirmation_url":"[^"]*' | cut -d'"' -f4)

            if [ -n "$card_confirmation_url" ]; then
                echo -e "${BLUE}üí≥ –°–°–´–õ–ö–ê –î–õ–Ø –û–ü–õ–ê–¢–´ –ö–ê–†–¢–û–ô:${NC}"
                echo -e "${CYAN}üîó $card_confirmation_url${NC}"
                echo -e "${YELLOW}üí° –¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞: 5555555555554444, 12/25, CVC: 123${NC}"
            fi

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
            if [ -n "$card_payment_response" ] && [ ${#card_payment_response} -gt 10 ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$card_payment_response" | head -c 80)..."
            fi
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($card_payment_code)${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))

            if [ -n "$card_payment_response" ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$card_payment_response" | head -c 200)..."
            fi
        fi
        echo "---"

        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ JSON)
        sbp_payment_data=$(cat <<EOF
{
    "orderId": $PAYMENT_ORDER_ID,
    "method": "SBP",
    "bankId": "100000000111",
    "description": "Test SBP payment"
}
EOF
)

        # –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ —Å –≤—ã–≤–æ–¥–æ–º —Å—Å—ã–ª–∫–∏
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        temp_sbp_payment_file=$(mktemp)
        printf '%s' "$sbp_payment_data" > "$temp_sbp_payment_file"

        temp_sbp_response_file=$(mktemp)
        sbp_payment_code=$(curl -s -L -w '%{http_code}' -o "$temp_sbp_response_file" \
            -X POST \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Accept: application/json; charset=utf-8" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            --data-binary "@$temp_sbp_payment_file" \
            --connect-timeout 10 \
            --max-time 30 \
            "$BASE_URL/api/v1/payments/yookassa/create")

        sbp_payment_response=$(cat "$temp_sbp_response_file")
        rm -f "$temp_sbp_payment_file" "$temp_sbp_response_file"

        if [[ $sbp_payment_code -eq 200 ]] || [[ $sbp_payment_code -eq 201 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($sbp_payment_code)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))

            # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –¥–ª—è –°–ë–ü –æ–ø–ª–∞—Ç—ã
            sbp_confirmation_url=$(echo "$sbp_payment_response" | grep -o '"confirmation_url":"[^"]*' | cut -d'"' -f4)

            if [ -n "$sbp_confirmation_url" ]; then
                echo -e "${BLUE}üì± –°–°–´–õ–ö–ê –î–õ–Ø –°–ë–ü –û–ü–õ–ê–¢–´:${NC}"
                echo -e "${CYAN}üîó $sbp_confirmation_url${NC}"
                echo -e "${YELLOW}üí° –°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–∞–Ω–∫–∞${NC}"
                echo -e "${YELLOW}üè¶ –í—ã–±—Ä–∞–Ω –±–∞–Ω–∫: –°–±–µ—Ä–±–∞–Ω–∫ (–∫–æ–¥: 100000000111)${NC}"
            fi

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
            if [ -n "$sbp_payment_response" ] && [ ${#sbp_payment_response} -gt 10 ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$sbp_payment_response" | head -c 80)..."
            fi
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($sbp_payment_code)${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))

            if [ -n "$sbp_payment_response" ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$sbp_payment_response" | head -c 200)..."
            fi
        fi
        echo "---"

        # –ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞ (—Å –≤—ã–≤–æ–¥–æ–º —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –æ–ø–ª–∞—Ç—ã —Å –ø–æ–ª–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
        temp_payment_url_file=$(mktemp)
        payment_url_code=$(curl -s -L -w '%{http_code}' -o "$temp_payment_url_file" \
          -X GET "$BASE_URL/api/v1/orders/$PAYMENT_ORDER_ID/payment-url" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $JWT_TOKEN")

        payment_url_response=$(cat "$temp_payment_url_file")
        rm -f "$temp_payment_url_file"

        if [[ $payment_url_code -eq 200 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• ($payment_url_code)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))

            # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞
            payment_url=$(echo "$payment_url_response" | grep -o '"paymentUrl":"[^"]*' | cut -d'"' -f4)

            if [ -n "$payment_url" ]; then
                echo -e "${BLUE}üí≥ –°–°–´–õ–ö–ê –î–õ–Ø –û–ü–õ–ê–¢–´:${NC}"
                echo -e "${CYAN}üîó $payment_url${NC}"
                echo -e "${YELLOW}üì± –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Æ–ö–∞—Å—Å–∞${NC}"
                echo -e "${YELLOW}üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ä—Ç—É: 5555555555554444, 12/25, 123${NC}"
                echo -e "${YELLOW}üîí –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞ –Æ–ö–∞—Å—Å–∞${NC}"
            else
                echo -e "${YELLOW}‚ö†Ô∏è URL –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ${NC}"
                echo "   –û—Ç–≤–µ—Ç: $(echo "$payment_url_response" | head -c 150)..."
            fi
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê ($payment_url_code)${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))

            if [ -n "$payment_url_response" ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$payment_url_response" | head -c 150)..."
            fi
        fi
        echo "---"

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞
        test_endpoint "/api/v1/payments/yookassa/order/$PAYMENT_ORDER_ID" "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞" "GET" "$JWT_TOKEN"

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –∞–¥–º–∏–Ω —Ç–æ–∫–µ–Ω)
        if [ -n "$ADMIN_TOKEN" ]; then
            test_endpoint "/api/v1/payments/metrics/summary" "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –º–µ—Ç—Ä–∏–∫ (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"
            test_endpoint "/api/v1/payments/metrics/details" "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫ (–∞–¥–º–∏–Ω)" "GET" "$ADMIN_TOKEN"
            test_endpoint "/api/v1/payments/metrics/refresh" "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ (–∞–¥–º–∏–Ω)" "POST" "$ADMIN_TOKEN"
        fi

        # –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
        invalid_payment_data=$(cat <<EOF
{
    "orderId": 99999,
    "method": "INVALID_METHOD",
    "description": "Invalid payment test"
}
EOF
)

        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        temp_invalid_file=$(mktemp)
        printf '%s' "$invalid_payment_data" > "$temp_invalid_file"

        invalid_payment_code=$(curl -s -L -o /dev/null -w '%{http_code}' \
          -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
          -H "Content-Type: application/json; charset=utf-8" \
          -H "Authorization: Bearer $JWT_TOKEN" \
          --data-binary "@$temp_invalid_file")

        rm -f "$temp_invalid_file"

        if [[ $invalid_payment_code -eq 400 ]] || [[ $invalid_payment_code -eq 422 ]] || [[ $invalid_payment_code -eq 500 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã - HTTP $invalid_payment_code)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400/422/500, –ø–æ–ª—É—á–µ–Ω $invalid_payment_code)${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω –æ–∂–∏–¥–∞–µ–º—ã–π –∫–æ–¥)
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))
        nonexistent_payment_code=$(curl -s -L -o /dev/null -w '%{http_code}' -X GET "$BASE_URL/api/v1/payments/yookassa/99999" \
          -H "Authorization: Bearer $JWT_TOKEN")

        if [[ $nonexistent_payment_code -eq 404 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω - HTTP $nonexistent_payment_code)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 404, –ø–æ–ª—É—á–µ–Ω $nonexistent_payment_code)${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

        # –¢–µ—Å—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω –æ–∂–∏–¥–∞–µ–º—ã–π –∫–æ–¥)
        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        temp_unauth_file=$(mktemp)
        printf '%s' "$card_payment_data" > "$temp_unauth_file"

        unauthorized_payment_code=$(curl -s -L -o /dev/null -w '%{http_code}' \
          -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
          -H "Content-Type: application/json; charset=utf-8" \
          --data-binary "@$temp_unauth_file")

        rm -f "$temp_unauth_file"

        if [[ $unauthorized_payment_code -eq 401 ]] || [[ $unauthorized_payment_code -eq 403 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (–Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - HTTP $unauthorized_payment_code)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 401/403, –ø–æ–ª—É—á–µ–Ω $unauthorized_payment_code)${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

        # Webhook –∏–º–∏—Ç–∞—Ü–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω —Ç–µ—Å—Ç)
        webhook_data=$(cat <<EOF
{
    "type": "notification",
    "event": "payment.succeeded",
    "object": {
        "id": "test-payment-id-12345",
        "status": "succeeded",
        "amount": {
            "value": "100.00",
            "currency": "RUB"
        },
        "metadata": {
            "orderId": "$PAYMENT_ORDER_ID"
        }
    }
}
EOF
)

        echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è webhook –¥–∞–Ω–Ω—ã—Ö
        temp_webhook_file=$(mktemp)
        printf '%s' "$webhook_data" > "$temp_webhook_file"

        # –í—ã–ø–æ–ª–Ω—è–µ–º –µ–¥–∏–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –∫–æ–¥–∞, –∏ –æ—Ç–≤–µ—Ç–∞
        temp_webhook_response=$(mktemp)
        webhook_code=$(curl -s -L -w '%{http_code}' -o "$temp_webhook_response" \
          -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
          -H "Content-Type: application/json; charset=utf-8" \
          -H "Accept: application/json; charset=utf-8" \
          --data-binary "@$temp_webhook_file" \
          --connect-timeout 10 \
          --max-time 30)

        webhook_response=$(cat "$temp_webhook_response")

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        rm -f "$temp_webhook_file" "$temp_webhook_response"

        # Webhook –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 200 –¥–∞–∂–µ –µ—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω
        if [[ $webhook_code -eq 200 ]]; then
            echo -e "${GREEN}‚úÖ –£–°–ü–ï–• (webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω - HTTP $webhook_code)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
            if [ -n "$webhook_response" ] && [ ${#webhook_response} -gt 5 ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$webhook_response" | head -c 80)..."
            fi
        else
            echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê (–æ–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 200, –ø–æ–ª—É—á–µ–Ω $webhook_code)${NC}"
            if [ -n "$webhook_response" ]; then
                echo "   –û—Ç–≤–µ—Ç webhook: $(echo "$webhook_response" | head -c 150)..."
            fi
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
        echo "---"

    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 8))  # 8 –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        TOTAL_TESTS=$((TOTAL_TESTS + 8))
    fi

    # 11.5. –°–ë–ü –§–õ–û–£ –¢–ï–°–¢–´ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –°–ë–ü –∑–∞–∫–∞–∑—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –±–æ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ payment.succeeded
    echo -e "${BLUE}üì± 11.5. –°–ë–ü –§–õ–û–£ –¢–ï–°–¢–´${NC}"
    echo -e "${CYAN}–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–∫–∞–∑—ã —Å –°–ë–ü –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã${NC}"

    if [ -n "$JWT_TOKEN" ]; then
        echo -e "${YELLOW}–¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –°–ë–ü (–¥–æ–ª–∂–µ–Ω –ù–ï –ø–æ–ø–∞—Å—Ç—å –≤ –±–æ—Ç —Å—Ä–∞–∑—É)${NC}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É —Å–Ω–∞—á–∞–ª–∞
        cart_data='{
            "productId": 1,
            "quantity": 1
        }'
        
        cart_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/cart/items" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -d "$cart_data")
        
        cart_http_code=${cart_response: -3}
        
        if [ "$cart_http_code" = "200" ]; then
            echo -e "${GREEN}‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –°–ë–ü —Ç–µ—Å—Ç–∞${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É (HTTP $cart_http_code), –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...${NC}"
        fi
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –¥–ª—è –°–ë–ü —Ç–µ—Å—Ç–∞
        sbp_order_data='{
            "deliveryLocationId": 1,
            "contactName": "–°–ë–ü –¢–µ—Å—Ç",
            "contactPhone": "+79001234567",
            "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –°–ë–ü —Ñ–ª–æ—É",
            "paymentMethod": "SBP"
        }'
        
        echo -e "${CYAN}üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –¥–ª—è –°–ë–ü —Ç–µ—Å—Ç–∞...${NC}"
        sbp_order_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/orders" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -d "$sbp_order_data")
        
        sbp_order_http_code=${sbp_order_response: -3}
        sbp_order_body=${sbp_order_response%???}
        
        if [ "$sbp_order_http_code" = "200" ] || [ "$sbp_order_http_code" = "201" ]; then
            SBP_ORDER_ID=$(echo "$sbp_order_body" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        else
            SBP_ORDER_ID=""
        fi
        
        if [ -n "$SBP_ORDER_ID" ] && [ "$SBP_ORDER_ID" != "null" ]; then
            echo -e "${GREEN}‚úÖ –°–ë–ü –∑–∞–∫–∞–∑ #$SBP_ORDER_ID —Å–æ–∑–¥–∞–Ω${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
            
            echo -e "${YELLOW}–¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞${NC}"
            
            # –°–æ–∑–¥–∞–µ–º –°–ë–ü –ø–ª–∞—Ç–µ–∂
            sbp_payment_data='{
                "orderId": '$SBP_ORDER_ID',
                "method": "SBP",
                "description": "–¢–µ—Å—Ç–æ–≤—ã–π –°–ë–ü –ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–ª–æ—É",
                "returnUrl": "https://pizzanat.ru/test"
            }'
            
            sbp_payment_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
                -H "Content-Type: application/json" \
                -d "$sbp_payment_data")
            
            sbp_payment_http_code=${sbp_payment_response: -3}
            sbp_payment_body=${sbp_payment_response%???}
            
            if [ "$sbp_payment_http_code" = "200" ] || [ "$sbp_payment_http_code" = "201" ]; then
                SBP_PAYMENT_ID=$(echo "$sbp_payment_body" | grep -o '"id":[0-9]*' | cut -d':' -f2)
                SBP_YOOKASSA_ID=$(echo "$sbp_payment_body" | grep -o '"yookassaPaymentId":"[^"]*' | cut -d'"' -f4)
                
                echo -e "${GREEN}‚úÖ –°–ë–ü –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω: ID=$SBP_PAYMENT_ID, YooKassa ID=$SBP_YOOKASSA_ID${NC}"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ–∫–∞ —Å–æ–≥–ª–∞—Å–Ω–æ 54-–§–ó
                echo -e "${CYAN}üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ —á–µ–∫–∞...${NC}"
                if echo "$sbp_payment_body" | grep -q "receipt\|receiptUrl"; then
                    echo -e "${GREEN}‚úÖ –î–∞–Ω–Ω—ã–µ —á–µ–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ –Æ–ö–∞—Å—Å—ã${NC}"
                elif echo "$sbp_payment_body" | grep -q "phone\|customer"; then
                    echo -e "${GREEN}‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ–∫–∞${NC}"
                else
                    echo -e "${YELLOW}‚ÑπÔ∏è –ß–µ–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –Æ–ö–∞—Å—Å—ã${NC}"
                fi
                
                PASSED_TESTS=$((PASSED_TESTS + 1))
                
                echo -e "${YELLOW}–¢–µ—Å—Ç 3: –ò–º–∏—Ç–∞—Ü–∏—è webhook payment.succeeded –æ—Ç –Æ–ö–∞—Å—Å—ã${NC}"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook payment.succeeded
                webhook_data='{
                    "type": "notification",
                    "event": "payment.succeeded",
                    "object": {
                        "id": "'$SBP_YOOKASSA_ID'",
                        "status": "succeeded",
                        "amount": {
                            "value": "500.00",
                            "currency": "RUB"
                        },
                        "payment_method": {
                            "type": "sbp"
                        },
                        "metadata": {
                            "order_id": "'$SBP_ORDER_ID'",
                            "payment_id": "'$SBP_PAYMENT_ID'"
                        }
                    }
                }'
                
                webhook_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
                    -H "Content-Type: application/json" \
                    -d "$webhook_data")
                
                webhook_http_code=${webhook_response: -3}
                
                if [ "$webhook_http_code" = "200" ]; then
                    echo -e "${GREEN}‚úÖ Webhook payment.succeeded –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                    
                    echo -e "${YELLOW}–¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ—Å–ª–µ webhook${NC}"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
                    status_response=$(curl -s -w "%{http_code}" -X GET "$BASE_URL/api/v1/payments/yookassa/$SBP_PAYMENT_ID")
                    status_http_code=${status_response: -3}
                    
                    if [ "$status_http_code" = "200" ]; then
                        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
                        PASSED_TESTS=$((PASSED_TESTS + 1))
                    else
                        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ (HTTP $status_http_code)${NC}"
                        FAILED_TESTS=$((FAILED_TESTS + 1))
                    fi
                else
                    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook (HTTP $webhook_http_code)${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 2))  # webhook + —Å—Ç–∞—Ç—É—Å
                fi
            else
                echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ (HTTP $sbp_payment_http_code)${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 3))  # –ø–ª–∞—Ç–µ–∂ + webhook + —Å—Ç–∞—Ç—É—Å
            fi
            
            echo -e "${YELLOW}–¢–µ—Å—Ç 5: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (–¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ –±–æ—Ç —Å—Ä–∞–∑—É)${NC}"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
            cash_cart_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/cart/items" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $JWT_TOKEN" \
                -d "$cart_data")
            
            cash_cart_http_code=${cash_cart_response: -3}
            
            if [ "$cash_cart_http_code" = "200" ]; then
                echo -e "${GREEN}‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
            else
                echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ (HTTP $cash_cart_http_code)${NC}"
            fi
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            cash_order_data='{
                "deliveryLocationId": 1,
                "contactName": "–ù–∞–ª–∏—á–Ω—ã–µ –¢–µ—Å—Ç",
                "contactPhone": "+79001234568",
                "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –°–ë–ü"
            }'
            
            cash_order_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/orders" \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $JWT_TOKEN" \
                -d "$cash_order_data")
            
            cash_order_http_code=${cash_order_response: -3}
            
            if [ "$cash_order_http_code" = "200" ] || [ "$cash_order_http_code" = "201" ]; then
                CASH_ORDER_ID=$(echo "${cash_order_response%???}" | grep -o '"id":[0-9]*' | cut -d':' -f2)
                echo -e "${GREEN}‚úÖ –ó–∞–∫–∞–∑ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π #$CASH_ORDER_ID —Å–æ–∑–¥–∞–Ω${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))
            else
                echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –Ω–∞–ª–∏—á–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (HTTP $cash_order_http_code)${NC}"
                echo "–û—Ç–≤–µ—Ç: ${cash_order_response%???}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
            
            echo -e "${YELLOW}–¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º${NC}"
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º
            unknown_webhook='{
                "type": "notification",
                "event": "payment.succeeded",
                "object": {
                    "id": "unknown_payment_id_12345",
                    "status": "succeeded",
                    "amount": {
                        "value": "100.00",
                        "currency": "RUB"
                    }
                }
            }'
            
            unknown_webhook_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
                -H "Content-Type: application/json" \
                -d "$unknown_webhook")
            
            unknown_webhook_http_code=${unknown_webhook_response: -3}
            
            # Webhook –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å 400 –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
            if [ "$unknown_webhook_http_code" = "400" ]; then
                echo -e "${GREEN}‚úÖ Webhook –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–ª–∞—Ç–µ–∂ (HTTP 400)${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))
            else
                echo -e "${RED}‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç webhook –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ (HTTP $unknown_webhook_http_code)${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
            
            TOTAL_TESTS=$((TOTAL_TESTS + 6))
            
            echo -e "${CYAN}üìã –†–µ–∑—é–º–µ –°–ë–ü —Ñ–ª–æ—É —Ç–µ—Å—Ç–æ–≤:${NC}"
            echo -e "${BLUE}‚Ä¢ –°–ë–ü –∑–∞–∫–∞–∑ #$SBP_ORDER_ID —Å–æ–∑–¥–∞–Ω (–ù–ï –¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ –±–æ—Ç —Å—Ä–∞–∑—É)${NC}"
            echo -e "${BLUE}‚Ä¢ –°–ë–ü –ø–ª–∞—Ç–µ–∂ #$SBP_PAYMENT_ID —Å–æ–∑–¥–∞–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω webhook'–æ–º${NC}"
            echo -e "${BLUE}‚Ä¢ –ó–∞–∫–∞–∑ —Å –Ω–∞–ª–∏—á–Ω—ã–º–∏ #$CASH_ORDER_ID —Å–æ–∑–¥–∞–Ω (–¥–æ–ª–∂–µ–Ω –ø–æ–ø–∞—Å—Ç—å –≤ –±–æ—Ç —Å—Ä–∞–∑—É)${NC}"
            echo -e "${YELLOW}üìù –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ:${NC}"
            echo -e "${YELLOW}1. –°–ë–ü –∑–∞–∫–∞–∑ #$SBP_ORDER_ID –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –±–æ—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ webhook${NC}"
            echo -e "${YELLOW}2. –ó–∞–∫–∞–∑ —Å –Ω–∞–ª–∏—á–Ω—ã–º–∏ #$CASH_ORDER_ID –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –±–æ—Ç–µ —Å—Ä–∞–∑—É${NC}"
            echo -e "${YELLOW}3. –í –°–ë–ü –∑–∞–∫–∞–∑–µ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è: üí≥ –°–¢–ê–¢–£–° –û–ü–õ–ê–¢–´: ‚úÖ –û–ø–ª–∞—á–µ–Ω–æ${NC}"
            echo -e "${YELLOW}4. –í –°–ë–ü –∑–∞–∫–∞–∑–µ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è: üí∞ –°–ü–û–°–û–ë –û–ü–õ–ê–¢–´: üì± –°–ë–ü${NC}"
            
        else
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è –°–ë–ü —Ç–µ—Å—Ç–∞ (HTTP $sbp_order_http_code)${NC}"
            echo "–û—Ç–≤–µ—Ç: $sbp_order_body"
            FAILED_TESTS=$((FAILED_TESTS + 6))
            TOTAL_TESTS=$((TOTAL_TESTS + 6))
        fi
    else
        echo -e "${RED}‚ùå –ü—Ä–æ–ø—É—Å–∫ –°–ë–ü —Ñ–ª–æ—É —Ç–µ—Å—Ç–æ–≤ - –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 6))
        TOTAL_TESTS=$((TOTAL_TESTS + 6))
    fi

    echo "---"

    # 12. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –ü–õ–ê–¢–ï–ñ–ï–ô –í –ê–î–ú–ò–ù–°–ö–û–ú –ë–û–¢–ï
    echo -e "${BLUE}ü§ñ 12. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –ü–õ–ê–¢–ï–ñ–ï–ô –í –ê–î–ú–ò–ù–°–ö–û–ú –ë–û–¢–ï${NC}"

    if [ -n "$ADMIN_TOKEN" ]; then
        echo -e "${CYAN}üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã '–≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –Ω–∞–ª–∏—á–Ω—ã–µ'${NC}"

        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏
        test_admin_bot_payment_display() {
            local order_id=$1
            local description=$2
            local expected_payments=$3

            echo -e "${YELLOW}–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description${NC}"
            TOTAL_TESTS=$((TOTAL_TESTS + 1))

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π PaymentRepository
            local payments_response=$(curl -s "http://localhost:8080/api/v1/payments/yookassa/order/$order_id" \
                -H "Authorization: Bearer $ADMIN_TOKEN")

            local payments_count=$(echo "$payments_response" | jq '. | length' 2>/dev/null || echo "0")

            if [ "$payments_count" -ge "$expected_payments" ]; then
                echo -e "${GREEN}‚úÖ –£–°–ü–ï–• - PaymentRepository –Ω–∞—à–µ–ª $payments_count –ø–ª–∞—Ç–µ–∂(–µ–π) –¥–ª—è –∑–∞–∫–∞–∑–∞ #$order_id${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))

                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–µ–π
                if [ "$payments_count" -gt 0 ]; then
                    echo "$payments_response" | jq -r '.[] | "    üí≥ –ü–ª–∞—Ç–µ–∂ #\(.id) - \(.method) - \(.status) - \(.amount) —Ä—É–±"'
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É YooMoney –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
                    local yookassa_id=$(echo "$payments_response" | jq -r '.[0].yookassaPaymentId')
                    if [ "$yookassa_id" != "null" ] && [ -n "$yookassa_id" ]; then
                        echo "    üîó YooMoney: https://yoomoney.ru/checkout/payments/v2/contract?orderId=$yookassa_id"
                    fi
                fi
            else
                echo -e "${RED}‚ùå –û–®–ò–ë–ö–ê - PaymentRepository –Ω–∞—à–µ–ª —Ç–æ–ª—å–∫–æ $payments_count –ø–ª–∞—Ç–µ–∂(–µ–π), –æ–∂–∏–¥–∞–ª–æ—Å—å $expected_payments${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
            echo "---"
        }

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∑–∞–∫–∞–∑—ã —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏
        test_admin_bot_payment_display "162" "–ó–∞–∫–∞–∑ #162 (2 –ø–ª–∞—Ç–µ–∂–∞: –∫–∞—Ä—Ç–∞ + –°–ë–ü)" "2"
        test_admin_bot_payment_display "166" "–ó–∞–∫–∞–∑ #166 (1 –°–ë–ü –ø–ª–∞—Ç–µ–∂)" "1"  
        test_admin_bot_payment_display "167" "–ó–∞–∫–∞–∑ #167 (1 –∫–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂)" "1"

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ —Å –ø–ª–∞—Ç–µ–∂–æ–º –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
        echo -e "${CYAN}üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ —Å –ø–ª–∞—Ç–µ–∂–æ–º...${NC}"

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
        FINAL_TIMESTAMP=$(date +%s)
        final_user_data='{
            "username": "finaltest_'$FINAL_TIMESTAMP'",
            "password": "password123",
            "email": "finaltest'$FINAL_TIMESTAMP'@example.com",
            "firstName": "Final",
            "lastName": "TestUser"
        }'

        final_user_response=$(curl -s -L -X POST "$BASE_URL/api/v1/auth/register" \
          -H "Content-Type: application/json" \
          -d "$final_user_data")

        FINAL_USER_TOKEN=$(echo "$final_user_response" | grep -o '"token":"[^"]*' | cut -d'"' -f4)

        if [ -n "$FINAL_USER_TOKEN" ]; then
            echo -e "${GREEN}‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω${NC}"

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
            final_cart_data='{"productId": 1, "quantity": 1}'
            curl -s -X POST "$BASE_URL/api/v1/cart/items" \
                -H "Authorization: Bearer $FINAL_USER_TOKEN" \
                -H "Content-Type: application/json" \
                -d "$final_cart_data" > /dev/null

            # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
            final_order_data='{
                "deliveryLocationId": 1,
                "contactName": "Final Test User",
                "contactPhone": "+79991234567",
                "comment": "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç–µ–∂–µ–π –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ"
            }'

            final_order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
                -H "Authorization: Bearer $FINAL_USER_TOKEN" \
                -H "Content-Type: application/json" \
                -d "$final_order_data")

            FINAL_ORDER_ID=$(echo "$final_order_response" | jq -r '.id')

            if [ -n "$FINAL_ORDER_ID" ] && [ "$FINAL_ORDER_ID" != "null" ]; then
                echo -e "${GREEN}‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ #$FINAL_ORDER_ID —Å–æ–∑–¥–∞–Ω${NC}"

                # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂
                final_payment_data='{
                    "orderId": '$FINAL_ORDER_ID',
                    "method": "BANK_CARD",
                    "description": "–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞"
                }'

                final_payment_response=$(curl -s -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
                    -H "Authorization: Bearer $FINAL_USER_TOKEN" \
                    -H "Content-Type: application/json" \
                    -d "$final_payment_data")

                FINAL_PAYMENT_ID=$(echo "$final_payment_response" | jq -r '.id')

                if [ -n "$FINAL_PAYMENT_ID" ] && [ "$FINAL_PAYMENT_ID" != "null" ]; then
                    echo -e "${GREEN}‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π –∫–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ #$FINAL_PAYMENT_ID —Å–æ–∑–¥–∞–Ω${NC}"

                    # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
                    sleep 2

                    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π PaymentRepository –Ω–∞ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
                    test_admin_bot_payment_display "$FINAL_ORDER_ID" "–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ó–∞–∫–∞–∑ #$FINAL_ORDER_ID (–Ω–æ–≤—ã–π –∫–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂)" "1"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ API
                    test_endpoint "/api/v1/admin/orders/active" "–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã (–¥–æ–ª–∂–Ω—ã –≤–∫–ª—é—á–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑)" "GET" "$ADMIN_TOKEN"

                    echo -e "${BLUE}üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:${NC}"
                    echo -e "${GREEN}‚úÖ PaymentRepository.findByOrderIdOrderByCreatedAtDesc() —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
                    echo -e "${GREEN}‚úÖ AdminBotService —Ç–µ–ø–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–∞—Ç–µ–∂–∞—Ö${NC}"
                    echo -e "${GREEN}‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ '–≤—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –Ω–∞–ª–∏—á–Ω—ã–µ' –†–ï–®–ï–ù–ê${NC}"
                    echo ""
                    echo -e "${CYAN}ü§ñ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –í TELEGRAM –ë–û–¢–ï:${NC}"
                    echo -e "${YELLOW}1. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω—Å–∫–∏–π Telegram –±–æ—Ç${NC}"
                    echo -e "${YELLOW}2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /orders${NC}"
                    echo -e "${YELLOW}3. –ù–∞–π–¥–∏—Ç–µ –∑–∞–∫–∞–∑ #$FINAL_ORDER_ID${NC}"
                    echo -e "${YELLOW}4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è:${NC}"
                    echo -e "${YELLOW}   ‚Ä¢ üí≥ –°–¢–ê–¢–£–° –û–ü–õ–ê–¢–´: ‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã${NC}"
                    echo -e "${YELLOW}   ‚Ä¢ üí∞ –°–ü–û–°–û–ë –û–ü–õ–ê–¢–´: üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞${NC}"
                    echo -e "${YELLOW}   ‚Ä¢ üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ –≤ YooMoney${NC}"
                    echo -e "${YELLOW}5. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /details $FINAL_ORDER_ID –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏${NC}"
                    echo -e "${YELLOW}6. –°—Ä–∞–≤–Ω–∏—Ç–µ —Å –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞–º–∏ - –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏${NC}"

                else
                    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                    TOTAL_TESTS=$((TOTAL_TESTS + 1))
                fi
            else
                echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 2))
                TOTAL_TESTS=$((TOTAL_TESTS + 2))
            fi
        else
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 3))
            TOTAL_TESTS=$((TOTAL_TESTS + 3))
        fi

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        echo -e "${CYAN}üíµ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...${NC}"

        if [ -n "$FINAL_USER_TOKEN" ]; then
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
            curl -s -X POST "$BASE_URL/api/v1/cart/items" \
                -H "Authorization: Bearer $FINAL_USER_TOKEN" \
                -H "Content-Type: application/json" \
                -d '{"productId": 1, "quantity": 1}' > /dev/null

            # –°–æ–∑–¥–∞–µ–º –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ (–±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞)
            cash_order_data='{
                "deliveryLocationId": 1,
                "contactName": "Cash Test User",
                "contactPhone": "+79991234567",
                "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º–∏"
            }'

            cash_order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
                -H "Authorization: Bearer $FINAL_USER_TOKEN" \
                -H "Content-Type: application/json" \
                -d "$cash_order_data")

            CASH_ORDER_ID=$(echo "$cash_order_response" | jq -r '.id')

            if [ -n "$CASH_ORDER_ID" ] && [ "$CASH_ORDER_ID" != "null" ]; then
                echo -e "${GREEN}‚úÖ –ù–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ #$CASH_ORDER_ID —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è${NC}"

                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ (–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑–∞—Ç—å 0 –ø–ª–∞—Ç–µ–∂–µ–π)
                test_admin_bot_payment_display "$CASH_ORDER_ID" "–ù–ê–õ–ò–ß–ù–´–ô –ó–ê–ö–ê–ó: –ó–∞–∫–∞–∑ #$CASH_ORDER_ID (–±–µ–∑ –ø–ª–∞—Ç–µ–∂–µ–π)" "0"

                echo -e "${BLUE}üí° –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤:${NC}"
                if [ -n "$FINAL_ORDER_ID" ]; then
                    echo -e "${GREEN}‚Ä¢ –ó–∞–∫–∞–∑ #$FINAL_ORDER_ID: —Å –ø–ª–∞—Ç–µ–∂–æ–º ‚Üí –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é${NC}"
                fi
                echo -e "${YELLOW}‚Ä¢ –ó–∞–∫–∞–∑ #$CASH_ORDER_ID: –Ω–∞–ª–∏—á–Ω—ã–π ‚Üí –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å 'üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏'${NC}"
            fi
        fi

    else
        echo -e "${RED}‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 5))
        TOTAL_TESTS=$((TOTAL_TESTS + 5))
    fi

else
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω${NC}"
    echo "–û—Ç–≤–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: $register_response"
    FAILED_TESTS=$((FAILED_TESTS + 1))
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
fi

# 12. –†–ê–°–®–ò–†–ï–ù–ù–´–ï –¢–ï–°–¢–´ –°–¢–ê–¢–£–°–û–í –û–ü–õ–ê–¢–´, –î–û–°–¢–ê–í–ö–ò –ò –û–ë–©–ï–ô –°–£–ú–ú–´
echo -e "${BLUE}üí∞ 12. –¢–ï–°–¢–´ –°–¢–ê–¢–£–°–û–í –û–ü–õ–ê–¢–´, –î–û–°–¢–ê–í–ö–ò –ò –û–ë–©–ï–ô –°–£–ú–ú–´${NC}"
echo -e "${CYAN}–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—É–º–º—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –∏ —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã bc –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π
if ! command -v bc &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ 'bc' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–∞—Å—á–µ—Ç–∞${NC}"
fi

if [ -n "$JWT_TOKEN" ]; then
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É–º–º—ã
    test_delivery_cost_calculation() {
        local delivery_type=$1
        local expected_delivery_cost=$2
        local test_name=$3
        local delivery_address=$4

        echo -e "${YELLOW}–¢–µ—Å—Ç: $test_name${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä —Å –∏–∑–≤–µ—Å—Ç–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é
        cart_data='{
            "productId": 1,
            "quantity": 2
        }'
        
        cart_response=$(curl -s -X POST "$BASE_URL/api/v1/cart/items" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -d "$cart_data")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã
        cart_info=$(curl -s -X GET "$BASE_URL/api/v1/cart" \
            -H "Authorization: Bearer $JWT_TOKEN")
        
        items_amount=$(echo "$cart_info" | grep -o '"totalAmount":[0-9.]*' | cut -d':' -f2)
        
        echo -e "${CYAN}  üì¶ –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤: ${items_amount}‚ÇΩ${NC}"

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏
        if [ "$delivery_type" = "pickup" ]; then
            order_data='{
                "deliveryLocationId": 1,
                "contactName": "–¢–µ—Å—Ç –°–∞–º–æ–≤—ã–≤–æ–∑",
                "contactPhone": "+79001234567",
                "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–∞–º–æ–≤—ã–≤–æ–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É–º–º—ã",
                "deliveryType": "–°–∞–º–æ–≤—ã–≤–æ–∑"
            }'
        else
            order_data='{
                "deliveryAddress": "'$delivery_address'",
                "contactName": "–¢–µ—Å—Ç –î–æ—Å—Ç–∞–≤–∫–∞",
                "contactPhone": "+79001234567",
                "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É–º–º—ã",
                "deliveryType": "–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º"
            }'
        fi

        temp_order_file=$(mktemp)
        printf '%s' "$order_data" > "$temp_order_file"

        order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            --data-binary "@$temp_order_file")

        rm -f "$temp_order_file"

        # –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
        order_id=$(echo "$order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        total_amount=$(echo "$order_response" | grep -o '"totalAmount":[0-9.]*' | cut -d':' -f2)
        delivery_cost=$(echo "$order_response" | grep -o '"deliveryCost":[0-9.]*' | cut -d':' -f2)
        delivery_type_resp=$(echo "$order_response" | grep -o '"deliveryType":"[^"]*"' | cut -d'"' -f4)

        if [ -n "$order_id" ] && [ "$order_id" != "null" ]; then
            echo -e "${GREEN}  ‚úÖ –ó–∞–∫–∞–∑ #$order_id —Å–æ–∑–¥–∞–Ω${NC}"
            echo -e "${CYAN}  üöõ –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: $delivery_type_resp${NC}"
            echo -e "${CYAN}  üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: ${delivery_cost}‚ÇΩ${NC}"
            echo -e "${CYAN}  üíµ –û–±—â–∞—è —Å—É–º–º–∞: ${total_amount}‚ÇΩ${NC}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å—á–µ—Ç–∞
            if [ "$delivery_type" = "pickup" ]; then
                # –î–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 0
                if [ "$delivery_cost" = "0" ] || [ "$delivery_cost" = "0.0" ] || [ "$delivery_cost" = "0.00" ]; then
                    echo -e "${GREEN}  ‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (—Å–∞–º–æ–≤—ã–≤–æ–∑ = 0‚ÇΩ)${NC}"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±—â–∞—è —Å—É–º–º–∞ = —Ç–æ–≤–∞—Ä—ã + 0
                    if [ "$total_amount" = "$items_amount" ]; then
                        echo -e "${GREEN}  ‚úÖ –û–±—â–∞—è —Å—É–º–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ ($items_amount + 0 = $total_amount)${NC}"
                        PASSED_TESTS=$((PASSED_TESTS + 1))
                    else
                        echo -e "${RED}  ‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—É–º–º—ã: –æ–∂–∏–¥–∞–ª–æ—Å—å $items_amount, –ø–æ–ª—É—á–µ–Ω–æ $total_amount${NC}"
                        FAILED_TESTS=$((FAILED_TESTS + 1))
                    fi
                else
                    echo -e "${RED}  ‚ùå –û—à–∏–±–∫–∞: –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 0‚ÇΩ, –ø–æ–ª—É—á–µ–Ω–æ ${delivery_cost}‚ÇΩ${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                fi
            else
                # –î–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∫—É—Ä—å–µ—Ä–æ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
                if [ "$delivery_cost" = "$expected_delivery_cost" ]; then
                    echo -e "${GREEN}  ‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (${delivery_cost}‚ÇΩ)${NC}"
                    
                    # –ü—Ä–æ—Å—Ç–æ–π —Ä–∞—Å—á–µ—Ç –±–µ–∑ bc
                    expected_total=$(awk "BEGIN {print $items_amount + $delivery_cost}")
                    if [ "$total_amount" = "$expected_total" ]; then
                        echo -e "${GREEN}  ‚úÖ –û–±—â–∞—è —Å—É–º–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ ($items_amount + $delivery_cost = $total_amount)${NC}"
                        PASSED_TESTS=$((PASSED_TESTS + 1))
                    else
                        echo -e "${RED}  ‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—É–º–º—ã: –æ–∂–∏–¥–∞–ª–æ—Å—å $expected_total, –ø–æ–ª—É—á–µ–Ω–æ $total_amount${NC}"
                        FAILED_TESTS=$((FAILED_TESTS + 1))
                    fi
                else
                    echo -e "${YELLOW}  ‚ö†Ô∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: –æ–∂–∏–¥–∞–ª–æ—Å—å ${expected_delivery_cost}‚ÇΩ, –ø–æ–ª—É—á–µ–Ω–æ ${delivery_cost}‚ÇΩ${NC}"
                    echo -e "${CYAN}     (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–æ–Ω–∞–ª—å–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å)${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                fi
            fi

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ API
            sleep 1
            order_details=$(curl -s -X GET "$BASE_URL/api/v1/orders/$order_id" \
                -H "Authorization: Bearer $JWT_TOKEN")
            
            api_delivery_type=$(echo "$order_details" | grep -o '"deliveryType":"[^"]*"' | cut -d'"' -f4)
            api_delivery_cost=$(echo "$order_details" | grep -o '"deliveryCost":[0-9.]*' | cut -d':' -f2)
            
            echo -e "${CYAN}  üîç API –ø—Ä–æ–≤–µ—Ä–∫–∞:${NC}"
            echo -e "${CYAN}    - deliveryType: $api_delivery_type${NC}"
            echo -e "${CYAN}    - deliveryCost: ${api_delivery_cost}‚ÇΩ${NC}"

            return 0
        else
            echo -e "${RED}  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑${NC}"
            echo -e "${RED}     –û—Ç–≤–µ—Ç: $(echo "$order_response" | head -c 150)...${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            return 1
        fi
    }

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
    test_payment_status_flow() {
        local order_id=$1
        local payment_method=$2
        local test_name=$3

        echo -e "${YELLOW}–¢–µ—Å—Ç: $test_name${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂
        payment_data='{
            "orderId": '$order_id',
            "method": "'$payment_method'",
            "description": "–¢–µ—Å—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞: '$test_name'"
        }'

        payment_response=$(curl -s -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -d "$payment_data")

        payment_id=$(echo "$payment_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        payment_status=$(echo "$payment_response" | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
        yookassa_id=$(echo "$payment_response" | grep -o '"yookassaPaymentId":"[^"]*"' | cut -d'"' -f4)

        if [ -n "$payment_id" ] && [ "$payment_id" != "null" ]; then
            echo -e "${GREEN}  ‚úÖ –ü–ª–∞—Ç–µ–∂ #$payment_id —Å–æ–∑–¥–∞–Ω${NC}"
            echo -e "${CYAN}  üîó YooKassa ID: $yookassa_id${NC}"
            echo -e "${CYAN}  üìä –°—Ç–∞—Ç—É—Å: $payment_status${NC}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ API
            sleep 1
            status_check=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/$payment_id" \
                -H "Authorization: Bearer $JWT_TOKEN")

            api_status=$(echo "$status_check" | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
            api_amount=$(echo "$status_check" | grep -o '"amount":[0-9.]*' | cut -d':' -f2)

            echo -e "${CYAN}  üîç API –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:${NC}"
            echo -e "${CYAN}    - –°—Ç–∞—Ç—É—Å: $api_status${NC}"
            echo -e "${CYAN}    - –°—É–º–º–∞: ${api_amount}‚ÇΩ${NC}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å PENDING
            if [ "$payment_status" = "PENDING" ] || [ "$api_status" = "PENDING" ]; then
                echo -e "${GREEN}  ‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π (PENDING)${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))
            else
                echo -e "${RED}  ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $payment_status/$api_status${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è webhook —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            echo "$payment_id:$yookassa_id"
            return 0
        else
            echo -e "${RED}  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂${NC}"
            echo -e "${RED}     –û—Ç–≤–µ—Ç: $(echo "$payment_response" | head -c 150)...${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
            return 1
        fi
    }

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    test_webhook_status_update() {
        local payment_data=$1  # format: payment_id:yookassa_id
        local order_id=$2
        local test_name=$3

        IFS=':' read -r payment_id yookassa_id <<< "$payment_data"

        echo -e "${YELLOW}–¢–µ—Å—Ç: $test_name${NC}"
        TOTAL_TESTS=$((TOTAL_TESTS + 1))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º webhook payment.succeeded
        webhook_data='{
            "type": "notification",
            "event": "payment.succeeded",
            "object": {
                "id": "'$yookassa_id'",
                "status": "succeeded",
                "amount": {
                    "value": "1000.00",
                    "currency": "RUB"
                },
                "payment_method": {
                    "type": "sbp"
                },
                "metadata": {
                    "order_id": "'$order_id'",
                    "payment_id": "'$payment_id'"
                }
            }
        }'

        webhook_response=$(curl -s -w "%{http_code}" -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
            -H "Content-Type: application/json" \
            -d "$webhook_data")

        webhook_http_code=${webhook_response: -3}

        if [ "$webhook_http_code" = "200" ]; then
            echo -e "${GREEN}  ‚úÖ Webhook payment.succeeded –æ–±—Ä–∞–±–æ—Ç–∞–Ω${NC}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            sleep 2  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
            updated_status=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/$payment_id" \
                -H "Authorization: Bearer $JWT_TOKEN")

            new_status=$(echo "$updated_status" | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
            
            echo -e "${CYAN}  üîç –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: $new_status${NC}"

            if [ "$new_status" = "SUCCEEDED" ]; then
                echo -e "${GREEN}  ‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ SUCCEEDED${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))
            else
                echo -e "${RED}  ‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è: –æ–∂–∏–¥–∞–ª—Å—è SUCCEEDED, –ø–æ–ª—É—á–µ–Ω $new_status${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
        else
            echo -e "${RED}  ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook (HTTP $webhook_http_code)${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    }

    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç—ã
    echo -e "${BLUE}üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏...${NC}"
    
    # –¢–µ—Å—Ç 1: –°–∞–º–æ–≤—ã–≤–æ–∑ (–¥–æ—Å—Ç–∞–≤–∫–∞ = 0)
    test_delivery_cost_calculation "pickup" "0" "–°–∞–º–æ–≤—ã–≤–æ–∑ - –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 0‚ÇΩ" ""
    
    # –¢–µ—Å—Ç 2: –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä –í–æ–ª–∂—Å–∫–∞ (—Å—Ä–µ–¥–Ω—è—è –∑–æ–Ω–∞)
    test_delivery_cost_calculation "delivery" "200" "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä - –æ–∂–∏–¥–∞–µ—Ç—Å—è 200‚ÇΩ" "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 50"
    
    # –¢–µ—Å—Ç 3: –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–∞–π–æ–Ω –î—Ä—É–∂–±–∞ (–¥–µ—à–µ–≤–∞—è –∑–æ–Ω–∞)  
    test_delivery_cost_calculation "delivery" "100" "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –î—Ä—É–∂–±—É - –æ–∂–∏–¥–∞–µ—Ç—Å—è 100‚ÇΩ" "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –î—Ä—É–∂–±—ã, –¥. 10"

    echo -e "${BLUE}üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    cart_payment_data='{"productId": 1, "quantity": 1}'
    curl -s -X POST "$BASE_URL/api/v1/cart/items" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $JWT_TOKEN" \
        -d "$cart_payment_data" > /dev/null

    payment_order_data='{
        "deliveryLocationId": 1,
        "contactName": "–¢–µ—Å—Ç –ü–ª–∞—Ç–µ–∂–µ–π",
        "contactPhone": "+79001234567",
        "comment": "–ó–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π"
    }'

    payment_order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $JWT_TOKEN" \
        -d "$payment_order_data")

    PAYMENT_TEST_ORDER_ID=$(echo "$payment_order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)

    if [ -n "$PAYMENT_TEST_ORDER_ID" ] && [ "$PAYMENT_TEST_ORDER_ID" != "null" ]; then
        echo -e "${GREEN}üì¶ –ó–∞–∫–∞–∑ #$PAYMENT_TEST_ORDER_ID —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤${NC}"

        # –¢–µ—Å—Ç 4: –°–ë–ü –ø–ª–∞—Ç–µ–∂ –∏ –µ–≥–æ —Å—Ç–∞—Ç—É—Å—ã
        sbp_payment_data=$(test_payment_status_flow "$PAYMENT_TEST_ORDER_ID" "SBP" "–°–ë–ü –ø–ª–∞—Ç–µ–∂ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤")
        
        if [ $? -eq 0 ] && [ -n "$sbp_payment_data" ]; then
            # –¢–µ—Å—Ç 5: Webhook –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
            test_webhook_status_update "$sbp_payment_data" "$PAYMENT_TEST_ORDER_ID" "Webhook payment.succeeded - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"
        fi

        # –¢–µ—Å—Ç 6: –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂
        card_payment_data=$(test_payment_status_flow "$PAYMENT_TEST_ORDER_ID" "BANK_CARD" "–ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤")

    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 3))
        TOTAL_TESTS=$((TOTAL_TESTS + 3))
    fi

    echo -e "${BLUE}üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ–∫–∞ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π...${NC}"
    
    # –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤ —á–µ–∫–µ –µ—Å—Ç—å –ø–æ–∑–∏—Ü–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏
    echo -e "${YELLOW}–¢–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ–∫–∞ —Å –ø–æ–∑–∏—Ü–∏–µ–π –¥–æ—Å—Ç–∞–≤–∫–∏${NC}"
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞
    cart_receipt_data='{"productId": 1, "quantity": 1}'
    curl -s -X POST "$BASE_URL/api/v1/cart/items" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $JWT_TOKEN" \
        -d "$cart_receipt_data" > /dev/null

    receipt_order_data='{
        "deliveryAddress": "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1",
        "contactName": "–¢–µ—Å—Ç –ß–µ–∫–∞",
        "contactPhone": "+79001234567",
        "comment": "–ó–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ–∫–∞ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π",
        "deliveryType": "–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º"
    }'

    receipt_order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $JWT_TOKEN" \
        -d "$receipt_order_data")

    RECEIPT_ORDER_ID=$(echo "$receipt_order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)

    if [ -n "$RECEIPT_ORDER_ID" ] && [ "$RECEIPT_ORDER_ID" != "null" ]; then
        echo -e "${GREEN}üì¶ –ó–∞–∫–∞–∑ #$RECEIPT_ORDER_ID —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞${NC}"

        # –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞
        receipt_payment_data='{
            "orderId": '$RECEIPT_ORDER_ID',
            "method": "SBP",
            "description": "–¢–µ—Å—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ–∫–∞ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π"
        }'

        receipt_payment_response=$(curl -s -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -d "$receipt_payment_data")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ –æ—Ç–≤–µ—Ç–µ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —á–µ–∫–µ
        if echo "$receipt_payment_response" | grep -q "receipt\|customer\|items"; then
            echo -e "${GREEN}  ‚úÖ –ß–µ–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞${NC}"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
            if echo "$receipt_payment_response" | grep -q "phone\|fullName"; then
                echo -e "${GREEN}  ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –≤–∫–ª—é—á–µ–Ω—ã –≤ —á–µ–∫${NC}"
            fi
            
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${YELLOW}  ‚ö†Ô∏è –ß–µ–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –Æ–ö–∞—Å—Å—ã${NC}"
            echo -e "${CYAN}     (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Æ–ö–∞—Å—Å—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        fi
    else
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi

else
    echo -e "${RED}‚ùå JWT —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω, —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 7))
    TOTAL_TESTS=$((TOTAL_TESTS + 7))
fi

# 13. –¢–ï–°–¢–´ –£–°–ü–ï–®–ù–û–ô –û–ü–õ–ê–¢–´ –û–¢ –Æ–ö–ê–°–°–´
echo -e "${BLUE}üí≥ 13. –¢–ï–°–¢–´ –£–°–ü–ï–®–ù–û–ô –û–ü–õ–ê–¢–´ –û–¢ –Æ–ö–ê–°–°–´${NC}"
echo -e "${CYAN}–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø–ª–∞—Ç–µ–∂–µ–π: —Å–æ–∑–¥–∞–Ω–∏–µ ‚Üí webhook ‚Üí –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞${NC}"

if [ -n "$JWT_TOKEN" ]; then
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
    create_success_payment_order() {
        local order_name=$1
        local delivery_type=$2
        local delivery_address=$3

        echo -e "${CYAN}üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ '$order_name'...${NC}"

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        local cart_data='{"productId": 1, "quantity": 1}'
        curl -s -X POST "$BASE_URL/api/v1/cart/items" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -d "$cart_data" > /dev/null

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
        local order_data
        if [ "$delivery_type" = "pickup" ]; then
            order_data='{
                "deliveryLocationId": 1,
                "contactName": "'$order_name'",
                "contactPhone": "+79001234567",
                "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã: '$order_name'",
                "deliveryType": "–°–∞–º–æ–≤—ã–≤–æ–∑"
            }'
        else
            order_data='{
                "deliveryAddress": "'$delivery_address'",
                "contactName": "'$order_name'",
                "contactPhone": "+79001234567",
                "comment": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã: '$order_name'",
                "deliveryType": "–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º"
            }'
        fi

        local order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            -d "$order_data")

        local order_id=$(echo "$order_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)

        if [ -n "$order_id" ] && [ "$order_id" != "null" ]; then
            echo -e "${GREEN}‚úÖ –ó–∞–∫–∞–∑ #$order_id —Å–æ–∑–¥–∞–Ω –¥–ª—è '$order_name'${NC}"
            echo "$order_id"
        else
            echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –¥–ª—è '$order_name'${NC}"
            return 1
        fi
    }

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
    create_payment_for_success_test() {
        local order_id=$1
        local payment_method=$2
        local test_name=$3

        echo -e "${YELLOW}üí≥ –°–æ–∑–¥–∞–Ω–∏–µ $payment_method –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #$order_id...${NC}"

        local payment_data='{
            "orderId": '$order_id',
            "method": "'$payment_method'",
            "description": "–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã: '$test_name'",
            "returnUrl": "https://pizzanat.ru/payment-success"
        }'

        local temp_payment_file=$(mktemp)
        printf '%s' "$payment_data" > "$temp_payment_file"

        local temp_response_file=$(mktemp)
        local payment_code=$(curl -s -L -w '%{http_code}' -o "$temp_response_file" \
            -X POST "$BASE_URL/api/v1/payments/yookassa/create" \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Authorization: Bearer $JWT_TOKEN" \
            --data-binary "@$temp_payment_file")

        local payment_response=$(cat "$temp_response_file")
        rm -f "$temp_payment_file" "$temp_response_file"

        if [[ $payment_code -eq 200 ]] || [[ $payment_code -eq 201 ]]; then
            local payment_id=$(echo "$payment_response" | grep -o '"id":[0-9]*' | cut -d':' -f2)
            local yookassa_id=$(echo "$payment_response" | grep -o '"yookassaPaymentId":"[^"]*' | cut -d'"' -f4)
            local payment_status=$(echo "$payment_response" | grep -o '"status":"[^"]*' | cut -d'"' -f4)
            local payment_amount=$(echo "$payment_response" | grep -o '"amount":[0-9.]*' | cut -d':' -f2)
            local confirmation_url=$(echo "$payment_response" | grep -o '"confirmation_url":"[^"]*' | cut -d'"' -f4)

            echo -e "${GREEN}‚úÖ $payment_method –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω:${NC}"
            echo -e "${CYAN}   ID: #$payment_id${NC}"
            echo -e "${CYAN}   –Æ–ö–∞—Å—Å–∞ ID: $yookassa_id${NC}"
            echo -e "${CYAN}   –°—Ç–∞—Ç—É—Å: $payment_status${NC}"
            echo -e "${CYAN}   –°—É–º–º–∞: ${payment_amount}‚ÇΩ${NC}"
            
            if [ -n "$confirmation_url" ]; then
                echo -e "${BLUE}üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã: $confirmation_url${NC}"
            fi

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            echo "$payment_id:$yookassa_id:$payment_amount:$payment_status"
            return 0
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ (HTTP $payment_code)${NC}"
            if [ -n "$payment_response" ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$payment_response" | head -c 150)..."
            fi
            return 1
        fi
    }

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ webhook –æ—Ç –Æ–ö–∞—Å—Å—ã
    simulate_payment_success_webhook() {
        local order_id=$1
        local payment_data=$2  # format: payment_id:yookassa_id:amount:old_status
        local test_name=$3

        IFS=':' read -r payment_id yookassa_id amount old_status <<< "$payment_data"

        echo -e "${YELLOW}üîî –ò–º–∏—Ç–∞—Ü–∏—è webhook payment.succeeded –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞ #$payment_id...${NC}"

        # Webhook –¥–∞–Ω–Ω—ã–µ –æ—Ç –Æ–ö–∞—Å—Å—ã
        local webhook_data='{
            "type": "notification",
            "event": "payment.succeeded",
            "object": {
                "id": "'$yookassa_id'",
                "status": "succeeded",
                "amount": {
                    "value": "'$amount'",
                    "currency": "RUB"
                },
                "payment_method": {
                    "type": "sbp",
                    "id": "sbp-'$yookassa_id'"
                },
                "created_at": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'",
                "captured_at": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'",
                "metadata": {
                    "order_id": "'$order_id'",
                    "payment_id": "'$payment_id'"
                },
                "receipt": {
                    "registered": "true",
                    "fiscal_document_number": "'.$$.'",
                    "fiscal_storage_number": "1234567890",
                    "fiscal_attribute": "98765432"
                }
            }
        }'

        local temp_webhook_file=$(mktemp)
        printf '%s' "$webhook_data" > "$temp_webhook_file"

        local temp_webhook_response=$(mktemp)
        local webhook_code=$(curl -s -L -w '%{http_code}' -o "$temp_webhook_response" \
            -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
            -H "Content-Type: application/json; charset=utf-8" \
            --data-binary "@$temp_webhook_file")

        local webhook_response=$(cat "$temp_webhook_response")
        rm -f "$temp_webhook_file" "$temp_webhook_response"

        if [ "$webhook_code" = "200" ]; then
            echo -e "${GREEN}‚úÖ Webhook payment.succeeded –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
            
            if [ -n "$webhook_response" ] && [ ${#webhook_response} -gt 5 ]; then
                echo -e "${CYAN}   –û—Ç–≤–µ—Ç: $(echo "$webhook_response" | head -c 80)...${NC}"
            fi
            
            return 0
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook (HTTP $webhook_code)${NC}"
            if [ -n "$webhook_response" ]; then
                echo "   –û—Ç–≤–µ—Ç: $(echo "$webhook_response" | head -c 150)..."
            fi
            return 1
        fi
    }

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ—Å–ª–µ webhook
    verify_payment_success_status() {
        local payment_data=$1  # format: payment_id:yookassa_id:amount:old_status
        local expected_status=$2
        local test_name=$3

        IFS=':' read -r payment_id yookassa_id amount old_status <<< "$payment_data"

        echo -e "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ #$payment_id –ø–æ—Å–ª–µ webhook...${NC}"

        # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É webhook
        sleep 2

        local status_response=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/$payment_id" \
            -H "Authorization: Bearer $JWT_TOKEN")

        local new_status=$(echo "$status_response" | grep -o '"status":"[^"]*' | cut -d'"' -f4)
        local updated_at=$(echo "$status_response" | grep -o '"updatedAt":"[^"]*' | cut -d'"' -f4)
        local yookassa_status=$(echo "$status_response" | grep -o '"yookassaStatus":"[^"]*' | cut -d'"' -f4)

        echo -e "${CYAN}   –°—Ç–∞—Ä—ã–π —Å—Ç–∞—Ç—É—Å: $old_status${NC}"
        echo -e "${CYAN}   –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: $new_status${NC}"
        echo -e "${CYAN}   –Æ–ö–∞—Å—Å–∞ —Å—Ç–∞—Ç—É—Å: $yookassa_status${NC}"
        echo -e "${CYAN}   –û–±–Ω–æ–≤–ª–µ–Ω: $updated_at${NC}"

        if [ "$new_status" = "$expected_status" ]; then
            echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ $expected_status${NC}"
            return 0
        else
            echo -e "${RED}‚ùå –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è: –æ–∂–∏–¥–∞–ª—Å—è $expected_status, –ø–æ–ª—É—á–µ–Ω $new_status${NC}"
            return 1
        fi
    }

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ
    verify_admin_bot_notification() {
        local order_id=$1
        local payment_method=$2
        local should_be_notified=$3  # true/false
        local test_name=$4

        echo -e "${YELLOW}ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #$order_id...${NC}"

        if [ -n "$ADMIN_TOKEN" ]; then
            # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω—Å–∫–æ–µ API
            local admin_order_response=$(curl -s -X GET "$BASE_URL/api/v1/admin/orders/$order_id" \
                -H "Authorization: Bearer $ADMIN_TOKEN")

            local order_status=$(echo "$admin_order_response" | grep -o '"status":"[^"]*' | cut -d'"' -f4)
            local payment_method_resp=$(echo "$admin_order_response" | grep -o '"paymentMethod":"[^"]*' | cut -d'"' -f4)

            echo -e "${CYAN}   –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: $order_status${NC}"
            echo -e "${CYAN}   –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: $payment_method_resp${NC}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞
            local payments_response=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/order/$order_id" \
                -H "Authorization: Bearer $ADMIN_TOKEN")

            local payments_count=$(echo "$payments_response" | jq '. | length' 2>/dev/null || echo "0")
            
            if [ "$payments_count" -gt 0 ]; then
                echo -e "${CYAN}   –ù–∞–π–¥–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–µ–π: $payments_count${NC}"
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
                local first_payment_status=$(echo "$payments_response" | jq -r '.[0].status' 2>/dev/null)
                if [ "$first_payment_status" != "null" ]; then
                    echo -e "${CYAN}   –°—Ç–∞—Ç—É—Å –ø–µ—Ä–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞: $first_payment_status${NC}"
                fi
            else
                echo -e "${CYAN}   –ü–ª–∞—Ç–µ–∂–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–∑–∞–∫–∞–∑ –Ω–∞–ª–∏—á–Ω—ã–π)${NC}"
            fi

            if [ "$should_be_notified" = "true" ]; then
                echo -e "${GREEN}‚úÖ –ó–∞–∫–∞–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ${NC}"
                echo -e "${YELLOW}üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç - –∑–∞–∫–∞–∑ #$order_id –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è${NC}"
            else
                echo -e "${YELLOW}‚è≥ –ó–∞–∫–∞–∑ –ù–ï –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ –¥–æ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã${NC}"
                echo -e "${YELLOW}üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç - –∑–∞–∫–∞–∑ #$order_id –ù–ï –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è${NC}"
            fi

            return 0
        else
            echo -e "${RED}‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏${NC}"
            return 1
        fi
    }

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ–∫–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
    verify_receipt_after_payment() {
        local payment_data=$1  # format: payment_id:yookassa_id:amount:status
        local test_name=$2

        IFS=':' read -r payment_id yookassa_id amount status <<< "$payment_data"

        echo -e "${YELLOW}üßæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ —á–µ–∫–∞ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞ #$payment_id...${NC}"

        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞
        local payment_details=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/$payment_id" \
            -H "Authorization: Bearer $JWT_TOKEN")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ–∫–∞ –≤ –ø–ª–∞—Ç–µ–∂–µ
        if echo "$payment_details" | grep -q "receiptUrl\|fiscalDocumentNumber\|receiptRegistered"; then
            echo -e "${GREEN}‚úÖ –î–∞–Ω–Ω—ã–µ —Ñ–∏—Å–∫–∞–ª—å–Ω–æ–≥–æ —á–µ–∫–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–ª–∞—Ç–µ–∂–µ${NC}"
        else
            echo -e "${CYAN}‚ÑπÔ∏è –ß–µ–∫ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –Æ–ö–∞—Å—Å—ã${NC}"
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–ª–∞—Ç–µ–∂ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—É–º–º—É
        local payment_amount=$(echo "$payment_details" | grep -o '"amount":[0-9.]*' | cut -d':' -f2)
        if [ -n "$payment_amount" ] && [ "$payment_amount" != "null" ]; then
            echo -e "${GREEN}‚úÖ –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ –≤ —á–µ–∫–µ: ${payment_amount}‚ÇΩ${NC}"
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
        if echo "$payment_details" | grep -q "customerPhone\|customerEmail"; then
            echo -e "${GREEN}‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –≤–∫–ª—é—á–µ–Ω—ã –≤ —á–µ–∫${NC}"
        fi

        return 0
    }

    # –¢–ï–°–¢ 1: –°–ë–ü –ø–ª–∞—Ç–µ–∂ —Å –ø–æ–ª–Ω—ã–º —Ü–∏–∫–ª–æ–º —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    echo -e "\n${GREEN}üöÄ –¢–ï–°–¢ 1: –°–ë–ü –ü–õ–ê–¢–ï–ñ - –ü–û–õ–ù–´–ô –¶–ò–ö–õ –£–°–ü–ï–®–ù–û–ô –û–ü–õ–ê–¢–´${NC}"
    echo "=============================================================="
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    SBP_ORDER_ID=$(create_success_payment_order "–°–ë–ü –£—Å–ø–µ—Ö" "delivery" "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 10")

    if [ -n "$SBP_ORDER_ID" ] && [ "$SBP_ORDER_ID" != "" ]; then
        # –°–æ–∑–¥–∞–µ–º –°–ë–ü –ø–ª–∞—Ç–µ–∂
        SBP_PAYMENT_DATA=$(create_payment_for_success_test "$SBP_ORDER_ID" "SBP" "–°–ë–ü –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª")

        if [ $? -eq 0 ] && [ -n "$SBP_PAYMENT_DATA" ]; then
            echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 1: –°–ë–ü –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω, —Å—Ç–∞—Ç—É—Å PENDING${NC}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–∫–∞–∑ –ù–ï –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ (–¥–æ –æ–ø–ª–∞—Ç—ã)
            verify_admin_bot_notification "$SBP_ORDER_ID" "SBP" "false" "–°–ë–ü –¥–æ –æ–ø–ª–∞—Ç—ã"

            # –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π webhook
            if simulate_payment_success_webhook "$SBP_ORDER_ID" "$SBP_PAYMENT_DATA" "–°–ë–ü webhook"; then
                echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 2: Webhook payment.succeeded –æ–±—Ä–∞–±–æ—Ç–∞–Ω${NC}"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
                if verify_payment_success_status "$SBP_PAYMENT_DATA" "SUCCEEDED" "–°–ë–ü —Å—Ç–∞—Ç—É—Å"; then
                    echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 3: –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ SUCCEEDED${NC}"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–∫–∞–∑ —Ç–µ–ø–µ—Ä—å –≤ –∞–¥–º–∏–Ω—Å–∫–æ–º –±–æ—Ç–µ
                    verify_admin_bot_notification "$SBP_ORDER_ID" "SBP" "true" "–°–ë–ü –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ–∫–∞
                    verify_receipt_after_payment "$SBP_PAYMENT_DATA" "–°–ë–ü —á–µ–∫"

                    echo -e "${GREEN}‚úÖ –¢–ï–°–¢ 1 –ü–†–û–ô–î–ï–ù: –°–ë–ü –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                else
                    echo -e "${RED}‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: –°—Ç–∞—Ç—É—Å –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                fi
            else
                echo -e "${RED}‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: Webhook –°–ë–ü –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª—Å—è${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
        else
            echo -e "${RED}‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: –°–ë–ü –ø–ª–∞—Ç–µ–∂ –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "${RED}‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: –ó–∞–∫–∞–∑ –¥–ª—è –°–ë–ü –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi

    # –¢–ï–°–¢ 2: –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ —Å –ø–æ–ª–Ω—ã–º —Ü–∏–∫–ª–æ–º —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    echo -e "\n${GREEN}üöÄ –¢–ï–°–¢ 2: –ö–ê–†–¢–û–ß–ù–´–ô –ü–õ–ê–¢–ï–ñ - –ü–û–õ–ù–´–ô –¶–ò–ö–õ –£–°–ü–ï–®–ù–û–ô –û–ü–õ–ê–¢–´${NC}"
    echo "================================================================="
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    CARD_ORDER_ID=$(create_success_payment_order "–ö–∞—Ä—Ç–∞ –£—Å–ø–µ—Ö" "pickup" "")

    if [ -n "$CARD_ORDER_ID" ] && [ "$CARD_ORDER_ID" != "" ]; then
        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂
        CARD_PAYMENT_DATA=$(create_payment_for_success_test "$CARD_ORDER_ID" "BANK_CARD" "–ö–∞—Ä—Ç–∞ –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª")

        if [ $? -eq 0 ] && [ -n "$CARD_PAYMENT_DATA" ]; then
            echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 1: –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω, —Å—Ç–∞—Ç—É—Å PENDING${NC}"

            # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º webhook –¥–ª—è –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
            IFS=':' read -r card_payment_id card_yookassa_id card_amount card_old_status <<< "$CARD_PAYMENT_DATA"

            # –ö–∞—Ä—Ç–æ—á–Ω—ã–π webhook
            local card_webhook_data='{
                "type": "notification",
                "event": "payment.succeeded",
                "object": {
                    "id": "'$card_yookassa_id'",
                    "status": "succeeded",
                    "amount": {
                        "value": "'$card_amount'",
                        "currency": "RUB"
                    },
                    "payment_method": {
                        "type": "bank_card",
                        "id": "card-'$card_yookassa_id'",
                        "saved": false,
                        "card": {
                            "first6": "555555",
                            "last4": "4444",
                            "expiry_year": "2025",
                            "expiry_month": "12",
                            "card_type": "MasterCard"
                        }
                    },
                    "created_at": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'",
                    "captured_at": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'",
                    "metadata": {
                        "order_id": "'$CARD_ORDER_ID'",
                        "payment_id": "'$card_payment_id'"
                    }
                }
            }'

            echo -e "${YELLOW}üîî –ò–º–∏—Ç–∞—Ü–∏—è webhook payment.succeeded –¥–ª—è –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞...${NC}"

            local temp_card_webhook=$(mktemp)
            printf '%s' "$card_webhook_data" > "$temp_card_webhook"

            local card_webhook_code=$(curl -s -L -o /dev/null -w '%{http_code}' \
                -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
                -H "Content-Type: application/json; charset=utf-8" \
                --data-binary "@$temp_card_webhook")

            rm -f "$temp_card_webhook"

            if [ "$card_webhook_code" = "200" ]; then
                echo -e "${GREEN}‚úÖ –ö–∞—Ä—Ç–æ—á–Ω—ã–π webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω${NC}"
                echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 2: Webhook payment.succeeded –æ–±—Ä–∞–±–æ—Ç–∞–Ω${NC}"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
                if verify_payment_success_status "$CARD_PAYMENT_DATA" "SUCCEEDED" "–ö–∞—Ä—Ç–æ—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å"; then
                    echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 3: –°—Ç–∞—Ç—É—Å –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ SUCCEEDED${NC}"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –±–æ—Ç–µ
                    verify_admin_bot_notification "$CARD_ORDER_ID" "BANK_CARD" "true" "–ö–∞—Ä—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ–∫–∞
                    verify_receipt_after_payment "$CARD_PAYMENT_DATA" "–ö–∞—Ä—Ç–æ—á–Ω—ã–π —á–µ–∫"

                    echo -e "${GREEN}‚úÖ –¢–ï–°–¢ 2 –ü–†–û–ô–î–ï–ù: –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã${NC}"
                    PASSED_TESTS=$((PASSED_TESTS + 1))
                else
                    echo -e "${RED}‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –°—Ç–∞—Ç—É—Å –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –Ω–µ –æ–±–Ω–æ–≤–∏–ª—Å—è${NC}"
                    FAILED_TESTS=$((FAILED_TESTS + 1))
                fi
            else
                echo -e "${RED}‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –ö–∞—Ä—Ç–æ—á–Ω—ã–π webhook –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª—Å—è (HTTP $card_webhook_code)${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
        else
            echo -e "${RED}‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "${RED}‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –ó–∞–∫–∞–∑ –¥–ª—è –∫–∞—Ä—Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi

    # –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    echo -e "\n${GREEN}üöÄ –¢–ï–°–¢ 3: –ù–ï–°–ö–û–õ–¨–ö–û –ü–õ–ê–¢–ï–ñ–ï–ô –î–õ–Ø –û–î–ù–û–ì–û –ó–ê–ö–ê–ó–ê${NC}"
    echo "====================================================="
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    MULTI_ORDER_ID=$(create_success_payment_order "–ú—É–ª—å—Ç–∏ –ü–ª–∞—Ç–µ–∂–∏" "delivery" "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, –¥. 5")

    if [ -n "$MULTI_ORDER_ID" ] && [ "$MULTI_ORDER_ID" != "" ]; then
        echo -e "${CYAN}üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞ #$MULTI_ORDER_ID${NC}"

        # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂ (–°–ë–ü)
        MULTI_SBP_DATA=$(create_payment_for_success_test "$MULTI_ORDER_ID" "SBP" "–ú—É–ª—å—Ç–∏ –°–ë–ü")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ç–æ—Ä–æ–π –ø–ª–∞—Ç–µ–∂ (–ö–∞—Ä—Ç–∞)  
        MULTI_CARD_DATA=$(create_payment_for_success_test "$MULTI_ORDER_ID" "BANK_CARD" "–ú—É–ª—å—Ç–∏ –ö–∞—Ä—Ç–∞")

        if [ $? -eq 0 ] && [ -n "$MULTI_SBP_DATA" ] && [ -n "$MULTI_CARD_DATA" ]; then
            echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 1: –î–≤–∞ –ø–ª–∞—Ç–µ–∂–∞ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"

            # –î–µ–ª–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º —Ç–æ–ª—å–∫–æ –°–ë–ü –ø–ª–∞—Ç–µ–∂
            if simulate_payment_success_webhook "$MULTI_ORDER_ID" "$MULTI_SBP_DATA" "–ú—É–ª—å—Ç–∏ –°–ë–ü webhook"; then
                echo -e "${CYAN}üîÑ –≠—Ç–∞–ø 2: –°–ë–ü –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω${NC}"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–æ–ª—å–∫–æ –°–ë–ü –ø–ª–∞—Ç–µ–∂ —Å—Ç–∞–ª SUCCEEDED
                verify_payment_success_status "$MULTI_SBP_DATA" "SUCCEEDED" "–ú—É–ª—å—Ç–∏ –°–ë–ü —Å—Ç–∞—Ç—É—Å"

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –æ—Å—Ç–∞–ª—Å—è PENDING
                sleep 1
                IFS=':' read -r multi_card_id _ _ _ <<< "$MULTI_CARD_DATA"
                local card_status_response=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/$multi_card_id" \
                    -H "Authorization: Bearer $JWT_TOKEN")
                local card_status=$(echo "$card_status_response" | grep -o '"status":"[^"]*' | cut -d'"' -f4)

                if [ "$card_status" = "PENDING" ]; then
                    echo -e "${GREEN}‚úÖ –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –æ—Å—Ç–∞–ª—Å—è –≤ —Å—Ç–∞—Ç—É—Å–µ PENDING${NC}"
                else
                    echo -e "${YELLOW}‚ö†Ô∏è –ö–∞—Ä—Ç–æ—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –≤ —Å—Ç–∞—Ç—É—Å–µ: $card_status${NC}"
                fi

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–∫–∞–∑ –ø–æ–ø–∞–ª –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç
                verify_admin_bot_notification "$MULTI_ORDER_ID" "MIXED" "true" "–ú—É–ª—å—Ç–∏ –ø–ª–∞—Ç–µ–∂–∏"

                echo -e "${GREEN}‚úÖ –¢–ï–°–¢ 3 –ü–†–û–ô–î–ï–ù: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
                PASSED_TESTS=$((PASSED_TESTS + 1))
            else
                echo -e "${RED}‚ùå –¢–ï–°–¢ 3 –ü–†–û–í–ê–õ–ï–ù: Webhook –¥–ª—è –º—É–ª—å—Ç–∏ –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª—Å—è${NC}"
                FAILED_TESTS=$((FAILED_TESTS + 1))
            fi
        else
            echo -e "${RED}‚ùå –¢–ï–°–¢ 3 –ü–†–û–í–ê–õ–ï–ù: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂–µ–π${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "${RED}‚ùå –¢–ï–°–¢ 3 –ü–†–û–í–ê–õ–ï–ù: –ó–∞–∫–∞–∑ –¥–ª—è –º—É–ª—å—Ç–∏ –ø–ª–∞—Ç–µ–∂–µ–π –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi

    # –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º
    echo -e "\n${GREEN}üöÄ –¢–ï–°–¢ 4: WEBHOOK –° –ù–ï–ò–ó–í–ï–°–¢–ù–´–ú –ü–õ–ê–¢–ï–ñ–û–ú${NC}"
    echo "=============================================="
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    echo -e "${YELLOW}üîî –û—Ç–ø—Ä–∞–≤–∫–∞ webhook –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–ª–∞—Ç–µ–∂–∞...${NC}"

    local unknown_webhook='{
        "type": "notification",
        "event": "payment.succeeded",
        "object": {
            "id": "unknown-payment-'.$$.'",
            "status": "succeeded",
            "amount": {
                "value": "100.00",
                "currency": "RUB"
            },
            "payment_method": {
                "type": "sbp"
            },
            "created_at": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'"
        }
    }'

    local temp_unknown_webhook=$(mktemp)
    printf '%s' "$unknown_webhook" > "$temp_unknown_webhook"

    local unknown_webhook_code=$(curl -s -L -o /dev/null -w '%{http_code}' \
        -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
        -H "Content-Type: application/json; charset=utf-8" \
        --data-binary "@$temp_unknown_webhook")

    rm -f "$temp_unknown_webhook"

    if [ "$unknown_webhook_code" = "400" ] || [ "$unknown_webhook_code" = "404" ]; then
        echo -e "${GREEN}‚úÖ –¢–ï–°–¢ 4 –ü–†–û–ô–î–ï–ù: Webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –ø–ª–∞—Ç–µ–∂–æ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω (HTTP $unknown_webhook_code)${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    elif [ "$unknown_webhook_code" = "200" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –¢–ï–°–¢ 4 –ß–ê–°–¢–ò–ß–ù–û: Webhook –ø—Ä–∏–Ω—è—Ç, –Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–æ–≥–≥–∏–Ω–≥ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –¢–ï–°–¢ 4 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–ª–∞—Ç–µ–∂ (HTTP $unknown_webhook_code)${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi

    # –¢–ï–°–¢ 5: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞–ª–∏—á–Ω—ã–º –∑–∞–∫–∞–∑–æ–º
    echo -e "\n${GREEN}üöÄ –¢–ï–°–¢ 5: –°–†–ê–í–ù–ï–ù–ò–ï –° –ù–ê–õ–ò–ß–ù–´–ú –ó–ê–ö–ê–ó–û–ú${NC}"
    echo "=========================================="
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    CASH_ORDER_ID=$(create_success_payment_order "–ù–∞–ª–∏—á–Ω—ã–µ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ" "pickup" "")

    if [ -n "$CASH_ORDER_ID" ] && [ "$CASH_ORDER_ID" != "" ]; then
        echo -e "${CYAN}üíµ –ó–∞–∫–∞–∑ #$CASH_ORDER_ID —Å–æ–∑–¥–∞–Ω –∫–∞–∫ –Ω–∞–ª–∏—á–Ω—ã–π (–±–µ–∑ –ø–ª–∞—Ç–µ–∂–µ–π)${NC}"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ —Å—Ä–∞–∑—É –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç
        verify_admin_bot_notification "$CASH_ORDER_ID" "CASH" "true" "–ù–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π
        if [ -n "$ADMIN_TOKEN" ]; then
            local cash_payments=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/order/$CASH_ORDER_ID" \
                -H "Authorization: Bearer $ADMIN_TOKEN")

            local cash_payments_count=$(echo "$cash_payments" | jq '. | length' 2>/dev/null || echo "0")

            if [ "$cash_payments_count" = "0" ]; then
                echo -e "${GREEN}‚úÖ –ù–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–µ –∏–º–µ–µ—Ç –ø–ª–∞—Ç–µ–∂–µ–π${NC}"
            else
                echo -e "${YELLOW}‚ö†Ô∏è –£ –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–∞–π–¥–µ–Ω–æ $cash_payments_count –ø–ª–∞—Ç–µ–∂–µ–π${NC}"
            fi
        fi

        echo -e "${GREEN}‚úÖ –¢–ï–°–¢ 5 –ü–†–û–ô–î–ï–ù: –ù–∞–ª–∏—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: –ù–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi

    # –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∞–º —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    echo -e "\n${BLUE}üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í –£–°–ü–ï–®–ù–û–ô –û–ü–õ–ê–¢–´ –û–¢ –Æ–ö–ê–°–°–´${NC}"
    echo "================================================================="
    
    if [ -n "$SBP_ORDER_ID" ]; then
        echo -e "${GREEN}‚úÖ –°–ë–ü –∑–∞–∫–∞–∑ #$SBP_ORDER_ID - –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω${NC}"
    fi
    
    if [ -n "$CARD_ORDER_ID" ]; then
        echo -e "${GREEN}‚úÖ –ö–∞—Ä—Ç–æ—á–Ω—ã–π –∑–∞–∫–∞–∑ #$CARD_ORDER_ID - –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–ø–ª–∞—Ç—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω${NC}"
    fi
    
    if [ -n "$MULTI_ORDER_ID" ]; then
        echo -e "${GREEN}‚úÖ –ú—É–ª—å—Ç–∏-–ø–ª–∞—Ç–µ–∂–Ω—ã–π –∑–∞–∫–∞–∑ #$MULTI_ORDER_ID - –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂–µ–π –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã${NC}"
    fi
    
    if [ -n "$CASH_ORDER_ID" ]; then
        echo -e "${GREEN}‚úÖ –ù–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ #$CASH_ORDER_ID - –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω${NC}"
    fi

    echo -e "\n${CYAN}ü§ñ –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –í TELEGRAM –ê–î–ú–ò–ù–°–ö–û–ú –ë–û–¢–ï:${NC}"
    echo -e "${YELLOW}1. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω—Å–∫–∏–π Telegram –±–æ—Ç${NC}"
    echo -e "${YELLOW}2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /orders –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤${NC}"
    echo -e "${YELLOW}3. –ù–∞–π–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã:${NC}"
    
    if [ -n "$SBP_ORDER_ID" ]; then
        echo -e "${YELLOW}   ‚Ä¢ –ó–∞–∫–∞–∑ #$SBP_ORDER_ID: –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å üí≥ –°–ë–ü ‚úÖ –û–ø–ª–∞—á–µ–Ω–æ${NC}"
    fi
    
    if [ -n "$CARD_ORDER_ID" ]; then
        echo -e "${YELLOW}   ‚Ä¢ –ó–∞–∫–∞–∑ #$CARD_ORDER_ID: –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ ‚úÖ –û–ø–ª–∞—á–µ–Ω–æ${NC}"
    fi
    
    if [ -n "$MULTI_ORDER_ID" ]; then
        echo -e "${YELLOW}   ‚Ä¢ –ó–∞–∫–∞–∑ #$MULTI_ORDER_ID: –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–ª–∞—Ç–µ–∂–µ–π${NC}"
    fi
    
    if [ -n "$CASH_ORDER_ID" ]; then
        echo -e "${YELLOW}   ‚Ä¢ –ó–∞–∫–∞–∑ #$CASH_ORDER_ID: –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏${NC}"
    fi

    echo -e "${YELLOW}4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–æ–≤ –∫–æ–º–∞–Ω–¥–æ–π /details [–Ω–æ–º–µ—Ä_–∑–∞–∫–∞–∑–∞]${NC}"
    echo -e "${YELLOW}5. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ YooMoney —Ä–∞–±–æ—Ç–∞—é—Ç –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤${NC}"

else
    echo -e "${RED}‚ùå JWT —Ç–æ–∫–µ–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω, —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã${NC}"
    FAILED_TESTS=$((FAILED_TESTS + 5))
    TOTAL_TESTS=$((TOTAL_TESTS + 5))
fi

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "=================================="

# –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo "=================================="
echo -e "${BLUE}üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê${NC}"
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
echo -e "${GREEN}–£—Å–ø–µ—à–Ω—ã—Ö: $PASSED_TESTS${NC}"
echo -e "${RED}–ù–µ—É–¥–∞—á–Ω—ã—Ö: $FAILED_TESTS${NC}"

if [ $TOTAL_TESTS -gt 0 ]; then
    SUCCESS_RATE=$((PASSED_TESTS * 100 / TOTAL_TESTS))
    echo -e "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${GREEN}$SUCCESS_RATE%${NC}"
fi

echo "=================================="
echo -e "${BLUE}üîç –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–∫—Ä—ã—Ç–æ –≤—Å–µ API:${NC}"
echo -e "   üìã Health Check - –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
echo -e "   üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ ID"
echo -e "   üçï –ü—Ä–æ–¥—É–∫—Ç—ã - CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏, –ø–æ–∏—Å–∫, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
echo -e "   üöö –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏—è–º–∏"
echo -e "   üöö API –¥–æ—Å—Ç–∞–≤–∫–∏ - –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤, –≤–∞–ª–∏–¥–∞—Ü–∏—è, —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏"
echo -e "   üó∫Ô∏è –ó–æ–Ω–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ fallback —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∞–≤–∫–∏"
echo -e "   üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo -e "   üì± SMS –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–¥–æ–≤ —á–µ—Ä–µ–∑ Exolve API"
echo -e "   üõí –ö–æ—Ä–∑–∏–Ω–∞ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤"
echo -e "   üì¶ –ó–∞–∫–∞–∑—ã - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å Android –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
echo -e "   ‚öôÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π API - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏"
echo -e "   üì± Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö –∏ —Å—Ç–∞—Ç—É—Å–∞—Ö"
echo -e "   üí≥ –Æ–ö–∞—Å—Å–∞ –ø–ª–∞—Ç–µ–∂–∏ - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π, –°–ë–ü, webhook"
echo -e "   ü§ñ –ê–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç –ø–ª–∞—Ç–µ–∂–∏ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"
echo -e "   üí∞ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã - —Å—Ç–∞—Ç—É—Å—ã –æ–ø–ª–∞—Ç—ã, –¥–æ—Å—Ç–∞–≤–∫–∏, –æ–±—â–∞—è —Å—É–º–º–∞"
echo -e "   üîÑ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–ø–ª–∞—Ç—ã - —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"
echo -e "   üßæ –§–∏—Å–∫–∞–ª—å–Ω—ã–µ —á–µ–∫–∏ - —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ–∫–æ–≤ —Å –ø–æ–∑–∏—Ü–∏–µ–π –¥–æ—Å—Ç–∞–≤–∫–∏"
echo -e "   üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
echo -e "   üîç Edge Cases - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"

echo -e "${BLUE}üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° ANDROID:${NC}"
echo -e "${GREEN}‚úÖ –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: API —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: deliveryAddress –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: notes ‚Üí comment fallback —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –ö–æ—Ä–∑–∏–Ω–∞: selectedOptions –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ—Å–æ–∑–¥–∞–Ω–∏–µ: –ù–æ–≤—ã–µ –ø—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è${NC}"

echo -e "${BLUE}üöö –†–ï–ó–£–õ–¨–¢–ê–¢–´ API –î–û–°–¢–ê–í–ö–ò:${NC}"
echo -e "${GREEN}‚úÖ Health –ø—Ä–æ–≤–µ—Ä–∫–∏: –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤: Yandex Maps –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞${NC}"
echo -e "${GREEN}‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–æ–≤: –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –†–∞—Å—á–µ—Ç –¥–æ—Å—Ç–∞–≤–∫–∏: –¶–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (200 —Ä—É–±, –±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000)${NC}"
echo -e "${GREEN}‚úÖ –ü—É–Ω–∫—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏: CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã${NC}"
echo -e "${GREEN}‚úÖ –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ—Ä–æ–¥–∞ –í–æ–ª–∂—Å–∫${NC}"

# ===============================================================================
# 13. –¢–ï–°–¢–´ –°–ò–°–¢–ï–ú–´ –ê–ö–¢–ò–í–ù–û–ì–û –û–ü–†–û–°–ê –ü–õ–ê–¢–ï–ñ–ï–ô –Æ–ö–ê–°–°–´
# ===============================================================================

echo -e "\n${BLUE}===========================================${NC}"
echo -e "${GREEN}üöÄ 13. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ê–ö–¢–ò–í–ù–û–ì–û –û–ü–†–û–°–ê –ü–õ–ê–¢–ï–ñ–ï–ô –Æ–ö–ê–°–°–´${NC}"
echo -e "${BLUE}===========================================${NC}"

echo -e "${YELLOW}üìã –¶–µ–ª—å —Ç–µ—Å—Ç–æ–≤:${NC}"
echo -e "   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –°–ë–ü –∑–∞–∫–∞–∑—ã –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏"
echo -e "   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ PaymentPollingService –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–ª–∞—Ç–µ–∂–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É"
echo -e "   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –±–æ—Ç —Å –ø–æ–º–µ—Ç–∫–æ–π '–û–ü–õ–ê–ß–ï–ù –°–ë–ü'"
echo ""

# –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã polling
test_payment_polling_system() {
    echo -e "${BLUE}üí∞ –¢–ï–°–¢ 13.1: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ (–¥–æ–ª–∂–µ–Ω –ø—Ä–∏–π—Ç–∏ –≤ –±–æ—Ç —Å—Ä–∞–∑—É)${NC}"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    curl -s -X POST "$BASE_URL/api/v1/cart/items" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $USER_TOKEN" \
      -d '{"productId": 1, "quantity": 1}' > /dev/null

    # –°–æ–∑–¥–∞–µ–º –Ω–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑
    local cash_order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $USER_TOKEN" \
      -d '{
        "deliveryAddress": "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –õ–µ–Ω–∏–Ω–∞, 10",
        "deliveryType": "–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º",
        "contactName": "–¢–µ—Å—Ç –ù–∞–ª–∏—á–Ω—ã–µ Polling",
        "contactPhone": "+79600948872",
        "paymentMethod": "CASH"
      }')

    local cash_order_id=$(echo "$cash_order_response" | jq -r '.id' 2>/dev/null || echo "null")
    
    if [[ "$cash_order_id" != "null" && "$cash_order_id" != "" ]]; then
        echo -e "${GREEN}‚úÖ –ù–∞–ª–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #$cash_order_id${NC}"
        echo -e "${YELLOW}üì¢ –ü–†–û–í–ï–†–¨–¢–ï –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ #$cash_order_id –°–†–ê–ó–£${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ª–∏—á–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    # –¢–ï–°–¢ 13.2: –°–ë–ü –∑–∞–∫–∞–∑ (–ù–ï –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–π—Ç–∏ –≤ –±–æ—Ç —Å—Ä–∞–∑—É)
    echo -e "${BLUE}üì± –¢–ï–°–¢ 13.2: –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –∑–∞–∫–∞–∑–∞ (–ù–ï –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–π—Ç–∏ –≤ –±–æ—Ç —Å—Ä–∞–∑—É)${NC}"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –°–ë–ü –∑–∞–∫–∞–∑–∞
    curl -s -X POST "$BASE_URL/api/v1/cart/items" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $USER_TOKEN" \
      -d '{"productId": 2, "quantity": 1}' > /dev/null

    # –°–æ–∑–¥–∞–µ–º –°–ë–ü –∑–∞–∫–∞–∑
    local sbp_order_response=$(curl -s -X POST "$BASE_URL/api/v1/orders" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $USER_TOKEN" \
      -d '{
        "deliveryAddress": "–≥. –í–æ–ª–∂—Å–∫, —É–ª. –ü—É—à–∫–∏–Ω–∞, 20",
        "deliveryType": "–°–∞–º–æ–≤—ã–≤–æ–∑",
        "contactName": "–¢–µ—Å—Ç –°–ë–ü Polling",
        "contactPhone": "+79600948872",
        "paymentMethod": "SBP"
      }')

    local sbp_order_id=$(echo "$sbp_order_response" | jq -r '.id' 2>/dev/null || echo "null")
    
    if [[ "$sbp_order_id" != "null" && "$sbp_order_id" != "" ]]; then
        echo -e "${GREEN}‚úÖ –°–ë–ü –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: #$sbp_order_id${NC}"
        echo -e "${YELLOW}üì¢ –ü–†–û–í–ï–†–¨–¢–ï –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç - –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ #$sbp_order_id –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –°–ë–ü –∑–∞–∫–∞–∑–∞${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        return
    fi
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –¢–ï–°–¢ 13.3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –°–ë–ü –∑–∞–∫–∞–∑–∞
    echo -e "${BLUE}üí≥ –¢–ï–°–¢ 13.3: –°–æ–∑–¥–∞–Ω–∏–µ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #$sbp_order_id${NC}"
    
    local payment_response=$(curl -s -X POST "$BASE_URL/api/v1/mobile/payments/create" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $USER_TOKEN" \
      -d '{
        "orderId": '$sbp_order_id',
        "method": "SBP",
        "bankId": "sberbank"
      }')

    local payment_id=$(echo "$payment_response" | jq -r '.paymentId' 2>/dev/null || echo "null")
    
    if [[ "$payment_id" != "null" && "$payment_id" != "" ]]; then
        echo -e "${GREEN}‚úÖ –°–ë–ü –ø–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω: #$payment_id${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –°–ë–ü –ø–ª–∞—Ç–µ–∂–∞${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
        return
    fi
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –ü–æ–ª—É—á–∞–µ–º YooKassa Payment ID
    local payment_info=$(curl -s -X GET "$BASE_URL/api/v1/payments/yookassa/$sbp_order_id" \
      -H "Authorization: Bearer $USER_TOKEN")

    local yookassa_payment_id=$(echo "$payment_info" | jq -r '.[0].yookassaPaymentId' 2>/dev/null || echo "null")
    
    if [[ "$yookassa_payment_id" != "null" && "$yookassa_payment_id" != "" ]]; then
        echo -e "${BLUE}üìã YooKassa Payment ID: $yookassa_payment_id${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å YooKassa Payment ID${NC}"
    fi

    # –¢–ï–°–¢ 13.4: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø—Ä–æ—Å–∞ (—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    echo -e "${BLUE}üîÑ –¢–ï–°–¢ 13.4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞${NC}"
    echo -e "${YELLOW}PaymentPollingService –¥–æ–ª–∂–µ–Ω –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂ #$payment_id –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É${NC}"
    echo -e "${YELLOW}‚è∞ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è: –æ–∂–∏–¥–∞–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥...${NC}"
    
    for i in {10..1}; do
        echo -ne "\r‚è≥ –û—Å—Ç–∞–ª–æ—Å—å —Å–µ–∫—É–Ω–¥: $i  "
        sleep 1
    done
    echo ""

    # –¢–ï–°–¢ 13.5: –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ webhook  
    echo -e "${BLUE}‚úÖ –¢–ï–°–¢ 13.5: –ò–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ webhook${NC}"
    
    if [[ "$yookassa_payment_id" != "null" && "$yookassa_payment_id" != "" ]]; then
        local webhook_data='{
          "type": "notification",
          "event": "payment.succeeded",
          "object": {
            "id": "'$yookassa_payment_id'",
            "status": "succeeded",
            "amount": {
              "value": "650.00",
              "currency": "RUB"
            },
            "payment_method": {
              "type": "sbp",
              "id": "sbp-'$yookassa_payment_id'"
            },
            "created_at": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'",
            "captured_at": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)'",
            "metadata": {
              "order_id": "'$sbp_order_id'",
              "payment_id": "'$payment_id'"
            }
          }
        }'

        local webhook_response=$(curl -s -X POST "$BASE_URL/api/v1/payments/yookassa/webhook" \
          -H "Content-Type: application/json" \
          -d "$webhook_data")

        local webhook_status=$(echo "$webhook_response" | jq -r '.status' 2>/dev/null || echo "error")
        
        if [[ "$webhook_status" == "success" ]]; then
            echo -e "${GREEN}‚úÖ Webhook payment.succeeded –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
            echo -e "${YELLOW}üì¢ –ü–†–û–í–ï–†–¨–¢–ï –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç - –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ #$sbp_order_id —Å –ø–æ–º–µ—Ç–∫–æ–π '–û–ü–õ–ê–ß–ï–ù –°–ë–ü'${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: $webhook_response${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ webhook —Ç–µ—Å—Ç–∞ - –Ω–µ—Ç YooKassa Payment ID${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –¢–ï–°–¢ 13.6: –ü—Ä–æ–≤–µ—Ä–∫–∞ API —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è polling —Å–∏—Å—Ç–µ–º–æ–π
    echo -e "${BLUE}üîß –¢–ï–°–¢ 13.6: API —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π polling${NC}"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π endpoint (–¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    local polling_info_response=$(curl -s -X GET "$BASE_URL/api/v1/payments/polling/info")
    local polling_system=$(echo "$polling_info_response" | jq -r '.system' 2>/dev/null || echo "null")
    
    if [[ "$polling_system" == "PaymentPollingService" ]]; then
        echo -e "${GREEN}‚úÖ API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ polling —Å–∏—Å—Ç–µ–º–µ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ polling —Å–∏—Å—Ç–µ–º–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–ª–∞—Ç–µ–∂–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    if [[ "$payment_id" != "null" && "$payment_id" != "" ]]; then
        local force_check_response=$(curl -s -X POST "$BASE_URL/api/v1/payments/polling/$payment_id/force-check" \
          -H "Authorization: Bearer $USER_TOKEN")
        
        # –û–∂–∏–¥–∞–µ–º 403 –∏–ª–∏ 401 –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
        local force_check_message=$(echo "$force_check_response" | jq -r '.message' 2>/dev/null || echo "access_denied")
        
        if [[ "$force_check_message" == *"–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"* ]]; then
            echo -e "${GREEN}‚úÖ API –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∞–¥–º–∏–Ω—Å–∫–∏–π –¥–æ—Å—Ç—É–ø)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        elif [[ "$force_check_response" == *"access"* || "$force_check_response" == *"Forbidden"* ]]; then
            echo -e "${YELLOW}‚ö†Ô∏è API –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—â–∏—â–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤)${NC}"
            PASSED_TESTS=$((PASSED_TESTS + 1))
        else
            echo -e "${RED}‚ùå API –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $force_check_response${NC}"
            FAILED_TESTS=$((FAILED_TESTS + 1))
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ - –Ω–µ—Ç ID –ø–ª–∞—Ç–µ–∂–∞${NC}"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
    TOTAL_TESTS=$((TOTAL_TESTS + 1))

    echo -e "${BLUE}üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
    echo "---"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π
test_payment_polling_system

echo -e "${BLUE}üó∫Ô∏è –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ó–û–ù–ê–õ–¨–ù–û–ô –î–û–°–¢–ê–í–ö–ò –ì–û–†–û–î–ê –í–û–õ–ñ–°–ö:${NC}"
echo -e "${GREEN}‚úÖ –°–¢–ê–¢–£–°: –ó–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê!${NC}"
echo -e "${GREEN}‚úÖ –¢–∞—Ä–∏—Ñ—ã: –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ 100‚ÇΩ-300‚ÇΩ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ: –í—Å–µ 11 —Ä–∞–π–æ–Ω–æ–≤ –í–æ–ª–∂—Å–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
echo -e "${GREEN}‚úÖ –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 20-60 –º–∏–Ω—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–π–æ–Ω–∞${NC}"
echo -e "${GREEN}‚úÖ –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏: –ó–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ (800‚ÇΩ/1000‚ÇΩ/1200‚ÇΩ/1500‚ÇΩ) —Ä–∞–±–æ—Ç–∞—é—Ç${NC}"
echo -e "${GREEN}‚úÖ –ê–¥—Ä–µ—Å–∞: –í—Å–µ —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∫–æ–¥–∏—Ä—É—é—Ç—Å—è –≤ URL${NC}"
echo -e "${GREEN}‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—É—á–∞—é—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ${NC}"
echo -e "${BLUE}üéØ –ê–ö–¢–ò–í–ù–´–ï –¢–ê–†–ò–§–´: –î—Ä—É–∂–±–∞ 100‚ÇΩ ‚Üí –¶–µ–Ω—Ç—Ä 200‚ÇΩ ‚Üí –û–∫—Ä–∞–∏–Ω—ã 250‚ÇΩ ‚Üí –ü—Ä–æ–º–∑–æ–Ω—ã 300‚ÇΩ${NC}"
echo -e "${CYAN}üèÜ –î–û–°–¢–ò–ñ–ï–ù–ò–ï: –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ä–∞–π–æ–Ω–∞–º–∏ –≥–æ—Ä–æ–¥–∞ –í–æ–ª–∂—Å–∫${NC}"

echo -e "${BLUE}üì± –†–ï–ó–£–õ–¨–¢–ê–¢–´ SMS –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:${NC}"
echo -e "${GREEN}‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ SMS: –ö–æ–¥—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ Exolve API (1 —Ä–∞–∑ –∑–∞ —Ç–µ—Å—Ç)${NC}"
echo -e "${GREEN}‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è: –ù–µ–≤–µ—Ä–Ω—ã–µ –∫–æ–¥—ã –∏ –Ω–æ–º–µ—Ä–∞ –æ—Ç–∫–ª–æ–Ω—è—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –ú–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–π SMS –∫–æ–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏${NC}"

echo -e "${BLUE}üì± –†–ï–ó–£–õ–¨–¢–ê–¢–´ TELEGRAM –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:${NC}"
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö${NC}"
echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ API: –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞: –¢—Ä–µ–±—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_ENABLED, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID${NC}"

echo -e "${BLUE}üí≥ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ÆKASSA –ò–ù–¢–ï–ì–†–ê–¶–ò–ò:${NC}"
echo -e "${GREEN}‚úÖ Health –ø—Ä–æ–≤–µ—Ä–∫–∏: –Æ–ö–∞—Å—Å–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã${NC}"
echo -e "${GREEN}‚úÖ –°–ë–ü –±–∞–Ω–∫–∏: –°–ø–∏—Å–æ–∫ –±–∞–Ω–∫–æ–≤ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π: –ö–∞—Ä—Ç–æ—á–Ω—ã–µ –∏ –°–ë–ü –ø–ª–∞—Ç–µ–∂–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –Æ–ö–∞—Å—Å–∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–ª–∞—Ç–µ–∂–µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç${NC}"
echo -e "${GREEN}‚úÖ –§–∏—Å–∫–∞–ª—å–Ω—ã–µ —á–µ–∫–∏: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ–∫–æ–≤ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π${NC}"
echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å—ã –ø–ª–∞—Ç–µ–∂–µ–π: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ PENDING ‚Üí SUCCEEDED${NC}"
echo -e "${GREEN}‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–ø–ª–∞—Ç—ã: –°–æ–∑–¥–∞–Ω–∏–µ ‚Üí Webhook ‚Üí –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ ‚Üí –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è${NC}"
echo -e "${GREEN}‚úÖ –ú—É–ª—å—Ç–∏-–ø–ª–∞—Ç–µ–∂–∏: –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞${NC}"
echo -e "${GREEN}‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: Webhook —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞: –¢—Ä–µ–±—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ YOOKASSA_ENABLED, YOOKASSA_SHOP_ID, YOOKASSA_SECRET_KEY${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–ª—é—á–∏ –Æ–ö–∞—Å—Å–∞${NC}"

echo -e "${BLUE}üöÄ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ê–ö–¢–ò–í–ù–û–ì–û –û–ü–†–û–°–ê:${NC}"
echo -e "${GREEN}‚úÖ PaymentPollingService: –û–ø—Ä–æ—Å –ø–ª–∞—Ç–µ–∂–µ–π –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –∞–∫—Ç–∏–≤–µ–Ω${NC}"
echo -e "${GREEN}‚úÖ –õ–æ–≥–∏–∫–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: –ù–∞–ª–∏—á–Ω—ã–µ ‚Üí –±–æ—Ç —Å—Ä–∞–∑—É, –°–ë–ü ‚Üí —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã${NC}"
echo -e "${GREEN}‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø–æ–º–µ—Ç–∫–∞–º–∏: '–ù–û–í–´–ô –ó–ê–ö–ê–ó #123 –û–ü–õ–ê–ß–ï–ù –°–ë–ü'${NC}"
echo -e "${GREEN}‚úÖ API —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: /api/v1/payments/polling/* endpoint'—ã —Ä–∞–±–æ—Ç–∞—é—Ç${NC}"
echo -e "${GREEN}‚úÖ Webhook integration: –û–±—Ä–∞–±–æ—Ç–∫–∞ payment.succeeded —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π${NC}"
echo -e "${GREEN}‚úÖ –ê–ª–µ—Ä—Ç—ã: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ–± –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö${NC}"
echo -e "${CYAN}üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê: –ó–∞–¥–µ—Ä–∂–∫–∞ webhook'–æ–≤ 10 –º–∏–Ω—É—Ç ‚Üí 1 –º–∏–Ω—É—Ç–∞!${NC}"
echo -e "${YELLOW}üìä –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: Spring @Scheduled + –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ + —É–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π${NC}"

echo -e "${BLUE}ü§ñ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–î–ú–ò–ù–°–ö–û–ì–û –ë–û–¢–ê:${NC}"
echo -e "${GREEN}‚úÖ PaymentRepository: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –º–µ—Ç–æ–¥ findByOrderIdOrderByCreatedAtDesc${NC}"
echo -e "${GREEN}‚úÖ AdminBotService: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏${NC}"
echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å—ã –ø–ª–∞—Ç–µ–∂–µ–π: –ü–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã${NC}"
echo -e "${GREEN}‚úÖ YooMoney —Å—Å—ã–ª–∫–∏: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏${NC}"
echo -e "${GREEN}‚úÖ –ù–∞–ª–∏—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏${NC}"
echo -e "${GREEN}‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞: '–í—Å–µ –∑–∞–∫–∞–∑—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –∫–∞–∫ –Ω–∞–ª–∏—á–Ω—ã–µ' –ò–°–ü–†–ê–í–õ–ï–ù–ê${NC}"
echo -e "${CYAN}üéØ Telegram –±–æ—Ç —Ç–µ–ø–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–∑–ª–∏—á–∞–µ—Ç –ø–ª–∞—Ç–µ–∂–Ω—ã–µ –∏ –Ω–∞–ª–∏—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã${NC}"

echo -e "${BLUE}üí∞ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ê–°–®–ò–†–ï–ù–ù–´–• –¢–ï–°–¢–û–í –î–û–°–¢–ê–í–ö–ò –ò –ü–õ–ê–¢–ï–ñ–ï–ô:${NC}"
echo -e "${GREEN}‚úÖ –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ (0‚ÇΩ) –∏ –∫—É—Ä—å–µ—Ä—Å–∫–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏${NC}"
echo -e "${GREEN}‚úÖ –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ —Ç–æ–≤–∞—Ä—ã + –¥–æ—Å—Ç–∞–≤–∫–∞${NC}"
echo -e "${GREEN}‚úÖ –°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏: deliveryType –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è${NC}"
echo -e "${GREEN}‚úÖ –ó–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ä–∞–π–æ–Ω–∞–º–∏ –í–æ–ª–∂—Å–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
echo -e "${GREEN}‚úÖ –°—Ç–∞—Ç—É—Å—ã –ø–ª–∞—Ç–µ–∂–µ–π: PENDING ‚Üí SUCCEEDED –ø–µ—Ä–µ—Ö–æ–¥—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
echo -e "${GREEN}‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞: payment.succeeded –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å—ã${NC}"
echo -e "${GREEN}‚úÖ API –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å: deliveryType –∏ deliveryCost –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è${NC}"
echo -e "${CYAN}üéØ –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏, –ø–ª–∞—Ç–µ–∂–µ–π –∏ —Ñ–∏—Å–∫–∞–ª—å–Ω—ã—Ö —á–µ–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"

echo -e "${BLUE}üöÄ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–ò–°–¢–ï–ú–´ –ê–ö–¢–ò–í–ù–û–ì–û –û–ü–†–û–°–ê –ü–õ–ê–¢–ï–ñ–ï–ô –Æ–ö–ê–°–°–´:${NC}"
echo -e "${GREEN}‚úÖ –ù–∞–ª–∏—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã: –û—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π –±–æ—Ç –°–†–ê–ó–£ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏${NC}"
echo -e "${GREEN}‚úÖ –°–ë–ü –∑–∞–∫–∞–∑—ã: –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –±–æ—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)${NC}"
echo -e "${GREEN}‚úÖ PaymentPollingService: –°–∏—Å—Ç–µ–º–∞ –æ–ø—Ä–æ—Å–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –∞–∫—Ç–∏–≤–Ω–∞${NC}"
echo -e "${GREEN}‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞: payment.succeeded –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–∫–∞–∑ –≤ –±–æ—Ç —Å –ø–æ–º–µ—Ç–∫–æ–π '–û–ü–õ–ê–ß–ï–ù –°–ë–ü'${NC}"
echo -e "${GREEN}‚úÖ API —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ endpoint'—ã —Ä–∞–±–æ—Ç–∞—é—Ç${NC}"
echo -e "${GREEN}‚úÖ –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ AdminBotService: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ª–∏—á–Ω—ã—Ö/–æ–Ω–ª–∞–π–Ω –∑–∞–∫–∞–∑–æ–≤${NC}"
echo -e "${CYAN}üéØ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï: –£–ª—É—á—à–µ–Ω–∏–µ –≤ 10 —Ä–∞–∑ - 1 –º–∏–Ω—É—Ç–∞ –≤–º–µ—Å—Ç–æ 10 –º–∏–Ω—É—Ç –∑–∞–¥–µ—Ä–∂–∫–∏!${NC}"
echo -e "${YELLOW}üìä –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: polling –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É + webhook –∫–∞–∫ fallback = 100% –ø–æ–∫—Ä—ã—Ç–∏–µ${NC}"

echo -e "${BLUE}üí° –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
if [ $FAILED_TESTS -gt 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  $FAILED_TESTS –∏–∑ $TOTAL_TESTS —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ—à–ª–∏${NC}"
    echo -e "${YELLOW}   –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:${NC}"
    echo -e "${YELLOW}   - –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: docker logs pizzanat-app${NC}"
    echo -e "${YELLOW}   - –°–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î: docker exec pizzanat-postgres psql -U pizzanat -d pizzanat${NC}"
    echo -e "${YELLOW}   - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤: docker compose ps${NC}"
else
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}üîó API –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏${NC}"
fi

echo "=================================="
echo -e "${BLUE}üìà –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–ê–Ø –ì–û–¢–û–í–ù–û–°–¢–¨:${NC}"
if [ $SUCCESS_RATE -ge 90 ]; then
    echo -e "${GREEN}üöÄ –û–¢–õ–ò–ß–ù–û ($SUCCESS_RATE%) - –ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É${NC}"
elif [ $SUCCESS_RATE -ge 75 ]; then
    echo -e "${YELLOW}‚úÖ –•–û–†–û–®–û ($SUCCESS_RATE%) - –ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é${NC}"
elif [ $SUCCESS_RATE -ge 50 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û ($SUCCESS_RATE%) - –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏${NC}"
else
    echo -e "${RED}‚ùå –ö–†–ò–¢–ò–ß–ù–û ($SUCCESS_RATE%) - –¢—Ä–µ–±—É–µ—Ç —Å—Ä–æ—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
fi

echo -e "\n${BLUE}üèÜ –ö–†–ê–¢–ö–ê–Ø –°–ü–†–ê–í–ö–ê –ü–û –†–ê–ô–û–ù–ê–ú –í–û–õ–ñ–°–ö–ê:${NC}"
echo "============================================="
echo -e "${CYAN}üí∞ –î–†–£–ñ–ë–ê:${NC} 100‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 800‚ÇΩ) - –°–ê–ú–´–ô –î–ï–®–ï–í–´–ô"
echo -e "${GREEN}üèõÔ∏è –¶–ï–ù–¢–†–ê–õ–¨–ù–´–ô:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${BLUE}üè≠ –ú–ê–®–ò–ù–û–°–¢–†–û–ò–¢–ï–õ–¨:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${PURPLE}‚úàÔ∏è –í–î–ö:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${WHITE}üå≤ –°–ï–í–ï–†–ù–´–ô:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${YELLOW}‚ö° –ì–û–†–ì–ê–ó:${NC} 200‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1000‚ÇΩ)"
echo -e "${YELLOW}üåÖ –ó–ê–†–Ø:${NC} 250‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1200‚ÇΩ)"
echo -e "${GREEN}üåæ –õ–£–ì–û–í–ê–Ø:${NC} 250‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1200‚ÇΩ)"
echo -e "${RED}üèòÔ∏è –ú–ê–ú–ê–°–ï–í–û:${NC} 250‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1200‚ÇΩ)"
echo -e "${CYAN}üè≠ –ü–†–ò–ë–†–ï–ñ–ù–´–ô:${NC} 300‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1500‚ÇΩ) - –ü–†–û–ú–ó–û–ù–ê"
echo -e "${RED}üèóÔ∏è –ü–†–û–ú–£–ó–ï–õ:${NC} 300‚ÇΩ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ –æ—Ç 1500‚ÇΩ) - –ü–†–û–ú–ó–û–ù–ê"

echo -e "\n${WHITE}üìû –î–æ—Å—Ç–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: 09:00-22:00${NC}"
echo -e "${WHITE}üïê –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: 20-60 –º–∏–Ω—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–π–æ–Ω–∞${NC}"

exit 0